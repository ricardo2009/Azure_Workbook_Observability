{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "\r\n<h1 style=\"color: #1379d2;\"> 🤖 Observability by Azure Workbook </h1>\r\n\r\n<ul>\r\n<li> This workbook is a collection of Azure Monitor queries and visualizations that provide a comprehensive view of your Azure resources. </li>\r\n\r\n\r\n<li> The workbook is designed to be used with the Azure Monitor Logs service. </li>\r\n</ul>\r\n\r\n\r\n\r\n"
            },
            "customWidth": "70",
            "name": "text - 8"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "199eea3c-8bcd-476b-9725-bd30f531678a",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "label": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  }
                },
                {
                  "id": "f41ba5f7-61b4-457e-8700-2e4e70d69264",
                  "version": "KqlParameterItem/1.0",
                  "name": "LogAnalyticsWorkspace",
                  "label": "Log Analytics Workspace",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n| project id",
                  "crossComponentResources": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "bd401b11-047b-4fa5-9a5d-6eef4d5195d4",
                  "version": "KqlParameterItem/1.0",
                  "name": "timerange",
                  "label": "Time Range",
                  "type": 4,
                  "value": {
                    "durationMs": 86400000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ]
                  }
                },
                {
                  "id": "f3a9fee7-3c74-419a-8c60-5587da42bde1",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[{ \"value\": \"true\", \"label\": \"Yes\"}, { \"value\": \"false\", \"label\": \"No\", \"selected\":true }]"
                }
              ],
              "style": "formVertical",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "30",
            "name": "parameters - 0"
          }
        ],
        "exportParameters": true
      },
      "name": "Header"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "toolbar",
        "links": [
          {
            "id": "d80ce600-b288-4267-93cb-a01223365415",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "postText": "Azure Resources Overview",
            "style": "link",
            "icon": "Monitoring"
          },
          {
            "id": "f8592a17-308d-4e87-84ef-db28bf73278c",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Azure AD",
            "subTarget": "Azure AD",
            "postText": "Azure Active Directory Details",
            "style": "link",
            "icon": "PersonWithFriend"
          },
          {
            "id": "21ca81a0-362f-44f6-9e03-5f02d01ebd0e",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Compute",
            "subTarget": "Compute",
            "postText": "Azure Compute Resources",
            "style": "link",
            "icon": "Gear"
          },
          {
            "id": "09d80d03-14c3-4d30-8c41-b04298948227",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Data",
            "subTarget": "Data",
            "postText": "Azure Data Resources",
            "style": "link",
            "icon": "Log"
          },
          {
            "id": "c9e2bc71-c876-411f-8724-cf56f33b274d",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Infrastructure",
            "subTarget": "Infrastructure",
            "postText": "Azure Infrastructure Resources",
            "style": "link",
            "icon": "Columns"
          },
          {
            "id": "dc85b815-0d7e-4f7a-b933-127263f6b7f5",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Networking",
            "subTarget": "Networking",
            "postText": "Azure Networking Resources",
            "style": "link",
            "icon": "Connect"
          },
          {
            "id": "c9e2bc71-c876-411f-8724-cf56f33b274d",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Security",
            "subTarget": "Security",
            "postText": "Azure Security Resources",
            "style": "link",
            "icon": "Lock"
          },
          {
            "id": "dc85b815-0d7s-4f7a-b933-127263f6b7f5",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Cost",
            "subTarget": "Cost",
            "postText": "Azure Cost Resources",
            "style": "link",
            "icon": "SmileyHappy"
          },
          {
            "id": "dc85b815-0d7d-4f7a-b933-127263f6b7f5",
            "cellValue": "TabMain",
            "linkTarget": "parameter",
            "linkLabel": "Well Architected",
            "subTarget": "Well Architected",
            "postText": "Azure Well Architected Compliance",
            "style": "link",
            "icon": "Diagnostics"
          }
        ]
      },
      "name": "links - 3",
      "styleSettings": {
        "margin": "10px",
        "padding": "10px",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Overview\r\n<BR>\r\nThe view of resources are organized by number of [Resource Providers](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-providers-and-types), improvements and security issues and recommendations.\r\n<BR>\r\nThe types of resources are listed here: [Resource Providers](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers)\r\n<BR>",
              "style": "info"
            },
            "name": "text - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type != \"microsoft.insights/actiongroups\"\r\nand type != \"microsoft.operationsmanagement/solutions\"\r\nand type != \"microsoft.insights/workbooks\"\r\nand type != \"microsoft.operationalinsights/querypacks\"\r\nand type != \"microsoft.portal/dashboards\"\r\nand type != \"microsoft.insights/datacollectionrules\"\r\nand type != \"microsoft.insights/scheduledqueryrules\"\r\nand type != \"microsoft.devtestlab/schedules\"\r\nand type != \"microsoft.compute/virtualmachines/extensions\"\r\nand type != \"microsoft.insights/components\"\r\nand type != \"microsoft.cdn/profiles/endpoints\"\r\nand type != \"microsoft.insights/metricalerts\"\r\nand type != \"microsoft.compute/snapshots\"\r\nand type != \"microsoft.compute/proximityplacementgroups\"\r\nand type != \"microsoft.alertsmanagement/smartdetectoralertrules\"\r\nand type != \"microsoft.compute/restorepointcollections\"\r\nand type != \"microsoft.network/privatednszones/virtualnetworklinks\"\r\nand type != \"microsoft.notificationhubs/namespaces/notificationhubs\"\r\nand type != \"microsoft.network/networkintentpolicies\"\r\nand type != \"microsoft.insights/autoscalesettings\"\r\nand type != \"microsoft.web/sites/slots\"\r\nand type != \"microsoft.insights/webtests\"\r\nand type != \"microsoft.insights/activitylogalerts\"\r\nand type != \"microsoft.insights/privatelinkscopes\"\r\nand type != \"microsoft.resourcegraph/queries\"\r\nand type != \"microsoft.network/ddosprotectionplans\"\r\nand type != \"microsoft.compute/galleries\"\r\nand type != \"microsoft.visualstudio/account\"\r\n| extend\r\n        ['Type'] = split(type,'.')\r\n| summarize count(id) by tostring(['Type'][1])\r\n| order by count_id desc",
              "size": 0,
              "title": "Resources by Type",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Type_1",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_id",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false
              }
            },
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "advisorresources\r\n| where isnotempty(properties.category)\r\n| summarize count(id) by tostring(properties.category)",
              "size": 1,
              "title": "Advisories by Category",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "advisorresources\r\n| where isnotempty(properties.impact)\r\n| summarize count(id) by tostring(properties.impact)",
              "size": 1,
              "title": "Advisories by Impact",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/securescores\"\r\n| extend ['Score'] = ((todouble(properties.score.percentage)) * 100)\r\n    |join kind=leftouter (\r\n     resourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | project subscriptionId,name) on $left.subscriptionId == $right.subscriptionId\r\n| project ['Subscription']=name1,['Score']\r\n| order by ['Score'] asc\r\n",
              "size": 0,
              "title": "Subscriptions Security Score",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "tiles",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Score",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Subscription",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Score",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": ">=",
                        "thresholdValue": "80",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": ">=",
                        "thresholdValue": "50",
                        "representation": "2",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "<=",
                        "thresholdValue": "50",
                        "representation": "4",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Blank",
                        "text": "{0}{1}"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal"
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "50",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\" \r\n| mv-expand State = properties.statusPerInitiative\r\n| where State.assessmentStatus.code == 'Unhealthy'\r\n    |join kind=leftouter (\r\n     resourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | project subscriptionId,name) on $left.subscriptionId == $right.subscriptionId\r\n| summarize count(id) by ['Subscriptions']=name1\r\n| order by count_id",
              "size": 0,
              "title": "Assessments by Subscriptions",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Subscriptions",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_id",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "query - 2"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TabMain",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "OverviewG"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Active Directory\r\n<BR>\r\nThis section is dedicated to give an overall view and health of Active Directory. Some of the information presented here require additional logging configuration at your Azure Active Directory Monitoring blade. For more information regarding Azure Active Directory, click the following link:  [What is Azure Active Directory?](https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-whatis).\r\n<BR>",
              "style": "info"
            },
            "name": "text - 6"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| summarize toint(count(UserPrincipalName)) by bin(TimeGenerated, 5m),OperationName\r\n| render timechart",
                    "size": 1,
                    "title": "Current Sign-In",
                    "timeContextFromParameter": "timerange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{LogAnalyticsWorkspace}"
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| summarize toint(count(UserPrincipalName)) by bin(TimeGenerated, 1d),OperationName",
                    "size": 1,
                    "title": "Daily Sign-In",
                    "timeContextFromParameter": "timerange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{LogAnalyticsWorkspace}"
                    ],
                    "visualization": "barchart"
                  },
                  "customWidth": "50",
                  "name": "query - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| where isnotnull (LocationDetails.city)\r\n| summarize arg_max(CorrelationId, *) by CorrelationId\r\n| project [\"City\"]= LocationDetails.city, LocationDetails.geoCoordinates.longitude, LocationDetails.geoCoordinates.latitude",
                    "size": 2,
                    "title": "Sign-In Heat Map",
                    "timeContextFromParameter": "timerange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{LogAnalyticsWorkspace}"
                    ],
                    "visualization": "map",
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "latitude": "LocationDetails_geoCoordinates_latitude",
                      "longitude": "LocationDetails_geoCoordinates_longitude",
                      "sizeAggregation": "Sum",
                      "labelSettings": "City",
                      "legendMetric": "City",
                      "legendAggregation": "Count",
                      "itemColorSettings": {
                        "nodeColorField": "City",
                        "colorAggregation": "Count",
                        "type": "heatmap",
                        "heatmapPalette": "hotCold"
                      }
                    }
                  },
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| project TimeGenerated,OperationName,[\"Country\"]= LocationDetails.countryOrRegion,[\"State\"]= LocationDetails.state,[\"City\"]= LocationDetails.city,[\"Device Details\"]=DeviceDetail.operatingSystem,[\"App\"]=ClientAppUsed,[\"App Details\"]=DeviceDetail.browser,[\"Access\"]=AppDisplayName,IPAddress,UserPrincipalName",
                    "size": 2,
                    "showAnalytics": true,
                    "title": "Sign-In Details",
                    "timeContextFromParameter": "timerange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{LogAnalyticsWorkspace}"
                    ],
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "name": "query - 3"
                }
              ]
            },
            "name": "Sign-In SubTab"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TabMain",
        "comparison": "isEqualTo",
        "value": "Azure AD"
      },
      "name": "Sign-In"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Compute\r\n<BR>\r\nAzure offers a number of ways to host your application code. The term compute refers to the hosting model for the computing resources that your application runs on. A complete solution may incorporate two or more compute services.\r\n<br>\r\nMore details on: [Choose an Azure compute service for your application](https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/compute-decision-tree)\r\n<BR>\r\n",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "text - 4"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "nav",
              "links": [
                {
                  "id": "d0173dc3-7ea0-48fe-be0a-879097b2793f",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual Machines",
                  "subTarget": "VirtualMachines",
                  "style": "primary"
                },
                {
                  "id": "9cb9fcc5-e245-4b8e-aa0b-39757cc7034e",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Kubernetes Service",
                  "subTarget": "Azure Kubernetes Service",
                  "style": "primary"
                },
                {
                  "id": "5c226bff-5f87-44b4-9e01-5b365c79af57",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "App Services",
                  "subTarget": "AppService",
                  "style": "primary"
                },
                {
                  "id": "afdcec4b-1fa2-4ffd-b7fc-225d6d082430",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "OpenShift Clusters",
                  "subTarget": "ARO",
                  "style": "primary"
                },
                {
                  "id": "c0f5b5f5-0b9f-4b9f-8b1f-1f1f2f2f2f2f",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Container Instances",
                  "subTarget": "ContainerInstances",
                  "style": "primary"
                },
                {
                  "id": "e99fd5fc-514a-4636-832d-b7f05fd8c94e",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Arc",
                  "subTarget": "AzureArc",
                  "style": "primary"
                }
              ]
            },
            "name": "links - 2"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Azure Virtual Machines\r\n<BR>\r\nAzure Virtual Machines (VM) is one of several types of on-demand, scalable computing resources that Azure offers. Typically, you choose a VM when you need more control over the computing environment than the other choices offer.\r\n<BR>\r\nMore details: [Virtual machines in Azure](https://docs.microsoft.com/en-us/azure/virtual-machines/)\r\n<BR>\r\n"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "670b43a6-84d2-4d6c-95f6-709d725090f1",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Virtual Machines",
                        "subTarget": "Virtual Machines",
                        "preText": "Virtual Machines",
                        "postText": "Proactive Settings",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "b6570952-10ee-4894-8113-b85e0d8c55f5",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "VM Disks",
                        "subTarget": "VM Disks",
                        "postText": "Proactive Settings",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "47d20f37-f63f-4eab-bf40-c5de5f0dcb6a",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "VM Health",
                        "subTarget": "VMHealth",
                        "postText": "Reactive Analysis",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<BR>"
                  },
                  "name": "text - 6"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\" and properties.extended.instanceView.powerState.displayStatus != 'VM running'\r\n| summarize count() by tostring(properties.extended.instanceView.powerState.displayStatus)",
                          "size": 1,
                          "title": "Virtual Machines Not Running",
                          "noDataMessage": "No Errors found here!",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "properties_extended_instanceView_powerState_displayStatus",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "30",
                        "name": "query - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| summarize count() by tostring(properties.storageProfile.osDisk.osType)",
                          "size": 1,
                          "title": "VMs by OS",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "properties_storageProfile_osDisk_osType",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "properties_storageProfile_osDisk_osType",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "count_",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "20",
                        "name": "query - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend\r\n    JoinID = toupper(id)\r\n| join kind=leftouter (resources\r\n    | where type == \"microsoft.compute/virtualmachines/extensions\"\r\n    | extend\r\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\r\n        ['Performance Agent'] = iif(properties.publisher == 'Microsoft.Azure.Performance.Diagnostics',0,1),\r\n        ['Monitor Agent'] = iif(properties.publisher == 'Microsoft.EnterpriseCloud.Monitoring',0,1),\r\n        ['Guest-Level Monitoring'] = iif(properties.type == 'IaaSDiagnostics',0,1)\r\n    | project ['Performance Agent'],['Monitor Agent'],['Guest-Level Monitoring'],VMId) on $left.JoinID == $right.VMId\r\n| extend ['Boot Diagnostics'] = iif(properties.diagnosticsProfile.bootDiagnostics.enabled == 'true',0,1)\r\n| summarize ['Virtual Machines']=count(JoinID),['Missing Boot Diagnostics']=sum(['Boot Diagnostics']),['Missing Performance Agent']=sum(['Performance Agent']),['Missing Monitor Agent']=sum(['Monitor Agent']),['Missing Guest Monitoring']=sum(['Guest-Level Monitoring'])",
                          "size": 1,
                          "title": "Virtual Machines Missing Agents",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "unstackedbar",
                          "tileSettings": {
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "chartSettings": {
                            "xAxis": "Virtual Machines",
                            "group": null,
                            "createOtherGroup": 0,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Virtual Machines",
                                "color": "blueDarkDark"
                              },
                              {
                                "seriesName": "Boot Diagnostics",
                                "color": "blueDark"
                              },
                              {
                                "seriesName": "Performance Agent",
                                "color": "blue"
                              },
                              {
                                "seriesName": "Monitor Agent",
                                "color": "lightBlue"
                              },
                              {
                                "seriesName": "Guest-Level Monitoring",
                                "color": "turquoise"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 2"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Resources \r\n| where type == \"microsoft.compute/virtualmachines\" and properties.hardwareProfile.vmSize contains '_B'\r\n| extend ['VM Size'] = properties.hardwareProfile.vmSize\r\n| summarize count(id) by tostring(['VM Size'])\r\n| order by count_id desc",
                          "size": 0,
                          "title": "Number of Virtual Machines by Wrong Size",
                          "noDataMessage": "No Errors found here!",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "VM Size",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "colors",
                                "thresholdsGrid": [
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "_B",
                                    "representation": "redBright",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            "leftContent": {
                              "columnMatch": "count_id",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 5"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "Heartbeat \r\n| summarize max(TimeGenerated) by ['VM Name']=_ResourceId,RemoteIPCountry,RemoteIPLatitude,RemoteIPLongitude\r\n| project-away max_TimeGenerated",
                          "size": 0,
                          "title": "Virtual Machines per Azure Regions",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{LogAnalyticsWorkspace}"
                          ],
                          "visualization": "map",
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "locInfoColumn": "VM Name",
                            "latitude": "RemoteIPLatitude",
                            "longitude": "RemoteIPLongitude",
                            "sizeSettings": "RemoteIPCountry",
                            "sizeAggregation": "Sum",
                            "labelSettings": "RemoteIPCountry",
                            "legendMetric": "VM Name",
                            "numberOfMetrics": 5,
                            "legendAggregation": "Count",
                            "itemColorSettings": {
                              "nodeColorField": "RemoteIPCountry",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 6"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| mv-expand ['NIC']=properties.networkProfile.networkInterfaces\r\n| extend\r\n    JoinID = toupper(id),\r\n    NicID = toupper(NIC.id),\r\n    OSName = tostring(properties.osProfile.computerName),\r\n    OSType = tostring(properties.storageProfile.osDisk.osType),\r\n    VMSize = tostring(properties.hardwareProfile.vmSize)\r\n| join kind=leftouter (resources\r\n    | where type == \"microsoft.compute/virtualmachines/extensions\"\r\n    | extend\r\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\r\n        ['Performance Agent'] = iif(properties.publisher == 'Microsoft.Azure.Performance.Diagnostics',1,0),\r\n        ['Monitor Agent'] = iif(properties.publisher == 'Microsoft.EnterpriseCloud.Monitoring',1,0),\r\n        ['Guest-Level Monitoring'] = iif(properties.type == 'IaaSDiagnostics',1,0),\r\n        ['Antimalware Agent'] = iif(properties.type == 'IaaSAntimalware',1,0)\r\n    | summarize ['Performance Agent']=sum(['Performance Agent']),['Monitor Agent']=sum(['Monitor Agent']),['Guest-Level Monitoring']=sum(['Guest-Level Monitoring']),['Antimalware Agent']=sum(['Antimalware Agent']) by VMId) on $left.JoinID == $right.VMId\r\n    | join kind=leftouter (resources\r\n    | where type == 'microsoft.network/networkinterfaces'\r\n    | extend \r\n        IDS = toupper(id),\r\n        ['Accelerated Networking'] = iif(properties.enableAcceleratedNetworking == 'true','True','False'),\r\n        ['NSG'] = split(properties.networkSecurityGroup.id,'/')[8]\r\n    | project IDS,['Accelerated Networking'],['NSG']) on $left.NicID == $right.IDS    \r\n| extend ['Boot Diagnostics'] = iif(properties.diagnosticsProfile.bootDiagnostics.enabled == 'true','True','False'),\r\n        ['Performance Diagnostics'] = iif(['Performance Agent'] == 1,'True','False'),\r\n        ['Monitor Agent'] = iif(['Monitor Agent'] == 1,'True','False'),\r\n        ['Guest-Level Monitoring'] = iif(['Guest-Level Monitoring'] == 1,'True','False'),\r\n        ['Antimalware Agent'] = iif(['Antimalware Agent'] == 1,'True','False')\r\n    | join kind=leftouter (resources\r\n            | where type == \"microsoft.compute/availabilitysets\"\r\n            | mv-expand Prop = properties.virtualMachines\r\n            | extend VMID = toupper(Prop.id)            \r\n            | project VMID,['Fault Domain']=tostring(properties.platformFaultDomainCount),['Update Domain']=tostring(properties.platformUpdateDomainCount)) on $left.JoinID == $right.VMID\r\n| where VMSize contains '_B' or ['Accelerated Networking'] == 'False'\r\n| summarize by ['Resource Group']=resourceGroup,['VM Name']=id,['OS Type']=OSType,[\"VM State\"]=tostring(properties.extended.instanceView.powerState.displayStatus),['VM Size']=VMSize,tostring(['Boot Diagnostics']),['Monitor Agent'],['Performance Diagnostics'],['Guest-Level Monitoring'],['Antimalware Agent'],['Hybrid Benefits']=tostring(properties.licenseType),['Accelerated Networking'],tostring(['NSG']),['Zone']=tostring(zones),['Fault Domain'],['Update Domain'],[\"Local Admin\"]=tostring(properties.osProfile.adminUsername)",
                          "size": 2,
                          "title": "Virtual Machines Inventory Details",
                          "noDataMessage": "No Errors found here!",
                          "noDataMessageStyle": 3,
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "VM State",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "VM deallocated",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "VM Size",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "_B",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "tooltipFormat": {
                                  "tooltip": "It's not recommended to use \"B\" family in production environments."
                                }
                              },
                              {
                                "columnMatch": "Boot Diagnostics",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Monitor Agent",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "False"
                                }
                              },
                              {
                                "columnMatch": "Performance Diagnostics",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Guest-Level Monitoring",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Antimalware Agent",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "False"
                                }
                              },
                              {
                                "columnMatch": "Hybrid Benefits",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Not Used"
                                }
                              },
                              {
                                "columnMatch": "Accelerated Networking",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "NSG",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Not Configured"
                                }
                              },
                              {
                                "columnMatch": "Fault Domain",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Not Set"
                                }
                              },
                              {
                                "columnMatch": "Update Domain",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Not Set"
                                }
                              },
                              {
                                "columnMatch": "Antimalware Enabled",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "FALSE",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Realtime Protection",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "FALSE",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 4"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<BR>"
                        },
                        "name": "text - 7"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Virtual Machines"
                  },
                  "name": "VMs"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/disks\" \r\n| summarize count() by tostring(properties.diskState)",
                          "size": 1,
                          "title": "Disks by State",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "properties_diskState",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "hotCold"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/disks\"\r\n| where isnotnull(properties.tier)\r\n| summarize count() by tostring(properties.tier)",
                          "size": 1,
                          "title": "Disks by Tier",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "properties_tier",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                },
                                "emptyValCustomText": "P0"
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 5"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.compute/disks\"\r\n| where properties.diskState == 'Unattached' or properties.diskIOPSReadWrite <= 120\r\n| extend tier = case(properties.tier startswith 'P',properties.tier,sku.tier)\r\n| project [\"Resource Group\"]=resourceGroup, [\"Disk Name\"]=id, [\"Location\"]=location, [\"Disk State\"]=properties.diskState,['Tier']=tier ,[\"Disk Size (GB)\"]=properties.diskSizeGB, [\"Disk IOPS Limit\"]=properties.diskIOPSReadWrite, [\"Disk Limit MBps\"]=properties.diskMBpsReadWrite,['Encryption']=properties.encryption.type,['Disk SKU']=sku.name,['Network Connectivity']=properties.networkAccessPolicy",
                          "size": 2,
                          "title": "Disk State",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Disk State",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Attached",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Reserved",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Unattached",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Tier",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Standard",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "tooltipFormat": {
                                  "tooltip": "We recommend using Premium disks on production VMs"
                                }
                              },
                              {
                                "columnMatch": "Disk IOPS Limit",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 240,
                                  "max": 2300,
                                  "palette": "redGreen"
                                },
                                "tooltipFormat": {
                                  "tooltip": "IOPS, or Input/output Operations Per Second, is the number of requests that your application is sending to the storage disks in one second. An input/output operation could be read or write, sequential, or random. Online Transaction Processing (OLTP) applications like an online retail website need to process many concurrent user requests immediately. The user requests are insert and update intensive database transactions, which the application must process quickly. Therefore, OLTP applications require very high IOPS. Such applications handle millions of small and random IO requests. If you have such an application, you must design the application infrastructure to optimize for IOPS."
                                }
                              },
                              {
                                "columnMatch": "Disk Limit MBps",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 50,
                                  "max": 150,
                                  "palette": "redGreen"
                                }
                              },
                              {
                                "columnMatch": "Encryption",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Missing"
                                }
                              },
                              {
                                "columnMatch": "Disk SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Standard_LRS",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "tooltipFormat": {
                                  "tooltip": "We do not recommend using HDD Disks on Production Environments"
                                }
                              },
                              {
                                "columnMatch": "Network Connectivity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "AllowAll",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "VM Disks"
                  },
                  "name": "Disk"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "10c8ffb3-72f9-4335-9de8-67429869fadf",
                              "version": "KqlParameterItem/1.0",
                              "name": "VirtualMachines",
                              "label": "Virtual Machines",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 8"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookaaebce8a-599b-4fb3-b63e-258eeaa9a88d",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "VirtualMachines",
                          "resourceIds": [
                            "{VirtualMachines}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Available Memory Bytes",
                              "aggregation": 2
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--OS Disk Queue Depth",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk Queue Depth",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--CPU Credits Consumed",
                              "aggregation": 7
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--CPU Credits Remaining",
                              "aggregation": 7
                            }
                          ],
                          "title": "Virtual Machines",
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Available Memory Bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 1000,
                                  "max": 1000000,
                                  "palette": "redGreen"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Available Memory Bytes Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Queue Depth",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 2,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Queue Depth Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Data Disk Queue Depth",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 2,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Data Disk Queue Depth Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--CPU Credits Consumed",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--CPU Credits Consumed Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--CPU Credits Remaining",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 10,
                                  "max": 1000,
                                  "palette": "redGreen"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--CPU Credits Remaining Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.compute/virtualmachines--Percentage CPU",
                                "label": "Percentage CPU (Max)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Percentage CPU Timeline",
                                "label": "Percentage CPU Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Available Memory Bytes",
                                "label": "Available Memory Bytes (Preview) (Min)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Available Memory Bytes Timeline",
                                "label": "Available Memory Bytes (Preview) Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--OS Disk Queue Depth",
                                "label": "OS Disk Queue Depth (Max)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--OS Disk Queue Depth Timeline",
                                "label": "OS Disk Queue Depth Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Data Disk Queue Depth",
                                "label": "Data Disk Queue Depth (Max)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--Data Disk Queue Depth Timeline",
                                "label": "Data Disk Queue Depth Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--CPU Credits Consumed",
                                "label": "CPU Credits Consumed (Count)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--CPU Credits Consumed Timeline",
                                "label": "CPU Credits Consumed Timeline"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--CPU Credits Remaining",
                                "label": "CPU Credits Remaining (Count)"
                              },
                              {
                                "columnId": "microsoft.compute/virtualmachines--CPU Credits Remaining Timeline",
                                "label": "CPU Credits Remaining Timeline"
                              }
                            ]
                          },
                          "exportedParameters": [
                            {
                              "fieldName": "Name",
                              "parameterName": "Computer",
                              "parameterType": 5
                            }
                          ],
                          "showExportToExcel": true
                        },
                        "name": "metric - 9"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook4f77b734-7b22-47e1-8dd6-cafc21c4bf08",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "Computer",
                          "resourceIds": [
                            "{Computer}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                              "aggregation": 3,
                              "splitBy": null,
                              "columnName": "CPU Percentage"
                            }
                          ],
                          "title": "CPU Utilization",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "CPU Percentage Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Percentage CPU",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000
                          }
                        },
                        "customWidth": "33",
                        "name": "metric - 3"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookc50cc379-ea3d-44ad-b645-0a9c592f6547",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "Computer",
                          "resourceIds": [
                            "{Computer}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Available Memory Bytes",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "Available Memory"
                            }
                          ],
                          "title": "Memory Utilization",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "customWidth": "33",
                        "name": "metric - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "InsightsMetrics\r\n| where Namespace == 'LogicalDisk' and Name == 'FreeSpacePercentage'\r\n| extend ['Disk']=replace_string(Tags,'{\"vm.azm.ms/mountId\":\"','')\r\n| extend ['DiskID']=replace_string(['Disk'],'\"}','')\r\n| summarize avg(Val) by Computer,['DiskID']",
                          "size": 1,
                          "title": "Disks Free Space",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "crossComponentResources": [
                            "{Computer}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TimeGenerated",
                                "formatter": 5
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "DiskID",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "blue"
                              }
                            },
                            "leftContent": {
                              "columnMatch": "avg_Val",
                              "formatter": 8,
                              "formatOptions": {
                                "min": 0,
                                "max": 100,
                                "palette": "redGreen"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 5"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookef0d701e-ca76-4025-96ef-4f0ac95dcff2",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "Computer",
                          "resourceIds": [
                            "{Computer}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--OS Disk Queue Depth",
                              "aggregation": 3,
                              "columnName": "OS Disk Queue"
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--OS Disk Target IOPS",
                              "aggregation": 3,
                              "columnName": "OS Disk IOPS"
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--OS Disk Read Operations/Sec",
                              "aggregation": 3,
                              "columnName": "OS Disk Read/s"
                            }
                          ],
                          "title": "OS Disk Utilization",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "OS Disk Queue",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 2,
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "OS Disk Queue Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "OS Disk IOPS Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "OS Disk Read/s Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "OS Disk Write/s Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Queue Depth",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "Data Disk Queue Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Data Disk Queue Depth",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Target IOPS",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "OS DIsk Read/s Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Read Bytes/sec",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 11,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Read Operations/Sec",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 31,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Write Operations/Sec",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 31,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "IOPS Burst Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Max Burst IOPS",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "OS Disk Bandwidth Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Bandwidth Consumed Percentage",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "IO Credits Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--OS Disk Used Burst IO Credits Percentage",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Aggregation",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Value",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Timeline",
                                "formatter": 9
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "OS Disk Queue",
                                "label": "OS Disk Queue"
                              },
                              {
                                "columnId": "OS Disk Queue Timeline",
                                "label": "OS Disk Queue Timeline"
                              },
                              {
                                "columnId": "OS Disk IOPS",
                                "label": "OS Disk IOPS"
                              },
                              {
                                "columnId": "OS Disk IOPS Timeline",
                                "label": "OS Disk IOPS Timeline"
                              },
                              {
                                "columnId": "OS Disk Read/s",
                                "label": "OS Disk Read/s"
                              },
                              {
                                "columnId": "OS Disk Read/s Timeline",
                                "label": "OS Disk Read/s Timeline"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "metric - 2"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook8a178b07-228a-4073-861e-dd638e213021",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "metricScope": 0,
                          "resourceParameter": "Computer",
                          "resourceIds": [
                            "{Computer}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk Queue Depth",
                              "aggregation": 3,
                              "columnName": "Data Disk Queue"
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk Target IOPS",
                              "aggregation": 3,
                              "columnName": "Data Disk IOPS"
                            },
                            {
                              "namespace": "microsoft.compute/virtualmachines",
                              "metric": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec",
                              "aggregation": 3,
                              "columnName": "Data Disk Read/s"
                            }
                          ],
                          "title": "Data Disk Utilization",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Data Disk Queue",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 2,
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "Data Disk Queue Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Data Disk IOPS Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Data Disk Read/s Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Data Disk Queue Depth",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Data Disk Target IOPS",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.compute/virtualmachines--Data Disk Read Operations/Sec",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 31,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "Data Disk Queue",
                                "label": "Data Disk Queue"
                              },
                              {
                                "columnId": "Data Disk Queue Timeline",
                                "label": "Data Disk Queue Timeline"
                              },
                              {
                                "columnId": "Data Disk IOPS",
                                "label": "Data Disk IOPS"
                              },
                              {
                                "columnId": "Data Disk IOPS Timeline",
                                "label": "Data Disk IOPS Timeline"
                              },
                              {
                                "columnId": "Data Disk Read/s",
                                "label": "Data Disk Read/s"
                              },
                              {
                                "columnId": "Data Disk Read/s Timeline",
                                "label": "Data Disk Read/s Timeline"
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "metric - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "VMConnection \r\n| where BytesSent > 0\r\n| summarize max(TimeGenerated) by Computer,_ResourceId,BytesSent,BytesReceived,RemoteCountry,RemoteLongitude,RemoteLatitude",
                          "size": 0,
                          "title": "VM Output Data Flow",
                          "timeContextFromParameter": "timerange",
                          "exportedParameters": [
                            {
                              "fieldName": "RemoteLongitude",
                              "parameterName": "RemoteLongitude",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "RemoteLatitude",
                              "parameterName": "RemoteLatitude",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "crossComponentResources": [
                            "{Computer}"
                          ],
                          "visualization": "map",
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "locInfoColumn": "_ResourceId",
                            "latitude": "RemoteLatitude",
                            "longitude": "RemoteLongitude",
                            "sizeAggregation": "Sum",
                            "labelSettings": "RemoteCountry",
                            "legendMetric": "BytesSent",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "nodeColorField": "BytesSent",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed"
                            },
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 5"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "VMConnection\r\n| where BytesSent > 0\r\n| summarize max(TimeGenerated) by ['Name']=_ResourceId,RemoteCountry,ProcessName,BytesSent,DestinationIp,Protocol,DestinationPort\r\n| project-away max_TimeGenerated",
                          "size": 0,
                          "title": "VM Output Data Flow Details",
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachines",
                          "crossComponentResources": [
                            "{Computer}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "BytesSent",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 7"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "VMHealth"
                  },
                  "name": "VMHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "VirtualMachines"
            },
            "name": "Virtual Machines"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Azure Kubernetes Service\r\n<br>\r\nThis section is dedicated to give an overall view and health of [Azure Kubernetes Service (AKS)](https://docs.microsoft.com/en-us/azure/aks/intro-kubernetes) Clusters, Pods and Services.\r\n<br>\r\n<br>\r\n<br>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "6a12e15a-9bae-449c-9ce5-7992f1807b0c",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Clusters",
                        "subTarget": "Clusters",
                        "postText": "Proactive Settings",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "3bc865f2-8ae7-4eaf-a1c5-38573de4b80e",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Clusters Health",
                        "subTarget": "ClustersHealth",
                        "postText": "Cluster's Overall health",
                        "style": "link",
                        "icon": "Diagnostics"
                      },
                      {
                        "id": "cc911769-c1b8-48f3-9729-52747cf285f5",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Pods",
                        "subTarget": "Pods",
                        "postText": "Reactive Analysis",
                        "style": "link",
                        "icon": "Diagnostics"
                      },
                      {
                        "id": "ed7556a2-58a5-49a3-8d51-ea7a8244222a",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Kubernetes Events",
                        "subTarget": "Events",
                        "postText": "Kubernetes Events",
                        "style": "link",
                        "icon": "Expand"
                      },
                      {
                        "id": "7e6d8855-beea-45b7-9564-4b2188eb61bb",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Persistent Volumes",
                        "subTarget": "PV",
                        "postText": "Kubernetes Events",
                        "style": "link",
                        "icon": "Insert"
                      },
                      {
                        "id": "f7906e39-f639-4bea-a1fa-67d7650d149c",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Cluster Network",
                        "subTarget": "Ncluster",
                        "postText": "Network Cluster",
                        "style": "link",
                        "icon": "Globe"
                      },
                      {
                        "id": "cface829-4a8d-463c-bd36-523e87e012fb",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Deployments",
                        "subTarget": "Deploy",
                        "postText": "Deployments",
                        "style": "link",
                        "icon": "Start"
                      },
                      {
                        "id": "0b623063-5345-4e30-8374-b99713127122",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Kubelet",
                        "subTarget": "Kubelet",
                        "postText": "Kubelet",
                        "style": "link",
                        "icon": "Console"
                      },
                      {
                        "id": "ca4ce6ee-9971-4350-b33b-8471da4eab04",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Data Usage",
                        "subTarget": "Dusage",
                        "postText": "Data Usage",
                        "style": "link",
                        "icon": "Columns"
                      },
                      {
                        "id": "a080ef44-1622-4381-8cdf-e17f06ea4823",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Disk IO",
                        "subTarget": "Diskio",
                        "postText": "Disk IO",
                        "style": "link",
                        "icon": "Swap"
                      },
                      {
                        "id": "56c30072-acb0-4140-8960-66e74b604467",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Backend",
                        "subTarget": "vmss",
                        "postText": "Backend",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "c0b0b2f1-3b8f-4b9f-8b9f-8b9f8b9f8b9f",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Application Gateway",
                        "subTarget": "appgw",
                        "postText": "Application Gateway",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "c0b0b2f1-3b8f-4b9f-8b9f-8b9f8b9f8b9f",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Azure Firewall AKS",
                        "subTarget": "fwaks",
                        "postText": "Azure Firewall AKS",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "c0b0b2f1-3b8f-4b9f-8b9f-8b9f8b9f8b9f",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Certificates",
                        "subTarget": "certs",
                        "postText": "Certificates",
                        "style": "link",
                        "icon": "Tools"
                      }
                    ]
                  },
                  "name": "links - 9",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<br>\r\n## Kubernetes clusters\r\n<br>\r\nFor more information access: [Azure Kubernetes Cluster Architecture](https://docs.microsoft.com/en-us/azure/aks/concepts-clusters-workloads#kubernetes-cluster-architecture)\r\n<br>"
                        },
                        "name": "text - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| mv-expand dr = properties.agentPoolProfiles\r\n| summarize  sum(toint(dr.[\"count\"])) by name",
                          "size": 0,
                          "title": "Nodes per Cluster",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "name",
                              "formatter": 1
                            },
                            "subtitleContent": {
                              "columnMatch": "sum_dr_count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              }
                            },
                            "showBorder": false,
                            "sortCriteriaField": "sum_dr_count",
                            "sortOrderField": 2,
                            "size": "auto"
                          }
                        },
                        "name": "query - 7"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| summarize count(id) by tostring(properties.kubernetesVersion)\r\n| order by count_id desc ",
                          "size": 1,
                          "title": "Clusters per Version",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "areachart",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "properties_kubernetesVersion",
                              "formatter": 1
                            },
                            "subtitleContent": {
                              "columnMatch": "Cont",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              }
                            },
                            "showBorder": false
                          },
                          "chartSettings": {
                            "group": "properties_kubernetesVersion",
                            "createOtherGroup": 5
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 7"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| mv-expand dr = properties.agentPoolProfiles\r\n| summarize count(id) by tostring(dr.vmSize)",
                          "size": 1,
                          "title": "Node Pools by VM Size",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "barchart",
                          "chartSettings": {
                            "createOtherGroup": 5
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| mv-expand dr = properties.agentPoolProfiles\r\n| extend AppR = iif(properties.addonProfiles.httpapplicationrouting.enabled == 'true','true','false'),\r\n        VNET = split(dr.vnetSubnetID,'/'),\r\n        Scalle = iif(dr.enableAutoScaling == 'true','true','false'),\r\n        priv = iif(properties.apiServerAccessProfile.enablePrivateCluster == 'true','true','false'),\r\n        insight = iif(properties.addonProfiles.omsagent.enabled == 'true','true','false'),\r\n        ingress = iif(properties.addonProfiles.ingressApplicationGateway.enabled == 'true','true','false'),\r\n        pupip = iif(dr.enableNodePublicIP == 'true','true','false')\r\n| project [\"Resource Group\"]=resourceGroup,\r\n[\"Cluster Name\"]=id,\r\n[\"Location\"]=location,\r\n[\"Uptime SLA\"]=sku.tier,\r\n[\"Kubernetes Version\"]=properties.kubernetesVersion,\r\n[\"Private Cluster\"]=priv,\r\n[\"Container Insights\"]=insight,\r\n//[\"Outbound Type\"]=properties.networkProfile.outboundType,\r\n//[\"Docker Pod Cidr\"]=properties.networkProfile.podCidr,\r\n//[\"Service Cidr\"]=properties.networkProfile.serviceCidr,\r\n//[\"Docker Bridge Cidr\"]=properties.networkProfile.dockerBridgeCidr,\r\n//[\"Network DNS Service IP\"]=properties.networkProfile.dnsServiceIP,\r\n//[\"FQDN\"]=properties.fqdn,\r\n//[\"HTTP Application Routing\"]=AppR,\r\n//[\"Ingress Controller\"]=ingress,\r\n[\"Node Pool Name\"]=dr.name,\r\n[\"Max Pods\"]=dr.maxPods,\r\n[\"Pool Profile Type\"]=dr.type,\r\n[\"Pool Mode\"]=dr.mode,\r\n[\"Pool OS\"]=dr.osType,\r\n[\"Node Size\"]=dr.vmSize,\r\n//[\"OS Disk Size (GB)\"]=dr.osDiskSizeGB,\r\n[\"Nodes\"]=dr.[\"count\"],\r\n[\"Auto Scalling\"]=Scalle,\r\n[\"Min Nodes\"]=dr.minCount,\r\n[\"Max Nodes\"]=dr.maxCount,\r\n[\"Virtual Network\"]=VNET[8],\r\n[\"VNET Subnet\"]=VNET[10],\r\n[\"Orchestrator Version\"]=dr.orchestratorVersion,\r\n[\"Enable Node Public IP\"]=pupip",
                          "size": 2,
                          "title": "Kubernetes Clusters",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Uptime SLA",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Free",
                                      "representation": {
                                        "text": {
                                          "value": "Free"
                                        },
                                        "backgroundColor": "#00ff00",
                                        "fontColor": "#000000",
                                        "borderColor": "#00ff00"
                                      },
                                      "text": "{0}{1}",
                                      "tooltip": "Free"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": {
                                        "value": "null",
                                        "representation": "null"
                                      },
                                      "text": "{0}{1}",
                                      "tooltip": "null"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Kubernetes Version",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.24",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.23",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.22",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.21",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.20",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.19",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.18",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.17",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.16",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.15",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.14",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.18",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.19",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.20",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.21",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.22",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.23",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.24",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": {
                                        "value": "null",
                                        "representation": "null"
                                      },
                                      "text": "{0}{1}",
                                      "tooltip": "null"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Private Cluster",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Container Insights",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Node Pool Name",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Max Pods",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 10,
                                  "max": 250,
                                  "palette": "redGreen"
                                }
                              },
                              {
                                "columnMatch": "Pool Profile Type",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Pool Mode",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Pool OS",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Node Size",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "_B",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Nodes",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Auto Scalling",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "green",
                                      "text": "Enabled"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "Disabled"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "redBright",
                                      "text": "Disabled"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Min Nodes",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Max Nodes",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Orchestrator Version",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.17",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.16",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.15",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.14",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.18",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.19",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.20",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.21",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1.22",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Enable Node Public IP",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "LoadBalancer Sku",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Basic",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Ingress Controller",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Clusters"
                  },
                  "name": "AKS-Cluster"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "f11fdcd8-38a5-4c06-b102-dd693bd2caa1",
                              "version": "KqlParameterItem/1.0",
                              "name": "AKSCluster",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 2"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookadbf9640-9cb1-4bdf-bf0a-10b37018ba4a",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.containerservice/managedclusters",
                          "metricScope": 0,
                          "resourceParameter": "AKSCluster",
                          "resourceIds": [
                            "{AKSCluster}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes",
                              "aggregation": 3
                            }
                          ],
                          "title": "Kubernetes Cluster's Health",
                          "resourceLimit": 1000,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "minimumIntegerDigits": 2,
                                    "minimumFractionDigits": 2,
                                    "maximumFractionDigits": 2,
                                    "minimumSignificantDigits": 2,
                                    "maximumSignificantDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage_2",
                                "sortOrder": 2
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage",
                                "label": "CPU Percentage "
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage Timeline",
                                "label": "CPU Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage",
                                "label": "Disk Percentage"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage Timeline",
                                "label": "Disk Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage",
                                "label": "Memory RSS Percentage"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage Timeline",
                                "label": "Memory RSS Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes",
                                "label": "Network In Bytes"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes Timeline",
                                "label": "Network In Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes",
                                "label": "Network Out Bytes"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes Timeline",
                                "label": "Network Out Timeline"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage_2",
                              "sortOrder": 2
                            }
                          ],
                          "showExportToExcel": true
                        },
                        "name": {
                          "value": "Kubernetes Cluster Overview"
                        },
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookadbf9640-9cb1-4bdf-bf0a-10b37018ba4a",
                          "version": "MetricsItem/2.0",
                          "size": 3,
                          "chartType": 0,
                          "resourceType": "microsoft.containerservice/managedclusters",
                          "metricScope": 0,
                          "resourceParameter": "AKSCluster",
                          "resourceIds": [
                            "{AKSCluster}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_safe_to_autoscale",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes-kube_node_status_allocatable_cpu_cores",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Nodes-kube_node_status_allocatable_memory_bytes",
                              "aggregation": 4,
                              "columnName": "Memory Used"
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_current_inflight_requests",
                              "aggregation": 4,
                              "splitBy": "requestKind",
                              "splitBySortOrder": -1,
                              "splitByLimit": 50
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_scale_down_in_cooldown",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unneeded_nodes_count",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.containerservice/managedclusters",
                              "metric": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unschedulable_pods_count",
                              "aggregation": 4
                            }
                          ],
                          "title": "Nodepool's Health",
                          "gridFormatType": 2,
                          "resourceLimit": 1000,
                          "showRefreshButton": true,
                          "showExpandCollapseGrid": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Segment",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_safe_to_autoscale",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "1",
                                      "representation": "up",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "<=",
                                      "thresholdValue": "Default",
                                      "representation": "down",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Ellipsis",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "15ch"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_safe_to_autoscale Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes-kube_node_status_allocatable_cpu_cores",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count",
                                  "customColumnWidthSetting": "30ch"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes-kube_node_status_allocatable_cpu_cores Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true
                                  }
                                }
                              },
                              {
                                "columnMatch": "Memory Used",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_current_inflight_requests",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "startsWith",
                                      "thresholdValue": "1,00",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "5,00",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "5,01",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "aggregation": "Count",
                                  "compositeBarSettings": {
                                    "labelText": "",
                                    "columnSettings": []
                                  }
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_current_inflight_requests Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_scale_down_in_cooldown",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "Timeline",
                                "formatter": 9
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unneeded_nodes_count",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unneeded_nodes_count Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unschedulable_pods_count",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_cpu_usage_percentage Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_disk_usage_percentage Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_memory_rss_percentage Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blueDark"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "minimumIntegerDigits": 2,
                                    "minimumFractionDigits": 2,
                                    "maximumFractionDigits": 2,
                                    "minimumSignificantDigits": 2,
                                    "maximumSignificantDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_in_bytes Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Nodes (PREVIEW)-node_network_out_bytes Timeline",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true,
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 3
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes Timeline",
                                "formatter": {
                                  "id": 5,
                                  "options": {
                                    "palette": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "0",
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        }
                                      ],
                                      "hues": [
                                        "#0072C6",
                                        "#D13438"
                                      ],
                                      "opacity": 0.8,
                                      "compositeBarSettings": {
                                        "labelText": "[\"{value}\"]",
                                        "columnSettings": [
                                          {
                                            "columnName": "microsoft.containerservice/managedclusters-Cluster Autoscaler(PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes",
                                            "color": "blue"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "formatOptions": {
                                    "allowFormatBeautification": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "useGrouping": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 2,
                                    "minimumFractionDigits": 2,
                                    "minimumSignificantDigits": 2,
                                    "maximumIntegerDigits": 2,
                                    "minimumIntegerDigits": 2
                                  },
                                  "currency": "USD",
                                  "currencyDisplay": "symbol",
                                  "locale": "en-US"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler(PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes",
                                "formatter": {
                                  "id": 5,
                                  "options": {
                                    "palette": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "0",
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        }
                                      ],
                                      "hues": [
                                        "#0072C6",
                                        "#D13438"
                                      ],
                                      "opacity": 0.8,
                                      "compositeBarSettings": {
                                        "labelText": "[\"{value}\"]",
                                        "columnSettings": [
                                          {
                                            "columnName": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes",
                                            "color": "blue"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "formatOptions": {
                                    "allowFormatBeautification": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "useGrouping": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 2,
                                    "minimumFractionDigits": 2,
                                    "minimumSignificantDigits": 2,
                                    "maximumIntegerDigits": 2,
                                    "minimumIntegerDigits": 2
                                  },
                                  "currency": "USD",
                                  "currencyDisplay": "symbol",
                                  "locale": "en-US"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes Trend",
                                "formatter": {
                                  "id": 5,
                                  "options": {
                                    "palette": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "0",
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        }
                                      ],
                                      "hues": [
                                        "#0072C6",
                                        "#D13438"
                                      ],
                                      "opacity": 0.8,
                                      "compositeBarSettings": {
                                        "labelText": "[\"{value}\"]",
                                        "columnSettings": [
                                          {
                                            "columnName": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes",
                                            "color": "blue"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "formatOptions": {
                                    "allowFormatBeautification": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "useGrouping": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 2,
                                    "minimumFractionDigits": 2,
                                    "minimumSignificantDigits": 2,
                                    "maximumIntegerDigits": 2,
                                    "minimumIntegerDigits": 2
                                  },
                                  "currency": "USD",
                                  "currencyDisplay": "symbol",
                                  "locale": "en-US"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes Trend Trend",
                                "formatter": {
                                  "id": 5,
                                  "options": {
                                    "palette": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "0",
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "blue",
                                          "text": "{0}{1}"
                                        }
                                      ],
                                      "hues": [
                                        "#0072C6",
                                        "#D13438"
                                      ],
                                      "opacity": 0.8,
                                      "compositeBarSettings": {
                                        "labelText": "[\"{value}\"]",
                                        "columnSettings": [
                                          {
                                            "columnName": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes",
                                            "color": "blue"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "formatOptions": {
                                    "allowFormatBeautification": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "useGrouping": {
                                      "value": true,
                                      "type": 1
                                    },
                                    "maximumFractionDigits": 2,
                                    "maximumSignificantDigits": 2,
                                    "minimumFractionDigits": 2,
                                    "minimumSignificantDigits": 2,
                                    "maximumIntegerDigits": 2,
                                    "minimumIntegerDigits": 2
                                  },
                                  "currency": "USD",
                                  "currencyDisplay": "symbol",
                                  "locale": "en-US"
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_unneeded_nodes Trend Trend Trend",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-API Server(PREVIEW)-apiserver_current_inflight_requests",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_request_latencies_50th_percentile Timeline",
                                "formatter": 10,
                                "formatOptions": {
                                  "palette": "lightBlue"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_request_latencies_50th_percentile",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_request_latencies_90th_percentile Timeline",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Pods-kube_pod_status_phase Timeline",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Pods-kube_pod_status_phase",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 0
                                  }
                                }
                              },
                              {
                                "columnMatch": "Container Insights-Kubelet-Microsoft.Operation error count Timeline",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 0
                                  }
                                }
                              },
                              {
                                "columnMatch": "Container Insights-Kubelet-Microsoft.Operation error count",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 0
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Pods-kube_pod_status_ready Timeline",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.containerservice/managedclusters-Pods-kube_pod_status_ready",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Aggregation",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Value",
                                "formatter": 1
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_safe_to_autoscale",
                                "label": "Autoscaler"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_cluster_safe_to_autoscale Timeline",
                                "label": "Autoscaler Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes-kube_node_status_allocatable_cpu_cores",
                                "label": "cpu cores managed cluster"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Nodes-kube_node_status_allocatable_cpu_cores Timeline",
                                "label": "cpu cores managed cluster Timeline"
                              },
                              {
                                "columnId": "Memory Used",
                                "label": "Memory Used"
                              },
                              {
                                "columnId": "Memory Used Timeline",
                                "label": "Memory Used Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_current_inflight_requests",
                                "label": "Inflight Requests"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-API Server (PREVIEW)-apiserver_current_inflight_requests Timeline",
                                "label": "Inflight RequestsTimeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_scale_down_in_cooldown",
                                "label": "Scale DownCooldown "
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_scale_down_in_cooldown Timeline",
                                "label": "Scale DownCooldown Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unneeded_nodes_count",
                                "label": "Unneeded Nodes"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unneeded_nodes_count Timeline",
                                "label": "Unneeded Nodes Timeline"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unschedulable_pods_count",
                                "label": "Unschedulable Pods"
                              },
                              {
                                "columnId": "microsoft.containerservice/managedclusters-Cluster Autoscaler (PREVIEW)-cluster_autoscaler_unschedulable_pods_count Timeline",
                                "label": "Unschedulable Pods Timeline"
                              }
                            ]
                          },
                          "sortBy": [],
                          "showExportToExcel": true
                        },
                        "name": "[object Object] - Nodepool",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Esses 2 passos têm as queries separadas - ARG e do Workspace - eles ficam escondidos por padrão",
                          "style": "info"
                        },
                        "name": "text - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where type =~ 'microsoft.containerservice/managedclusters'\r\n| extend cluster = tostring(name) \r\n| extend currentnodepools = tostring(properties.agentPoolProfiles[0].name) \r\n| extend nodepools = properties.agentPoolProfiles \r\n| mv-expand nodepools \r\n| extend nodepoolName = tostring(nodepools.name) \r\n| extend maxnode = tostring(nodepools.maxCount) \r\n| extend minnode = tostring(nodepools.minCount) \r\n| extend maxpod = tostring(nodepools.maxPods) \r\n| extend currentnodepool = tostring(nodepools.['count'])\r\n| project cluster, nodepoolName, maxnode, minnode, maxpod, currentnodepool \r\n| order by cluster asc, nodepoolName asc",
                          "size": 1,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "value::all"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "nodepoolName",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxnode",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "minnode",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxpod",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "15",
                        "name": "query - 0",
                        "styleSettings": {
                          "maxWidth": "15"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type =~ 'microsoft.containerservice/managedclusters'\r\n| extend cluster = tostring(name)\r\n| extend currentnodepools = tostring(properties.agentPoolProfiles[0].name)\r\n| extend nodepools = properties.agentPoolProfiles",
                          "size": 1,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ]
                        },
                        "customWidth": "85",
                        "name": "query - 2",
                        "styleSettings": {
                          "maxWidth": "85"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where type =~ 'microsoft.containerservice/managedclusters'\r\n| extend cluster = tostring(name) \r\n| extend currentnodepools = tostring(properties.agentPoolProfiles[0].name) \r\n| extend nodepools = properties.agentPoolProfiles \r\n| mv-expand nodepools\r\n| extend nodepoolName = tostring(nodepools.name)\r\n| extend maxnode = tostring(nodepools.maxCount) \r\n| extend minnode = tostring(nodepools.minCount) \r\n| extend maxpod = tostring(nodepools.maxPods) \r\n| extend currentnodepool = tostring(nodepools.['count'])\r\n| extend TriggerdownTime = tostring(properties.autoScalerProfile.['scale-down-utilization-threshold'])\r\n| extend dowdelayfailure = tostring(properties.autoScalerProfile.['scale-down-delay-after-failure'])\r\n| extend dowdelaydelete = tostring(properties.autoScalerProfile.['skip-nodes-with-local-storage'])\r\n| extend Unreadypercentage = tostring(properties.autoScalerProfile.['max-total-unready-percentage'])\r\n| extend maxgracefusec = tostring(properties.autoScalerProfile.['max-graceful-termination-sec'])\r\n| extend skipnodesystem  = tostring(properties.autoScalerProfile['skip-nodes-with-system-pods'])\r\n| extend balancenodegroups = tostring(properties.autoScalerProfile['balance-similar-node-groups'])\r\n| extend unreadytotal = tostring(properties.autoScalerProfile['ok-total-unready-count'])\r\n| extend bulkdelete = tostring(properties.autoScalerProfile['max-empty-bulk-delete'])\r\n| extend scaninterval = tostring(properties.autoScalerProfile['scan-interval'])\r\n| extend expander = tostring(properties.autoScalerProfile.expander)\r\n| project cluster, nodepoolName, maxnode, minnode, maxpod, currentnodepool, TriggerdownTime, dowdelayfailure, dowdelaydelete, Unreadypercentage, maxgracefusec, skipnodesystem, balancenodegroups, unreadytotal, bulkdelete, scaninterval, expander \r\n| order by cluster asc, nodepoolName asc",
                          "size": 1,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "value::all"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "nodepoolName",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxnode",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "minnode",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxpod",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "currentnodepool",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "TriggerdownTime",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "dowdelayfailure",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "dowdelaydelete",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Unreadypercentage",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxgracefusec",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "skipnodesystem",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "balancenodegroups",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "unreadytotal",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "bulkdelete",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "scaninterval",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "expander",
                                "formatter": 5
                              }
                            ]
                          }
                        },
                        "customWidth": "100",
                        "name": "query - 0 - Cópia",
                        "styleSettings": {
                          "maxWidth": "100"
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Abaixo faço um merge das duas queries acima, no caso não peguei a info de nodepool porque ela não existia na tabela KubePodInventory, mas você pode ter ideia do mecanismo\r\n",
                          "style": "info"
                        },
                        "name": "text - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"8a4871da-b8ad-4133-a02f-f57cae196028\",\"mergeType\":\"outer\",\"leftTable\":\"query - 0\",\"rightTable\":\"query - 2\",\"leftColumn\":\"cluster\",\"rightColumn\":\"ClusterName\"}],\"projectRename\":[{\"originalName\":\"[query - 0].cluster\",\"mergedName\":\"cluster\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 0].nodepoolName\",\"mergedName\":\"nodepoolName\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 0].maxnode\",\"mergedName\":\"maxnode\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 0].minnode\",\"mergedName\":\"minnode\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 0].maxpod\",\"mergedName\":\"maxpod\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 0].currentnodepool\",\"mergedName\":\"currentnodepool\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 2].ClusterName\",\"mergedName\":\"ClusterName\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 2].count_\",\"mergedName\":\"count_\",\"fromId\":\"8a4871da-b8ad-4133-a02f-f57cae196028\"},{\"originalName\":\"[query - 2].TenantId\",\"mergedName\":\"TenantId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].SourceSystem\",\"mergedName\":\"SourceSystem\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].TimeGenerated\",\"mergedName\":\"TimeGenerated\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].Computer\",\"mergedName\":\"Computer\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ClusterId\",\"mergedName\":\"ClusterId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerCreationTimeStamp\",\"mergedName\":\"ContainerCreationTimeStamp\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodUid\",\"mergedName\":\"PodUid\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodCreationTimeStamp\",\"mergedName\":\"PodCreationTimeStamp\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].InstanceName\",\"mergedName\":\"InstanceName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerRestartCount\",\"mergedName\":\"ContainerRestartCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodRestartCount\",\"mergedName\":\"PodRestartCount\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodStartTime\",\"mergedName\":\"PodStartTime\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerStartTime\",\"mergedName\":\"ContainerStartTime\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ServiceName\",\"mergedName\":\"ServiceName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ControllerKind\",\"mergedName\":\"ControllerKind\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ControllerName\",\"mergedName\":\"ControllerName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerStatus\",\"mergedName\":\"ContainerStatus\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerID\",\"mergedName\":\"ContainerID\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerName\",\"mergedName\":\"ContainerName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].Name\",\"mergedName\":\"Name\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodLabel\",\"mergedName\":\"PodLabel\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].Namespace\",\"mergedName\":\"Namespace\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodStatus\",\"mergedName\":\"PodStatus\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].PodIp\",\"mergedName\":\"PodIp\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerStatusReason\",\"mergedName\":\"ContainerStatusReason\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].ContainerLastStatus\",\"mergedName\":\"ContainerLastStatus\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2].Type\",\"mergedName\":\"Type\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - 2]._ResourceId\",\"mergedName\":\"_ResourceId\",\"fromId\":\"unknown\"}]}",
                          "size": 0,
                          "queryType": 7
                        },
                        "name": "query - 3"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "ClustersHealth"
                  },
                  "name": "ClustersHealthG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<br>\r\n## AKS Pods\r\n<br>\r\nFor more information access: [Azure Kubernetes Pods](https://docs.microsoft.com/en-us/azure/aks/concepts-clusters-workloads#pods)"
                        },
                        "name": "text - 1"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Cluster}"
                          ],
                          "parameters": [
                            {
                              "id": "d8254a88-6fd1-4c91-a120-38102e17c317",
                              "version": "KqlParameterItem/1.0",
                              "name": "AKSCluster",
                              "label": "AKS Cluster",
                              "type": 5,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| project value = id",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": {
                                  "value": true,
                                  "label": "All"
                                },
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                              },
                              "style": "pills",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubePodInventory\r\n| summarize arg_max(TimeGenerated,PodStatus),max(PodRestartCount) by ClusterId,Namespace,Name,PodIp,PodStartTime\r\n| project ['Cluster Name']=ClusterId,Namespace,['Pod Name']=Name,['Pod Status']=PodStatus,TimeGenerated,PodStartTime,['Restart Count']=max_PodRestartCount,PodIp\r\n",
                          "size": 2,
                          "title": "Pod Status",
                          "timeContextFromParameter": "timerange",
                          "showRefreshButton": true,
                          "exportFieldName": "Pod Name",
                          "exportParameterName": "PodName",
                          "exportDefaultValue": " ",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.containerservice/managedclusters",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Pod Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "Running",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Running",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Restart Count",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 5,
                                  "palette": "greenRed"
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "PodIp",
                                "label": "Pod IP"
                              }
                            ]
                          },
                          "sortBy": []
                        },
                        "name": "query - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n",
                          "size": 3,
                          "title": "Pods with controller other than ReplicaSet",
                          "timeContextFromParameter": "timerange",
                          "exportMultipleValues": true,
                          "exportedParameters": [
                            {
                              "fieldName": "Name",
                              "parameterName": "Pods"
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.containerservice/managedclusters",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Name",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "ControllerKind",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "ControllerName",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "ControllerNamespace",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "ControllerUID",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "NodeName",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "NodeIP",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodIP",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodIPs",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodPhase",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodQOS",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodRestartPolicy",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodStatus",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodStartTime",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodTerminationGracePeriod",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodUID",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "PodVolumes",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": [],
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Name",
                              "formatter": {
                                "type": 1,
                                "options": {
                                  "customColumnWidthSetting": "50%"
                                },
                                "customColumnWidthSetting": "50%",
                                "showIcon": true,
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Running",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Pending",
                                    "representation": "warning",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            "leftContent": {
                              "columnMatch": "Namespace",
                              "formatter": {
                                "type": 1,
                                "options": {
                                  "showIcon": true,
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Running",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Pending",
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "showIcon": true,
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Running",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Pending",
                                    "representation": "warning",
                                    "text": "{0}{1}"
                                  }
                                ]
                              },
                              "formatOptions": {
                                "showIcon": true,
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Running",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Pending",
                                    "representation": "warning",
                                    "text": "{0}{1}"
                                  }
                                ]
                              },
                              "secondaryContent": {
                                "columnMatch": "ControllerKind",
                                "formatter": 1,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              "showSubtitle": false,
                              "showTitle": false,
                              "title": "Pods",
                              "titleAlignment": "left",
                              "titleSize": "large",
                              "titleColor": {
                                "value": {
                                  "color": "blue",
                                  "theme": "light",
                                  "opacity": 1
                                },
                                "type": "color"
                              },
                              "subtitleAlignment": "left",
                              "subtitleColor": {
                                "value": {
                                  "color": "blue",
                                  "theme": "light",
                                  "opacity": 1
                                },
                                "type": "color"
                              },
                              "subtitleSize": "medium"
                            },
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "Name",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "Namespace",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "ControllerKind",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "PodLabel",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "ContainerStatus",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "ContainerRestartCount",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "ServiceName",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "PodStartTime",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "PodStartTime",
                                  "formatter": 0,
                                  "formatOptions": {
                                    "showIcon": true
                                  }
                                }
                              ],
                              "labelSettings": [
                                {
                                  "columnId": "Name",
                                  "label": "Name"
                                },
                                {
                                  "columnId": "Namespace",
                                  "label": "Namespace"
                                },
                                {
                                  "columnId": "ControllerKind",
                                  "label": "ControllerKind"
                                },
                                {
                                  "columnId": "PodLabel",
                                  "label": "PodLabel"
                                },
                                {
                                  "columnId": "ContainerStatus",
                                  "label": "ContainerStatus"
                                },
                                {
                                  "columnId": "ContainerRestartCount",
                                  "label": "ContainerRestartCount"
                                },
                                {
                                  "columnId": "ServiceName",
                                  "label": "ServiceName"
                                },
                                {
                                  "columnId": "PodStartTime",
                                  "label": "PodStartTime"
                                },
                                {
                                  "columnId": "PodStartTime",
                                  "label": "PodStartTime"
                                }
                              ]
                            },
                            "sortBy": [],
                            "tileSettings": {
                              "titleContent": {
                                "columnMatch": "Name",
                                "formatter": 1
                              },
                              "leftContent": {
                                "columnMatch": "Namespace",
                                "formatter": 1
                              },
                              "secondaryContent": {
                                "columnMatch": "ControllerKind",
                                "formatter": 1
                              },
                              "showBorder": false,
                              "size": "auto"
                            },
                            "chartSettings": {
                              "createOtherGroup": 0,
                              "showLegend": true
                            }
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "ObjectKind",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "Message",
                              "formatter": 1
                            },
                            "nodeIdField": "ClusterId",
                            "sourceIdField": "_ResourceId",
                            "targetIdField": "SourceComponent",
                            "graphOrientation": 2,
                            "showOrientationToggles": true,
                            "edgeSize": "Message",
                            "edgeLabel": "KubeEventType",
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": null,
                            "groupByField": "ClusterName",
                            "hivesMargin": 5
                          },
                          "chartSettings": {
                            "yAxis": [
                              "Node"
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          },
                          "mapSettings": {
                            "locInfo": "AzureResource",
                            "locInfoColumn": "Name",
                            "sizeSettings": "ContainerRestartCount",
                            "sizeAggregation": "Count",
                            "legendMetric": "ContainerRestartCount",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "nodeColorField": "ContainerRestartCount",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "showPin": true,
                        "name": "query - 4"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Pods"
                  },
                  "name": "Pods"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Cluster}"
                          ],
                          "parameters": [
                            {
                              "id": "d8254a88-6fd1-4c91-a120-38102e17c317",
                              "version": "KqlParameterItem/1.0",
                              "name": "AKSCluster",
                              "label": "AKS Cluster",
                              "type": 5,
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| project value = id",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "value": [
                                "/subscriptions/b123d671-00f6-461f-9065-e80587bfbc35/resourceGroups/lab-rg/providers/microsoft.containerservice/managedClusters/lab-aks"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": {
                                  "value": true,
                                  "label": "All"
                                },
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                              },
                              "style": "pills",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| project ObjectKind, Namespace, Name, Reason, Message",
                          "size": 3,
                          "title": "Events List",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ]
                        },
                        "name": "query - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| where Count == tostring(Count) and Count > 1 and Count != \"1\"\r\n| summarize Pod = count() by ClusterName = tostring(ClusterName)\r\n| order by Pod desc\r\n| project ClusterName, Pod\r\n",
                          "size": 3,
                          "title": "Events by Time",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "microsoft.containerservice/managedclusters",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ClusterName",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true,
                                  "aggregation": "Count"
                                }
                              },
                              {
                                "columnMatch": "Pod",
                                "formatter": 3,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count",
                                  "compositeBarSettings": {
                                    "labelText": "",
                                    "columnSettings": [
                                      {
                                        "columnName": "Pod",
                                        "color": "blue"
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "ClusterName",
                                "label": "Cluster"
                              },
                              {
                                "columnId": "Pod",
                                "label": "Failed"
                              }
                            ]
                          },
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "ClusterName",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Pod",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "ClusterName",
                              "formatter": 1
                            },
                            "hivesContent": {
                              "columnMatch": "ClusterName",
                              "formatter": 1
                            },
                            "nodeIdField": "ClusterName",
                            "sourceIdField": "Pod",
                            "targetIdField": "ClusterName",
                            "graphOrientation": 3,
                            "showOrientationToggles": true,
                            "edgeSize": "Pod",
                            "edgeLabel": "ClusterName",
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": null,
                            "groupByField": "ClusterName",
                            "hivesMargin": 5
                          },
                          "mapSettings": {
                            "locInfo": "AzureResource",
                            "locInfoColumn": "ClusterName",
                            "sizeSettings": "Pod",
                            "sizeAggregation": "Sum",
                            "legendMetric": "Pod",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "nodeColorField": "Pod",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "name": "query - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| where Count == tostring(Count) and Count > 0 and Count < 100 and Count != \"1\"\r\n| summarize Count = count() by ClusterName = tostring(ClusterName), KubeEventType\r\n| order by Count desc\r\n| project ClusterName, KubeEventType, Count",
                          "size": 3,
                          "title": "Events by Type",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ClusterName",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Count",
                                "formatter": 3,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 10,
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                }
                              }
                            ],
                            "hierarchySettings": {
                              "idColumn": "KubeEventType",
                              "parentColumn": "Count",
                              "treeType": 0,
                              "expanderColumn": "ClusterName",
                              "expandTopLevel": true
                            }
                          }
                        },
                        "name": "query - 2"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| where Namespace == tostring(Namespace)\r\n| where ClusterName == tostring(ClusterName)\r\n| where Count == tostring(Count) and Count > 0 and Count != \"1\" \r\n| summarize ObjectKind = count() by Namespace = tostring(Namespace)\r\n| order by Namespace desc\r\n\r\n\r\n",
                          "size": 0,
                          "title": "Events by Namespace",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "ObjectKind",
                                "formatter": 8,
                                "formatOptions": {
                                  "palette": "greenRed",
                                  "aggregation": "Count"
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "ObjectKind",
                                "label": "Failed"
                              }
                            ]
                          }
                        },
                        "name": "query - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| summarize count() by SourceComponent\r\n| render piechart",
                          "size": 0,
                          "title": "Events by Source Component",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ]
                        },
                        "name": "query - 10"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| summarize count() by Message\r\n| render piechart",
                          "size": 0,
                          "title": "Events by Message",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ]
                        },
                        "name": "query - 12"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "KubeEvents\r\n| summarize count() by Reason\r\n| render piechart",
                          "size": 0,
                          "title": "Events by Reason",
                          "timeContextFromParameter": "timerange",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{AKSCluster}"
                          ]
                        },
                        "name": "query - 13"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Events"
                  },
                  "name": "Kubernetes Events"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "loadType": "always",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "da525d76-f06f-4a51-89b8-7d812b9849ee",
                              "version": "KqlParameterItem/1.0",
                              "name": "timeRange",
                              "label": "Time Range",
                              "type": 4,
                              "description": "Filter data by time range",
                              "isRequired": true,
                              "value": {
                                "durationMs": 21600000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "b736a9fe-ef9e-452f-a6ec-a0e8aeb0dd04",
                              "version": "KqlParameterItem/1.0",
                              "name": "resource",
                              "type": 5,
                              "isRequired": true,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1"
                            },
                            {
                              "id": "9014d044-7596-4e04-841e-524360a09df9",
                              "version": "KqlParameterItem/1.0",
                              "name": "resourceType",
                              "type": 7,
                              "isRequired": true,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::1",
                              "queryType": 8
                            },
                            {
                              "id": "ff159cc8-f361-4421-a567-19f8083f9e37",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterId",
                              "type": 1,
                              "description": "Filter workspace by cluster id",
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange"
                            },
                            {
                              "id": "b7f008ce-38a9-499a-85e9-a01707c1776c",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterIdWhereClause",
                              "type": 1,
                              "description": "Add to queries to filter by cluster id",
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "criteriaContext": {
                                    "leftOperand": "resourceType",
                                    "operator": "contains",
                                    "rightValType": "static",
                                    "rightVal": "microsoft.operationalinsights/workspaces",
                                    "resultValType": "static",
                                    "resultVal": "| where ClusterId =~ '{clusterId}'"
                                  }
                                },
                                {
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where \"a\" == \"a\""
                                  }
                                }
                              ],
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange"
                            },
                            {
                              "id": "48b419dd-90e8-4a11-845c-b8ddc29cc90d",
                              "version": "KqlParameterItem/1.0",
                              "name": "workloadType",
                              "label": "Workload Type",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| distinct ControllerKind\r\n| where isempty(ControllerKind) == false\r\n| order by ControllerKind asc",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": true
                              },
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "74fa2cd7-ba3f-4dab-98a3-664f5cc7f9c7",
                              "version": "KqlParameterItem/1.0",
                              "name": "workloadKindWhereClause",
                              "type": 1,
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "condition": "if (workloadType is not empty ), result = '| where ControllerKind in ({workloadType})'",
                                  "criteriaContext": {
                                    "leftOperand": "workloadType",
                                    "operator": "isNotNull",
                                    "rightValType": "static",
                                    "rightVal": "unset",
                                    "resultValType": "static",
                                    "resultVal": "| where ControllerKind in ({workloadType})"
                                  }
                                },
                                {
                                  "condition": "else result = '| where \"a\" == \"a\"'",
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where \"a\" == \"a\""
                                  }
                                }
                              ],
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange"
                            },
                            {
                              "id": "5b229ffe-f333-4d17-b009-5c9a87e383db",
                              "version": "KqlParameterItem/1.0",
                              "name": "namespace",
                              "label": "Namespace",
                              "type": 2,
                              "description": "Filter the workbook by namespace",
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct Namespace\r\n| where isnotempty(Namespace)\r\n| order by Namespace asc",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1",
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": true
                              },
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "28011d39-e304-418e-a480-28d4281eaab3",
                              "version": "KqlParameterItem/1.0",
                              "name": "namespaceWhereClause",
                              "type": 1,
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "condition": "if (namespace is not empty ), result = '| where Namespace in ({namespace})'",
                                  "criteriaContext": {
                                    "leftOperand": "namespace",
                                    "operator": "isNotNull",
                                    "rightValType": "static",
                                    "rightVal": "unset",
                                    "resultValType": "static",
                                    "resultVal": "| where Namespace in ({namespace})"
                                  }
                                },
                                {
                                  "condition": "else result = '| where \"a\" == \"a\"'",
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where \"a\" == \"a\""
                                  }
                                }
                              ],
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange"
                            },
                            {
                              "id": "05801920-18dd-4542-83d3-8aaac1cd6e6c",
                              "version": "KqlParameterItem/1.0",
                              "name": "workloadName",
                              "label": "Workload Name",
                              "type": 2,
                              "description": "Filter the data for a particular workload",
                              "isRequired": true,
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{namespaceWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct ControllerName\r\n| where isnotempty(ControllerName)\r\n| order by ControllerName asc",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": true
                              },
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "9bc4befa-03f6-4cd0-94cb-394a12742b5e",
                              "version": "KqlParameterItem/1.0",
                              "name": "podStatus",
                              "label": "Pod Status",
                              "type": 2,
                              "description": "Filter by Pod status like Pending/Running/Failed etc.",
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| distinct PodStatus\r\n| where isnotempty(PodStatus)\r\n| order by PodStatus asc",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": true
                              },
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "a1a2cf65-50f5-4d77-b19d-0b9c0c4b4421",
                              "version": "KqlParameterItem/1.0",
                              "name": "podStatusWhereClause",
                              "type": 1,
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "criteriaContext": {
                                    "leftOperand": "podStatus",
                                    "operator": "isNotNull",
                                    "rightValType": "static",
                                    "rightVal": "unset",
                                    "resultValType": "static",
                                    "resultVal": "| where PodStatus in ({podStatus})"
                                  }
                                },
                                {
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where \"a\" == \"a\""
                                  }
                                }
                              ],
                              "timeContext": {
                                "durationMs": 2592000000
                              },
                              "timeContextFromParameter": "timeRange"
                            },
                            {
                              "id": "4b87c00b-8340-4591-b7f9-85c881c6ccf3",
                              "version": "KqlParameterItem/1.0",
                              "name": "podName",
                              "label": "Pod Name",
                              "type": 2,
                              "description": "Filter by pod name ",
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName:value}'\r\n{podStatusWhereClause}\r\n| summarize arg_max(TimeGenerated, PodStatus) by Name\r\n| project Name\r\n| where isempty(Name) == false\r\n| order by Name asc",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "34a10983-fb09-4735-8dd5-a8e8de633c1e",
                              "version": "KqlParameterItem/1.0",
                              "name": "podNameWhereClause",
                              "type": 1,
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "condition": "if (podName is not empty ), result = '| where PodName in ({podName})'",
                                  "criteriaContext": {
                                    "leftOperand": "podName",
                                    "operator": "isNotNull",
                                    "rightValType": "static",
                                    "rightVal": "unset",
                                    "resultValType": "static",
                                    "resultVal": "| where PodName in ({podName})"
                                  }
                                },
                                {
                                  "condition": "else result = '| where \"a\" == \"a\"'",
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where \"a\" == \"a\""
                                  }
                                }
                              ],
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange"
                            },
                            {
                              "id": "b40d1932-7d50-40fe-8efc-492902071b7e",
                              "version": "KqlParameterItem/1.0",
                              "name": "workloadNamespaceText",
                              "type": 1,
                              "description": "For displaying name space of the selected workload",
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| take 1 \r\n| project Namespace",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "f97fc913-6fdd-47f2-86f2-2e11863cbb2d",
                              "version": "KqlParameterItem/1.0",
                              "name": "workloadTypeText",
                              "type": 1,
                              "description": "For displaying workload type of the selected workload",
                              "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| take 1 \r\n| project ControllerKind",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "{resourceType}"
                        },
                        "name": "pills-under-pv-tab"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "parameters": [
                            {
                              "id": "58df4821-a81a-410b-8da3-188bfb94c0fa",
                              "version": "KqlParameterItem/1.0",
                              "name": "pvHighUsageThreshold",
                              "label": "PV High Usage Threshold",
                              "type": 1,
                              "description": "Set the percentage threshold to define high usage status.",
                              "isRequired": true,
                              "value": "80",
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 86400000
                              }
                            },
                            {
                              "id": "f45e0d19-03da-43ac-ad86-50b2303c53b3",
                              "version": "KqlParameterItem/1.0",
                              "name": "selectedPVC",
                              "label": "Selected PVC",
                              "type": 1,
                              "description": "Selected PVC to show detailed graph",
                              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n| where ControllerName in (controllerName)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct PodUid\r\n| join hint.strategy=shuffle (\r\n    InsightsMetrics\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where Namespace == 'container.azm.ms/pv'\r\n    | where Name == 'pvUsedBytes'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend Capacity = tolong(Tags.pvCapacityBytes), Namespace = tostring(Tags.pvcNamespace)\r\n    | extend UsagePercent = (Val / Capacity) * 100\r\n    | extend PVCName = tostring(Tags.pvcName), PodUid = tostring(Tags.podUid)\r\n    | project PodUid, UsagePercent, TimeGenerated, PVCName = strcat(Namespace, '/', PVCName)\r\n) on PodUid\r\n| summarize arg_max(TimeGenerated, *) by PVCName\r\n| top 1 by UsagePercent\r\n| project PVCName",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "{resourceType}"
                        },
                        "conditionalVisibility": {
                          "parameterName": "1",
                          "comparison": "isEqualTo",
                          "value": "2"
                        },
                        "name": "PersistentVolumeParameters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nlet threshold = {pvHighUsageThreshold:value};\r\nlet data = KubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName in (controllerName)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct PodUid\r\n| join hint.strategy=shuffle (\r\n    InsightsMetrics\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where Namespace == 'container.azm.ms/pv'\r\n    | where Name == 'pvUsedBytes'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend Capacity = tolong(Tags.pvCapacityBytes), PVCName = tostring(Tags.pvcName), PodUid = tostring(Tags.podUid)\r\n    | extend UsagePercent = (Val / Capacity) * 100\r\n    | project PodUid, UsagePercent, TimeGenerated, PVCName\r\n) on PodUid\r\n| summarize arg_max(TimeGenerated, *) by PVCName\r\n| extend State = iff(UsagePercent >= threshold, 'High Usage', 'Regular Usage')\r\n| project PVCName, UsagePercent, State;\r\n\r\ndata\r\n| summarize Count = count(), PVCs = makeset(PVCName) by State\r\n| union (\r\n    data\r\n    | summarize Count = count(), PVCs = dynamic([\"*\"])\r\n    | extend State = 'All PVs'\r\n)\r\n| join kind = fullouter (datatable (State: string) ['All PVs', 'High Usage', 'Regular Usage']) on State\r\n| extend Count = iff(State == '', 0, Count), PVCs = iff(State == '', dynamic([]), PVCs), State = iff(State == '', State1, State)\r\n| where State != 'Regular Usage'\r\n| extend State = iff(State == 'High Usage', strcat('Greater than ', tostring(threshold), '% Usage'), State), noPVs = iff(Count == 0, 'true', 'false')\r\n| order by Count desc",
                          "size": 3,
                          "showAnalytics": true,
                          "timeContextFromParameter": "timeRange",
                          "exportedParameters": [
                            {
                              "fieldName": "noPVs",
                              "parameterName": "noPVs",
                              "parameterType": 1,
                              "defaultValue": "false"
                            },
                            {
                              "fieldName": "State",
                              "parameterName": "onlyHighUsage",
                              "parameterType": 1,
                              "defaultValue": "All PVs"
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "State",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "State",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "Greater than",
                                    "representation": "4",
                                    "text": ""
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": ""
                                  }
                                ],
                                "compositeBarSettings": {
                                  "labelText": "",
                                  "columnSettings": []
                                }
                              }
                            },
                            "rightContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "none"
                              }
                            },
                            "showBorder": true,
                            "size": "auto"
                          }
                        },
                        "showPin": true,
                        "name": "PVCountOverview"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nlet highUsageThreshold = toreal({pvHighUsageThreshold});\r\nlet threshold = iff('{onlyHighUsage}' contains \"Greater than\", highUsageThreshold, -1.0);\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName in (controllerName)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct PodUid\r\n| join hint.strategy=shuffle (\r\n    InsightsMetrics\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where Namespace == 'container.azm.ms/pv'\r\n    | where Name == 'pvUsedBytes'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend Capacity = tolong(Tags.pvCapacityBytes), PVCName = tostring(Tags.pvcName), PodUid = tostring(Tags.podUid), PodName = tostring(Tags.podName), VolumeName = tostring(Tags.volumeName), Namespace = tostring(Tags.pvcNamespace)\r\n    | extend UsagePercent = (Val / Capacity) * 100\r\n    | project PodUid, UsagePercent, TimeGenerated, PVCName = strcat(Namespace, '/', PVCName), Capacity, PodName, Computer, VolumeName\r\n) on PodUid\r\n| order by TimeGenerated asc\r\n| make-series Trend = max(UsagePercent) default = 0 on TimeGenerated step trendBinSize by PVCName, Capacity, Computer, PodName, VolumeName\r\n| extend CurrentUsage = toreal(Trend[-1])\r\n| where CurrentUsage > threshold\r\n| extend Used = format_bytes(CurrentUsage * toreal(Capacity) / 100, 2), Capacity = format_bytes(Capacity, 2)\r\n| extend UsedAndCapacity = strcat(Used, ' / ', Capacity)\r\n| project PVCName, CurrentUsage, Trend, UsedAndCapacity, VolumeName, PodName, Computer\r\n| order by CurrentUsage desc",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "💡 Select a row to see the usage for the PV charted below",
                          "noDataMessage": "There are no persistent volumes for the selected criteria",
                          "timeContextFromParameter": "timeRange",
                          "exportFieldName": "PVCName",
                          "exportParameterName": "selectedPVC",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "CurrentUsage",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "80",
                                      "representation": "failed",
                                      "text": "{0}%"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "60",
                                      "representation": "2",
                                      "text": "{0}%"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}%"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "Trend",
                                "formatter": 9,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed",
                                  "aggregation": "Max",
                                  "compositeBarSettings": {
                                    "labelText": "",
                                    "columnSettings": []
                                  }
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "UsedAndCapacity",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "Computer",
                                "label": "Node Name"
                              },
                              {
                                "columnId": "PVCName",
                                "label": "PVC Name"
                              },
                              {
                                "columnId": "CurrentUsage",
                                "label": "Usage"
                              },
                              {
                                "columnId": "Trend",
                                "label": "Usage Trend"
                              },
                              {
                                "columnId": "UsedAndCapacity",
                                "label": "Used / Capacity"
                              },
                              {
                                "columnId": "VolumeName",
                                "label": "Volume Name"
                              },
                              {
                                "columnId": "PodName",
                                "label": "Pod Name"
                              }
                            ]
                          }
                        },
                        "showPin": true,
                        "name": "PVGrid",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nlet selectedPVC = '{selectedPVC:value}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName in (controllerName)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct PodUid\r\n| join hint.strategy=shuffle (\r\n    InsightsMetrics\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where Namespace == 'container.azm.ms/pv'\r\n    | where Name == 'pvUsedBytes'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend PVCName = strcat(Namespace = tostring(Tags.pvcNamespace), '/', tostring(Tags.pvcName))\r\n    | where PVCName == selectedPVC\r\n    | extend Capacity = Tags.pvCapacityBytes, PodUid = tostring(Tags.podUid)\r\n    | extend UsagePercent = (Val / Capacity) * 100\r\n    | project TimeGenerated, UsagePercent, PVCName, PodUid\r\n) on PodUid\r\n| project PVCName, TimeGenerated, UsagePercent\r\n| summarize UsagePercentage=max(UsagePercent) by bin(TimeGenerated, trendBinSize), PVCName",
                          "size": 0,
                          "aggregation": 5,
                          "showAnalytics": true,
                          "title": "{selectedPVC} usage",
                          "noDataMessage": "Select a PV to view details",
                          "queryType": 0,
                          "resourceType": "{resourceType}",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "visualization": "linechart",
                          "sortBy": [],
                          "graphSettings": {
                            "type": 0,
                            "unit": 1,
                            "topContent": {
                              "columnMatch": "TenantId",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "Val",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "noPVs",
                            "comparison": "isNotEqualTo",
                            "value": "true"
                          },
                          {
                            "parameterName": "selectedPVC",
                            "comparison": "isNotEqualTo"
                          }
                        ],
                        "showPin": true,
                        "name": "PVDetailedChart",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "PV"
                  },
                  "name": "pv-tab"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## 🦾 Backend Azure Kubernetes Service (AKS)\r\n\r\n## VMSS\r\n\r\n- O AKS usa VMSS para criar os nodes do cluster, onde cada VMSS é uma pool de nodes do cluster. E cada pool de nodes do cluster é um conjunto de VMs que são gerenciadas pelo Azure.\r\n\r\n## 📖 Referências\r\n\r\n[Virtual Machine Scale Sets - Documentação](https://docs.microsoft.com/pt-br/azure/virtual-machine-scale-sets/overview)\r\n"
                        },
                        "name": "text - 11"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "parameters": [
                            {
                              "id": "5f8cce4b-9c4c-47da-8683-7e5ccc9faed3",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRange",
                              "type": 4,
                              "value": {
                                "durationMs": 1800000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000,
                                    "createdTime": "2018-10-04T22:01:18.372Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 900000,
                                    "createdTime": "2018-10-04T22:01:18.372Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 1800000,
                                    "createdTime": "2018-10-04T22:01:18.372Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 3600000,
                                    "createdTime": "2018-10-04T22:01:18.372Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 14400000,
                                    "createdTime": "2018-10-04T22:01:18.374Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 43200000,
                                    "createdTime": "2018-10-04T22:01:18.374Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 86400000,
                                    "createdTime": "2018-10-04T22:01:18.374Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 172800000,
                                    "createdTime": "2018-10-04T22:01:18.374Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 259200000,
                                    "createdTime": "2018-10-04T22:01:18.375Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 604800000,
                                    "createdTime": "2018-10-04T22:01:18.375Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 1209600000,
                                    "createdTime": "2018-10-04T22:01:18.375Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 2592000000,
                                    "createdTime": "2018-10-04T22:01:18.375Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 5184000000,
                                    "createdTime": "2018-10-04T22:01:18.375Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  },
                                  {
                                    "durationMs": 7776000000,
                                    "createdTime": "2018-10-04T22:01:18.375Z",
                                    "isInitialTime": false,
                                    "grain": 1,
                                    "useDashboardTimeRange": false
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "d6de19ff-cde4-41c2-9fba-b441312ea5c9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Test",
                              "type": 1,
                              "query": "Perf\r\n| take 1\r\n| summarize count()",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachinescalesets"
                        },
                        "name": "parameters - 2"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<h2 style=\"margin-bottom:0;padding-bottom:0;\"> Virtual Machine Scale Sets </h2>"
                        },
                        "name": "text - 14"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "parameters": [
                            {
                              "id": "aa2368fc-ad30-4608-b96a-72abf7b1e1af",
                              "version": "KqlParameterItem/1.0",
                              "name": "Counter",
                              "type": 2,
                              "description": "Select a VM performance counter for the table below",
                              "query": "// {Resource} {Test}\r\nPerf\r\n| where TimeGenerated {TimeRange}\r\n| where ObjectName != 'Network' and ObjectName != 'Network Interface'\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "974d5ac2-4fc5-48e7-a8f7-16fc9dddc4ac",
                              "version": "KqlParameterItem/1.0",
                              "name": "CounterText",
                              "type": 1,
                              "query": "let metric = dynamic({Counter});\r\nrange Steps from 1 to 1 step 1\r\n| project strcat(metric.object, \" > \", metric.counter)",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "ce228deb-88eb-4438-9dce-6c6d1972ff09",
                              "version": "KqlParameterItem/1.0",
                              "name": "IsNetworkCounter",
                              "type": 1,
                              "query": "let counter = dynamic({Counter});\r\nprint tostring(counter.object == 'Network Adapter')",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "3b23aa7a-2afd-40ba-a710-0e2cc73c764b",
                              "version": "KqlParameterItem/1.0",
                              "name": "NetworkDirection",
                              "type": 1,
                              "query": "let metric = dynamic({Counter});\r\nprint(iff(metric.counter == 'Bytes Received/sec', 'Received', 'Sent'))",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "9ad8858d-8ef3-4144-94b1-66a8bf9fa9c9",
                              "version": "KqlParameterItem/1.0",
                              "name": "Aggregators",
                              "type": 2,
                              "description": "Select one or more different aggregates to display in the table below",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n    { \"value\":\"Average\", \"label\":\"Average\", \"selected\": true },\r\n    { \"value\":\"P5th\", \"label\":\"P5th\", \"selected\": false },\r\n    { \"value\":\"P10th\", \"label\":\"P10th\", \"selected\": false },\r\n    { \"value\":\"P50th\", \"label\":\"P50th\", \"selected\": false },\r\n    { \"value\":\"P80th\", \"label\":\"P80th\", \"selected\": false },\r\n    { \"value\":\"P90th\", \"label\":\"P90th\", \"selected\": false },\r\n    { \"value\":\"P95th\", \"label\":\"P95th\", \"selected\": true },\r\n    { \"value\":\"Min\", \"label\":\"Min\", \"selected\": false },\r\n    { \"value\":\"Max\", \"label\":\"Max\", \"selected\": true }\r\n]",
                              "value": [
                                "Average",
                                "P95th",
                                "Max"
                              ]
                            },
                            {
                              "id": "6a7306ea-247f-46ca-abca-501911f9e9d3",
                              "version": "KqlParameterItem/1.0",
                              "name": "TableTrend",
                              "type": 2,
                              "description": "Select a percentile to display in the Trend column in the table below",
                              "isRequired": true,
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\", \"selected\": true },\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\", \"selected\": false },\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\", \"selected\": false },\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\", \"selected\": false },\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\", \"selected\": false },\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\", \"selected\": false },\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\", \"selected\": false }\r\n]"
                            },
                            {
                              "id": "0327f26e-cdde-4b48-b512-6c35f06ad1d0",
                              "version": "KqlParameterItem/1.0",
                              "name": "tableTrendOrder",
                              "type": 1,
                              "query": "range Steps from 1 to 1 step 1\r\n| project value = iff('{TableTrend}' contains 'P5th'  or '{TableTrend}' contains 'P10th', 'asc', 'desc')",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "c2f05b6d-970d-4fde-88b0-868387c02250",
                              "version": "KqlParameterItem/1.0",
                              "name": "mergedAggregators",
                              "type": 1,
                              "query": "let aggregators = iff('{Aggregators}' contains '{TableTrend:label}', '{Aggregators}', '{Aggregators},{TableTrend:label}');\r\nrange Steps from 1 to 1 step 1\r\n| project aggregators",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "69c79551-68b9-4c84-bf57-202540482a02",
                              "version": "KqlParameterItem/1.0",
                              "name": "ShowTable",
                              "type": 1,
                              "query": "print iff(\"{Test:value}\" == \"\", \"False\", iff(\"{IsNetworkCounter:value}\" == \"False\", \"True\", \"False\"))",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "6b664a24-d9a3-47b0-9d94-9cada9ddb8ce",
                              "version": "KqlParameterItem/1.0",
                              "name": "ShowNetworkTable",
                              "type": 1,
                              "query": "print iff(\"{Test:value}\" == \"\", \"False\", \"{IsNetworkCounter:value}\")",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "343c4eae-e482-4678-a936-c4ad43b2ec19",
                              "version": "KqlParameterItem/1.0",
                              "name": "CounterTest",
                              "type": 1,
                              "query": "Perf\r\n| take 1",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachinescalesets"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Test",
                          "comparison": "isNotEqualTo",
                          "value": null
                        },
                        "name": "parameters - 6"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Não há contadores de desempenho, nem máquinas integradas a este Workbook ."
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---\r\n## Top 10 Machines"
                        },
                        "name": "text - 18"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "### CPU Utilization %"
                        },
                        "customWidth": "50",
                        "name": "text - 13"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "### Available Memory"
                        },
                        "customWidth": "50",
                        "name": "text - 13"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "parameters": [
                            {
                              "id": "92358ae0-d5e1-494b-b65b-6d904f1325c5",
                              "version": "KqlParameterItem/1.0",
                              "name": "Aggregate",
                              "type": 2,
                              "isRequired": true,
                              "value": "P95th = round(percentile(CounterValue, 95), 2)",
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\"},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\"},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\"},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\"},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\"},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\"},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\"}\r\n]"
                            },
                            {
                              "id": "27345375-4376-4e2f-8ac4-59d4eab9d235",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateOrderLeft",
                              "type": 1,
                              "query": "range Steps from 1 to 1 step 1\r\n| project value = iff('{Aggregate}' contains 'P5th'  or '{Aggregate}' contains 'P10th', 'asc', 'desc')",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "4d9ba0ec-9d22-4fec-9f85-4be334f42d91",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateLeftValue",
                              "type": 1,
                              "isRequired": true,
                              "query": "print \"{Aggregate:value}\"",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "50242f48-6c7d-449b-ad93-838c94e615a0",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateLeftLabel",
                              "type": 1,
                              "isRequired": true,
                              "query": "print \"{Aggregate:label}\"",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachinescalesets"
                        },
                        "customWidth": "50",
                        "name": "parameters - 14"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "parameters": [
                            {
                              "id": "333837c2-d5a4-4173-9aad-3db1dca17e2a",
                              "version": "KqlParameterItem/1.0",
                              "name": "Aggregate",
                              "type": 2,
                              "isRequired": true,
                              "value": "P95th = round(percentile(CounterValue, 95), 2)",
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\"},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\"},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\"},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\"},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\"},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\"},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\"}\r\n]"
                            },
                            {
                              "id": "a23b29a5-5e4a-4d8e-ba73-bfdf27b2980e",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateOrderRight",
                              "type": 1,
                              "query": "range Steps from 1 to 1 step 1\r\n| project value = iff('{Aggregate}' contains 'P5th'  or '{Aggregate}' contains 'P10th', 'asc', 'desc')",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "cc8dfabc-9eb9-4227-97bb-f5e9319030ec",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateRightValue",
                              "type": 1,
                              "isRequired": true,
                              "query": "print \"{Aggregate:value}\"",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            },
                            {
                              "id": "ff7a79ff-742a-4c6e-8628-c52f45b3bf71",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateRightLabel",
                              "type": 1,
                              "isRequired": true,
                              "query": "print \"{Aggregate:label}\"",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachinescalesets"
                        },
                        "customWidth": "50",
                        "name": "parameters - 15"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let cpuSummary=totable(Perf\r\n    | where TimeGenerated {TimeRange} \r\n    | where (ObjectName == 'Processor' and InstanceName == '_Total' and CounterName == '% Processor Time')\r\n    | summarize hint.shufflekey=Computer {aggregateLeftValue} by Computer, CounterName\r\n    | top 10 by {aggregateLeftLabel} {aggregateOrderLeft});\r\nlet computerList=(cpuSummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 1\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = VMComputer | extend ResourceId=strcat('machines/', Machine) | extend Bitness=columnifexists('Bitness', '')\r\n    | where TimeGenerated {TimeRange}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId, '|',                     AzureCloudServiceDeployment), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),              strcat(AzureVmScaleSetInstanceId, '|',                     AzureVmScaleSetDeployment), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', Computer,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId,                   'resourceGroup', AzureResourceGroup,                   'azureResourceId', columnifexists('_ResourceId', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', AzureCloudServiceInstanceId,                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName', ''),                   'cloudServiceDeploymentId', AzureCloudServiceDeployment,                   'cloudServiceName', AzureCloudServiceName,                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('Computer', ''),                   'vmScaleSetDeploymentId', AzureVmScaleSetDeployment,                   'vmScaleSetName', AzureVmScaleSetName,                   'serviceFabricClusterName', AzureServiceFabricClusterName,                   'vmScaleSetResourceId', AzureVmScaleSetResourceId,                   'resourceGroupName', columnifexists('AzureResourceGroup', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRange}\r\n    | where (ObjectName == 'Processor' and InstanceName == '_Total' and CounterName == '% Processor Time')\r\n    | where Computer in (computerList)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {aggregateLeftValue} by bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100), ResourceName",
                          "size": 0,
                          "aggregation": 3,
                          "showAnnotations": true,
                          "noDataMessage": "There is no data for this counter, either enable the counter or onboard machines to this workspace",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "visualization": "linechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Computer",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 16"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "### Logical Disk Space Used %"
                        },
                        "name": "text - 25"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "parameters": [
                            {
                              "id": "5d6afbec-79f6-4cd1-b3a1-361503478304",
                              "version": "KqlParameterItem/1.0",
                              "name": "Aggregate",
                              "type": 2,
                              "isRequired": true,
                              "value": "P95th = round(percentile(CounterValue, 95), 2)",
                              "typeSettings": {
                                "additionalResourceOptions": []
                              },
                              "jsonData": "[\r\n    { \"value\":\"Average = round(avg(CounterValue), 2)\", \"label\":\"Average\"},\r\n    { \"value\":\"P5th = round(percentile(CounterValue, 5), 2)\", \"label\":\"P5th\"},\r\n    { \"value\":\"P10th = round(percentile(CounterValue, 10), 2)\", \"label\":\"P10th\"},\r\n    { \"value\":\"P50th = round(percentile(CounterValue, 50), 2)\", \"label\":\"P50th\"},\r\n    { \"value\":\"P80th = round(percentile(CounterValue, 80), 2)\", \"label\":\"P80th\"},\r\n    { \"value\":\"P90th = round(percentile(CounterValue, 90), 2)\", \"label\":\"P90th\"},\r\n    { \"value\":\"P95th = round(percentile(CounterValue, 95), 2)\", \"label\":\"P95th\"}\r\n]"
                            },
                            {
                              "id": "1d5a805c-acce-4afe-a38b-c2740fb3ff26",
                              "version": "KqlParameterItem/1.0",
                              "name": "aggregateOrder",
                              "type": 1,
                              "query": "range Steps from 1 to 1 step 1\r\n| project value = iff('{Aggregate}' contains 'P5th'  or '{Aggregate}' contains 'P10th', 'asc', 'desc')",
                              "crossComponentResources": [
                                "{Resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "queryType": 0,
                              "resourceType": "microsoft.compute/virtualmachinescalesets"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.compute/virtualmachinescalesets"
                        },
                        "customWidth": "50",
                        "name": "parameters - 26"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let memorySummary=totable(Perf\r\n    | where TimeGenerated {TimeRange} \r\n    | where ObjectName == 'Memory' and CounterName in ('Available MBytes', 'Available MBytes Memory')\r\n    | summarize hint.shufflekey=Computer {aggregateRightValue} by Computer, CounterName\r\n    | top 10 by {aggregateRightLabel} {aggregateOrderRight});\r\nlet computerList=(memorySummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 1\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = VMComputer | extend ResourceId=strcat('machines/', Machine) | extend Bitness=columnifexists('Bitness', '')\r\n    | where TimeGenerated {TimeRange}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId, '|',                     AzureCloudServiceDeployment), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),              strcat(AzureVmScaleSetInstanceId, '|',                     AzureVmScaleSetDeployment), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', Computer,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId,                   'resourceGroup', AzureResourceGroup,                   'azureResourceId', columnifexists('_ResourceId', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', AzureCloudServiceInstanceId,                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName', ''),                   'cloudServiceDeploymentId', AzureCloudServiceDeployment,                   'cloudServiceName', AzureCloudServiceName,                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('Computer', ''),                   'vmScaleSetDeploymentId', AzureVmScaleSetDeployment,                   'vmScaleSetName', AzureVmScaleSetName,                   'serviceFabricClusterName', AzureServiceFabricClusterName,                   'vmScaleSetResourceId', AzureVmScaleSetResourceId,                   'resourceGroupName', columnifexists('AzureResourceGroup', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRange}\r\n    | where ObjectName == 'Memory' and CounterName in ('Available MBytes', 'Available MBytes Memory')\r\n    | where Computer in (computerList)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {aggregateRightValue} by bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100), ResourceName",
                          "size": 0,
                          "aggregation": 3,
                          "showAnnotations": true,
                          "noDataMessage": "There is no data for this counter, either enable the counter or onboard machines to this workspace",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "visualization": "linechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Computer",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let diskSummary=totable(Perf\r\n    | where TimeGenerated {TimeRange} \r\n    | where (ObjectName == 'LogicalDisk' and InstanceName != '_Total' and CounterName in ('% Free Space')) or        (ObjectName == 'Logical Disk' and InstanceName != '_Total' and CounterName in ('% Used Space'))\r\n    | project TimeGenerated, Computer,    CounterName = '% Used Space',    CounterValue = case(ObjectName == 'LogicalDisk' and CounterName == '% Free Space', 100 - CounterValue,                CounterValue < 0, real(0),                CounterValue)\r\n    | summarize hint.shufflekey=Computer {Aggregate} by Computer, CounterName\r\n    | top 10 by {Aggregate:label} {aggregateOrder});\r\nlet computerList=(diskSummary \r\n    | project Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];\r\nlet OmsNodeIdentityAndProps = computerList\r\n    | extend NodeId = Computer\r\n    | extend Priority = 1\r\n    | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer);\r\nlet ServiceMapNodeIdentityAndProps = VMComputer | extend ResourceId=strcat('machines/', Machine) | extend Bitness=columnifexists('Bitness', '')\r\n    | where TimeGenerated {TimeRange}\r\n    | where Computer in (computerList)\r\n    | summarize arg_max(TimeGenerated, *) by Computer\r\n    | extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId, '|',                     AzureCloudServiceDeployment), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),              strcat(AzureVmScaleSetInstanceId, '|',                     AzureVmScaleSetDeployment), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', Computer,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId,                   'resourceGroup', AzureResourceGroup,                   'azureResourceId', columnifexists('_ResourceId', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', AzureCloudServiceInstanceId,                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName', ''),                   'cloudServiceDeploymentId', AzureCloudServiceDeployment,                   'cloudServiceName', AzureCloudServiceName,                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('Computer', ''),                   'vmScaleSetDeploymentId', AzureVmScaleSetDeployment,                   'vmScaleSetName', AzureVmScaleSetName,                   'serviceFabricClusterName', AzureServiceFabricClusterName,                   'vmScaleSetResourceId', AzureVmScaleSetResourceId,                   'resourceGroupName', columnifexists('AzureResourceGroup', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                            \r\n    | summarize arg_max(Priority, *) by Computer; \r\nlet NodeIdentityAndPropsMin = NodeIdentityAndProps\r\n    | extend Kind = iff(NodeProps.type == \"StandAloneNode\", iff(NodeProps.azureResourceId == \"\", \"Non-Azure Virtual Machine\", \"Azure Virtual Machine\"), NodeProps.type), \r\n    ResourceId = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.vmScaleSetResourceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceDeploymentId, Computer)),\r\n    ResourceName = iff(NodeProps.type == \"AzureScaleSetNode\", NodeProps.scaleSetInstanceId, \r\n        iff(NodeProps.type == \"AzureCloudServiceNode\", NodeProps.cloudServiceInstanceId, Computer))\r\n    | project Computer, Kind, ResourceId, ResourceName;\r\nPerf\r\n    | where TimeGenerated {TimeRange}\r\n    | where (ObjectName == 'LogicalDisk' and InstanceName != '_Total' and CounterName in ('% Free Space')) or        (ObjectName == 'Logical Disk' and InstanceName != '_Total' and CounterName in ('% Used Space'))\r\n    | where Computer in (computerList)\r\n    | project TimeGenerated, Computer,    CounterName = '% Used Space',    CounterValue = case(ObjectName == 'LogicalDisk' and CounterName == '% Free Space', 100 - CounterValue,                CounterValue < 0, real(0),                CounterValue)\r\n    | join kind=leftouter (NodeIdentityAndPropsMin) on Computer\r\n    | summarize {Aggregate} by bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100), ResourceName",
                          "size": 0,
                          "aggregation": 3,
                          "showAnnotations": true,
                          "noDataMessage": "There is no data for this counter, either enable the counter or onboard machines to this workspace",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{Resource}"
                          ],
                          "visualization": "linechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Computer",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 28"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "vmss"
                  },
                  "name": "Backend"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "e91802d1-c791-417b-9923-48277fd5fb69",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "ClusterIP",
                              "subTarget": "cip",
                              "style": "link"
                            },
                            {
                              "id": "ae24447e-d3ce-4a19-b3e3-ff7ebaf8fc6a",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "NodeIp",
                              "subTarget": "nip",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "tabs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "e2b5cd30-7276-477f-a6bb-07da25ba5e5f",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "timeRange",
                                    "label": "Intervalo de Tempo",
                                    "type": 4,
                                    "description": "Filtrar dados por intervalo de tempo",
                                    "isRequired": true,
                                    "value": {
                                      "durationMs": 21600000
                                    },
                                    "typeSettings": {
                                      "selectableValues": [
                                        {
                                          "durationMs": 300000
                                        },
                                        {
                                          "durationMs": 900000
                                        },
                                        {
                                          "durationMs": 1800000
                                        },
                                        {
                                          "durationMs": 3600000
                                        },
                                        {
                                          "durationMs": 14400000
                                        },
                                        {
                                          "durationMs": 43200000
                                        },
                                        {
                                          "durationMs": 86400000
                                        },
                                        {
                                          "durationMs": 172800000
                                        },
                                        {
                                          "durationMs": 259200000
                                        },
                                        {
                                          "durationMs": 604800000
                                        },
                                        {
                                          "durationMs": 1209600000
                                        },
                                        {
                                          "durationMs": 2419200000
                                        },
                                        {
                                          "durationMs": 2592000000
                                        },
                                        {
                                          "durationMs": 5184000000
                                        },
                                        {
                                          "durationMs": 7776000000
                                        }
                                      ],
                                      "allowCustom": true
                                    }
                                  },
                                  {
                                    "id": "fe3adb7b-110f-42d8-a33c-b07ba9d0caf7",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "resource",
                                    "type": 5,
                                    "description": "Usado para localizar o recurso do qual executar consultas",
                                    "isRequired": true,
                                    "isHiddenWhenLocked": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::1"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::1"
                                  },
                                  {
                                    "id": "a59dd2c3-f62d-4007-839f-cab1a1fd6c76",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "resourceType",
                                    "type": 7,
                                    "description": "Usado para localizar o tipo de recurso do qual executar consultas",
                                    "isRequired": true,
                                    "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
                                    "isHiddenWhenLocked": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::1"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::1",
                                    "queryType": 8
                                  },
                                  {
                                    "id": "b8998f52-b18f-4319-8194-098a29fa6f80",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "clusterId",
                                    "type": 1,
                                    "description": "Filtrar o workspace selecionado por ID do cluster",
                                    "isHiddenWhenLocked": true,
                                    "timeContext": {
                                      "durationMs": 0
                                    },
                                    "timeContextFromParameter": "timeRange"
                                  },
                                  {
                                    "id": "e1c643ba-5308-4009-ab16-47d42b272399",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "clusterIdWhereClause",
                                    "type": 1,
                                    "description": "Usado para filtrar consultas por ID do cluster",
                                    "isRequired": true,
                                    "isHiddenWhenLocked": true,
                                    "criteriaData": [
                                      {
                                        "criteriaContext": {
                                          "leftOperand": "resourceType",
                                          "operator": "contains",
                                          "rightValType": "static",
                                          "rightVal": "microsoft.operationalinsights/workspaces",
                                          "resultValType": "static",
                                          "resultVal": "| where ClusterId =~ \"{clusterId}\""
                                        }
                                      },
                                      {
                                        "criteriaContext": {
                                          "operator": "Default",
                                          "rightValType": "param",
                                          "resultValType": "static",
                                          "resultVal": "| where \"a\" == \"a\""
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "id": "4c9a0f80-fa3e-44af-8f0d-6744ecf503c6",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "unit",
                                    "label": "Unidade",
                                    "type": 2,
                                    "description": "As unidades a serem usadas para os dados",
                                    "isRequired": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": [],
                                      "showDefault": false
                                    },
                                    "jsonData": "[\r\n    { \"label\": \"Bytes\", \"value\": \"1\", \"selected\": \"true\" },\r\n    { \"label\": \"Kilobytes\", \"value\": \"1000\", \"selected\": \"false\" },\r\n    { \"label\": \"Megabytes\", \"value\": \"1000000\", \"selected\": \"false\" },\r\n    { \"label\": \"Gigabytes\", \"value\": \"1000000000\", \"selected\": \"false\" }\r\n]"
                                  },
                                  {
                                    "id": "5a7770ff-fdc2-4590-85e2-5ee1c5653805",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "aggregation1",
                                    "label": "Agregação",
                                    "type": 2,
                                    "description": "Escolher qual agregação de dados você deseja visualizar no gráfico de tempo",
                                    "isRequired": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": [],
                                      "showDefault": false
                                    },
                                    "jsonData": "[\r\n    { \"label\": \"Max\", \"value\": \"Max\", \"selected\": \"true\" },\r\n    { \"label\": \"Average\", \"value\": \"Average\", \"selected\": \"false\" },\r\n    { \"label\": \"Min\", \"value\": \"Min\", \"selected\": \"false\" }\r\n]",
                                    "timeContext": {
                                      "durationMs": 21600000
                                    },
                                    "timeContextFromParameter": "timeRange"
                                  },
                                  {
                                    "id": "0c040f71-7b0d-4021-96e0-bbcdb6390de9",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "selectedNodes1",
                                    "label": "Nó",
                                    "type": 2,
                                    "description": "Filtrar por nó",
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| project HostName = tostring(Tags.hostName)\r\n| distinct HostName\r\n| sort by HostName asc\r\n\r\n",
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "selectAllValue": "*",
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 0
                                    },
                                    "timeContextFromParameter": "timeRange",
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "{resourceType}"
                                  },
                                  {
                                    "id": "3201a4f3-4914-45cd-810e-551688fd9069",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "selectedInterfaces1",
                                    "label": "Interface",
                                    "type": 2,
                                    "description": "Filtrar por interface",
                                    "isRequired": true,
                                    "multiSelect": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| project HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| distinct Interface\r\n| sort by Interface asc\r\n",
                                    "crossComponentResources": [
                                      "{resource}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "selectAllValue": "*",
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 0
                                    },
                                    "timeContextFromParameter": "timeRange",
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "{resourceType}"
                                  }
                                ],
                                "style": "above",
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters"
                              },
                              "name": "dropdowns"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<div style=\"border: 1px solid grey\"></div>"
                              },
                              "name": "text - 20"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>Detalhes da Rede</h3>"
                              },
                              "name": "text - 21"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = materialize(InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n{clusterIdWhereClause}\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedInterfaces1}) or Interface in ({selectedInterfaces1})\r\n| extend partitionKey = strcat(HostName, '/', Interface, '/', Name)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / datetime_diff('Second', TimeGenerated, PrevTimeGenerated), (Val - PrevVal) / datetime_diff('Second', TimeGenerated, PrevTimeGenerated))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Interface, Name, Rate\r\n);\r\nlet bytesSent = materialize(\r\ndata\r\n| where Name == 'bytes_sent'\r\n);\r\nlet bytesReceived = materialize(\r\ndata\r\n| where Name == 'bytes_recv'\r\n);\r\nlet errorsOut = materialize(\r\ndata\r\n| where Name == 'err_out'\r\n);\r\nlet errorsIn = materialize(\r\ndata\r\n| where Name == 'err_in'\r\n);\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nlet bytesSentTableData = bytesSent // bytes sent per sec data\r\n| summarize BytesSentPerSecond = avg(Rate) by HostName, Interface // for interfaces, group by parentId (HostName) \r\n| join kind = inner (\r\n    bytesSent\r\n    | make-series BytesSentPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project Id = strcat(HostName, Interface), HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', BytesSentPerSecond, BytesSentPerSecondTrend;\r\nlet bytesReceivedTableData = bytesReceived // bytes received per sec data\r\n| summarize BytesReceivedPerSecond = avg(Rate) by HostName, Interface\r\n| join kind = inner (\r\n    bytesReceived\r\n    | make-series BytesReceivedPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project Id = strcat(HostName, Interface), HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', BytesReceivedPerSecond, BytesReceivedPerSecondTrend;\r\nlet errorsOutTableData = errorsOut // errors out per sec data\r\n| summarize ErrorsOutPerSecond = avg(Rate) by HostName, Interface\r\n| join kind = inner (\r\n    errorsOut\r\n    | make-series ErrorsOutPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project Id = strcat(HostName, Interface), HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', ErrorsOutPerSecond, ErrorsOutPerSecondTrend;\r\nlet errorsInTableData = errorsIn // errors in per sec data\r\n| summarize ErrorsInPerSecond = avg(Rate) by HostName, Interface\r\n| join kind = inner (\r\n    errorsIn\r\n    | make-series ErrorsInPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n) on HostName\r\n| where Interface == Interface1\r\n| project Id = strcat(HostName, Interface), HostName, Interface, Name = strcat('🔹 ', Interface), ParentId = strcat('🖥️ ', HostName), Kind = 'Interface', ErrorsInPerSecond, ErrorsInPerSecondTrend;\r\nbytesSentTableData\r\n| join kind = inner ( bytesReceivedTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, HostName1, Interface1\r\n| join kind = inner ( errorsOutTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, HostName1, Interface1\r\n| join kind = inner ( errorsInTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, HostName1, Interface1\r\n| project-rename ['Sent Bytes/sec'] = BytesSentPerSecond, ['Sent Bytes/sec Trend'] = BytesSentPerSecondTrend, ['Received Bytes/sec'] = BytesReceivedPerSecond, ['Received Bytes/sec Trend'] = BytesReceivedPerSecondTrend, ['Errors Out/sec'] = ErrorsOutPerSecond, ['ErrorsOut/sec Trend'] = ErrorsOutPerSecondTrend, ['Errors In/sec'] = ErrorsInPerSecond, ['Errors In/sec Trend'] = ErrorsInPerSecondTrend\r\n| order by Id asc\r\n| project-rename FullId = Id, GridId = Name, Name = ParentId",
                                "size": 0,
                                "showAnalytics": true,
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "FullId",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "HostName",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Interface",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "GridId",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Name",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Kind",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Sent Bytes/sec",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "showIcon": true
                                      },
                                      "numberFormat": {
                                        "unit": 11,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Sent Bytes/sec Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Received Bytes/sec",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "showIcon": true
                                      },
                                      "numberFormat": {
                                        "unit": 11,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Received Bytes/sec Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Errors Out/sec",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "showIcon": true
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "ErrorsOut/sec Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Errors In/sec",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "showIcon": true
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Errors In/sec Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "hierarchySettings": {
                                    "treeType": 1,
                                    "groupBy": [
                                      "Name"
                                    ],
                                    "expandTopLevel": true,
                                    "finalBy": "GridId"
                                  }
                                }
                              },
                              "showPin": true,
                              "name": "overview-grid"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<br/>\r\n<div style=\"border: 1px solid grey\"></div>\r\n<br/>\r\n"
                              },
                              "name": "text - 20 - Copy"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>{unit:label}/s enviados</h3>"
                              },
                              "customWidth": "50",
                              "name": "text - 5"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>{unit:label}/s recebidos</h3>"
                              },
                              "customWidth": "50",
                              "name": "text - 5 - Copy"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let bytesSentPerSecond = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| where Name == 'bytes_sent'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedInterfaces1}) or Interface in ({selectedInterfaces1})\r\n| extend partitionKey = strcat(HostName, '/', Interface)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit}), (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit}))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Interface, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nbytesSentPerSecond\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n| extend Name = strcat(HostName, Interface)\r\n| project-away HostName, Interface",
                                "size": 0,
                                "aggregation": 1,
                                "showAnalytics": true,
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "timechart",
                                "tileSettings": {
                                  "showBorder": false
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "bytes-sent-per-sec"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let bytesReceivedPerSecond = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| where Name == 'bytes_recv'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedInterfaces1}) or Interface in ({selectedInterfaces1})\r\n| extend partitionKey = strcat(HostName, '/', Interface)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit}), (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit}))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Interface, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nbytesReceivedPerSecond\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n| extend Name = strcat(HostName, Interface)\r\n| project-away HostName, Interface",
                                "size": 0,
                                "aggregation": 1,
                                "showAnalytics": true,
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "timechart"
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "bytes-received-per-sec"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<br/>\r\n<br/>\r\n"
                              },
                              "name": "text - 23"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>Erros de Saída/s</h3>"
                              },
                              "customWidth": "50",
                              "name": "text - 5 - Copy - Copy - Copy"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>Erros de Entrada/s</h3>"
                              },
                              "customWidth": "50",
                              "name": "text - 5 - Copy - Copy - Copy - Copy"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let errorsOutPerSecond = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| where Name == 'err_out'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedInterfaces1}) or Interface in ({selectedInterfaces1})\r\n| extend partitionKey = strcat(HostName, '/', Interface)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / datetime_diff('Second', TimeGenerated, PrevTimeGenerated), (Val - PrevVal) / datetime_diff('Second', TimeGenerated, PrevTimeGenerated))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Interface, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nerrorsOutPerSecond\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n| extend Name = strcat(HostName, Interface)\r\n| project-away HostName, Interface",
                                "size": 0,
                                "aggregation": 2,
                                "showAnalytics": true,
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "timechart"
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "errors-out-per-sec"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let totalErrorsIn = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/net'\r\n| where Name == 'err_in'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Interface = tostring(Tags.interface)\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedInterfaces1}) or Interface in ({selectedInterfaces1})\r\n| extend partitionKey = strcat(HostName, '/', Interface)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Interface, Rate;\r\ntotalErrorsIn\r\n| make-series Val = sum(Rate) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Interface\r\n| extend Name = strcat(HostName, '/', Interface)\r\n| project-away HostName, Interface",
                                "size": 0,
                                "aggregation": 2,
                                "showAnalytics": true,
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "timechart"
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "total-errors-in"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "cip"
                        },
                        "name": "group - 1"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "e2b5cd30-7276-477f-a6bb-07da25ba5e5f",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "timeRange",
                                    "label": "Intervalo de Tempo",
                                    "type": 4,
                                    "description": "Filtrar dados por intervalo de tempo",
                                    "isRequired": true,
                                    "value": {
                                      "durationMs": 14400000
                                    },
                                    "typeSettings": {
                                      "selectableValues": [
                                        {
                                          "durationMs": 300000
                                        },
                                        {
                                          "durationMs": 900000
                                        },
                                        {
                                          "durationMs": 1800000
                                        },
                                        {
                                          "durationMs": 3600000
                                        },
                                        {
                                          "durationMs": 14400000
                                        },
                                        {
                                          "durationMs": 43200000
                                        },
                                        {
                                          "durationMs": 86400000
                                        },
                                        {
                                          "durationMs": 172800000
                                        },
                                        {
                                          "durationMs": 259200000
                                        },
                                        {
                                          "durationMs": 604800000
                                        },
                                        {
                                          "durationMs": 1209600000
                                        },
                                        {
                                          "durationMs": 2419200000
                                        },
                                        {
                                          "durationMs": 2592000000
                                        },
                                        {
                                          "durationMs": 5184000000
                                        },
                                        {
                                          "durationMs": 7776000000
                                        }
                                      ],
                                      "allowCustom": true
                                    }
                                  },
                                  {
                                    "id": "9adae9d2-c1ef-406b-8a8e-542339b7d6e6",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "resource",
                                    "type": 5,
                                    "description": "Usar recurso para executar consultas",
                                    "isRequired": true,
                                    "isHiddenWhenLocked": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::1"
                                      ],
                                      "showDefault": false
                                    },
                                    "defaultValue": "value::1"
                                  },
                                  {
                                    "id": "bef28ac6-e7cd-49cb-a725-75445af026ce",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "resourceType",
                                    "type": 7,
                                    "isRequired": true,
                                    "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
                                    "isHiddenWhenLocked": true,
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::1"
                                      ]
                                    },
                                    "defaultValue": "value::1",
                                    "queryType": 8
                                  },
                                  {
                                    "id": "60b4641b-95e1-4071-8b76-d91fc9fd1279",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "clusterId",
                                    "type": 1,
                                    "isHiddenWhenLocked": true
                                  },
                                  {
                                    "id": "50cfa84f-4ea3-418f-8ab5-63ce0fb75f64",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "clusterIdWhereClause",
                                    "type": 1,
                                    "description": "Usado para filtrar os workspaces por ID do cluster",
                                    "isRequired": true,
                                    "isHiddenWhenLocked": true,
                                    "criteriaData": [
                                      {
                                        "criteriaContext": {
                                          "leftOperand": "resourceType",
                                          "operator": "contains",
                                          "rightValType": "static",
                                          "rightVal": "microsoft.operationalinsights/workspaces",
                                          "resultValType": "static",
                                          "resultVal": "| where ClusterId =~ '{clusterId}'"
                                        }
                                      },
                                      {
                                        "criteriaContext": {
                                          "operator": "Default",
                                          "rightValType": "param",
                                          "resultValType": "static",
                                          "resultVal": "| where 'a' == 'a'"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "id": "a50899c3-789d-47c7-89f6-ece3ecd86d0b",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "hasData",
                                    "type": 1,
                                    "query": "let numNpmPolicies = toscalar(InsightsMetrics\r\n| where Namespace == 'prometheus'\r\n| where Name == 'npm_num_policies'\r\n| extend PositiveVal = Val\r\n| summarize arg_max(TimeGenerated, *)\r\n| top 1 by PositiveVal\r\n| project PositiveVal\r\n);\r\nprint(iif(isempty(numNpmPolicies), false, true))",
                                    "isHiddenWhenLocked": true,
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "above",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "pills"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "InsightsMetrics\r\n| where Namespace == \"prometheus\"\r\n| where Name in (\"npm_num_policies\", \"npm_num_iptables_rules\", \"npm_num_ipsets\")\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| extend metricName = case(Name == \"npm_num_policies\", \"Policies\", \r\n                            Name == \"npm_num_iptables_rules\", \"IPTables Rules\", \r\n                            \"IPSets\")\r\n| summarize arg_max(TimeGenerated, Val) by metricName\r\n| project Metric = metricName, Number = Val\r\n| order by Metric desc",
                                "size": 4,
                                "title": "Contagens Atuais",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "queryType": 0,
                                "resourceType": "microsoft.containerservice/managedclusters",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Metric",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Number",
                                    "formatter": 12
                                  },
                                  "showBorder": false,
                                  "rowLimit": 3,
                                  "sortCriteriaField": "Metric",
                                  "sortOrderField": 2
                                }
                              },
                              "name": "summary-info"
                            },
                            {
                              "type": 11,
                              "content": {
                                "version": "LinkItem/1.0",
                                "style": "tabs",
                                "links": [
                                  {
                                    "id": "668e8414-c609-4192-a60d-a17fe38a258b",
                                    "cellValue": "selectedTab",
                                    "linkTarget": "parameter",
                                    "linkLabel": "Contagens ao longo do Tempo",
                                    "subTarget": "Summary Counts",
                                    "style": "link"
                                  },
                                  {
                                    "id": "946f4b45-1d50-41e5-a625-e94fcb5cb450",
                                    "cellValue": "selectedTab",
                                    "linkTarget": "parameter",
                                    "linkLabel": "Entradas do IPSet",
                                    "subTarget": "IPSet Entries",
                                    "style": "link"
                                  },
                                  {
                                    "id": "c2368c06-96b6-41df-b29a-9c58452b91bf",
                                    "cellValue": "selectedTab",
                                    "linkTarget": "parameter",
                                    "linkLabel": "Runtime",
                                    "subTarget": "Runtime",
                                    "style": "link"
                                  }
                                ]
                              },
                              "name": "tabs"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| where Namespace == \"prometheus\"\r\n| where Name == \"npm_num_policies\"\r\n| summarize min(Val) by bin(TimeGenerated, {timeRange:grain})\r\n| project TimeGenerated, Count = min_Val",
                                      "size": 0,
                                      "aggregation": 2,
                                      "showAnalytics": true,
                                      "title": "Políticas de Rede",
                                      "timeContextFromParameter": "timeRange",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "timechart",
                                      "chartSettings": {
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 17,
                                            "options": {
                                              "style": "decimal"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "customWidth": "50",
                                    "showPin": true,
                                    "name": "num-policies-chart",
                                    "styleSettings": {
                                      "showBorder": true
                                    }
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| where Namespace == \"prometheus\"\r\n| where Name == \"npm_num_iptables_rules\"\r\n| summarize min(Val) by bin(TimeGenerated, {timeRange:grain})\r\n| project  TimeGenerated, Count = min_Val",
                                      "size": 0,
                                      "aggregation": 2,
                                      "showAnalytics": true,
                                      "title": "Regras de IPTables",
                                      "timeContextFromParameter": "timeRange",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "timechart",
                                      "chartSettings": {
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 17,
                                            "options": {
                                              "style": "decimal"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "customWidth": "50",
                                    "showPin": true,
                                    "name": "num-ip-tabes-rules-chart",
                                    "styleSettings": {
                                      "showBorder": true
                                    }
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| where Namespace == \"prometheus\"\r\n| where Name == \"npm_num_ipsets\"\r\n| summarize min(Val) by bin(TimeGenerated, {timeRange:grain})\r\n| project  TimeGenerated, Count = min_Val",
                                      "size": 0,
                                      "aggregation": 2,
                                      "showAnalytics": true,
                                      "title": "IPSets",
                                      "timeContextFromParameter": "timeRange",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "timechart",
                                      "chartSettings": {
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 17,
                                            "options": {
                                              "style": "decimal"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "customWidth": "50",
                                    "showPin": true,
                                    "name": "num-ip-sets-chart",
                                    "styleSettings": {
                                      "showBorder": true
                                    }
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "selectedTab",
                                "comparison": "isEqualTo",
                                "value": "Summary Counts"
                              },
                              "name": "counts-over-time-tab"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| where Namespace == \"prometheus\"\r\n| where Name == \"npm_num_ipset_entries\"\r\n| summarize arg_max(TimeGenerated, Val)",
                                      "size": 4,
                                      "title": "Total de Entradas",
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "tiles",
                                      "tileSettings": {
                                        "titleContent": {
                                          "formatter": 1
                                        },
                                        "secondaryContent": {
                                          "columnMatch": "Val",
                                          "formatter": 8,
                                          "formatOptions": {
                                            "max": 60000,
                                            "palette": "orange"
                                          }
                                        },
                                        "showBorder": false,
                                        "rowLimit": 1,
                                        "size": "auto"
                                      },
                                      "graphSettings": {
                                        "type": 0
                                      },
                                      "mapSettings": {
                                        "locInfo": "LatLong",
                                        "sizeSettings": "sum_Val",
                                        "sizeAggregation": "Sum",
                                        "legendMetric": "sum_Val",
                                        "legendAggregation": "Sum",
                                        "itemColorSettings": {
                                          "type": "heatmap",
                                          "colorAggregation": "Sum",
                                          "nodeColorField": "sum_Val",
                                          "heatmapPalette": "greenRed"
                                        }
                                      }
                                    },
                                    "customWidth": "20",
                                    "name": "total-ip-set-entries-tile"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| where Namespace == \"prometheus\"\r\n| where Name == \"npm_ipset_counts\"\r\n| where TimeGenerated > ago(2m)\r\n| extend tags = parse_json(Tags)\r\n| extend setName = tostring(tags.set_name)\r\n| extend Hash = tostring(tags.set_hash)\r\n| summarize arg_max(TimeGenerated, Val) by setName, Hash\r\n| where Val > 0\r\n| order by Val desc, setName asc\r\n| project Set = setName, Hash, Entries = Val",
                                      "size": 0,
                                      "title": "Entradas por IPSet",
                                      "noDataMessage": "Para acessar esse recurso, ative as métricas de NPM avançadas na configuração do agente dos Insights do Contêiner.",
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "table",
                                      "gridSettings": {
                                        "formatters": [
                                          {
                                            "columnMatch": "Entries",
                                            "formatter": 8,
                                            "formatOptions": {
                                              "max": 252,
                                              "palette": "orange"
                                            }
                                          }
                                        ],
                                        "filter": true
                                      }
                                    },
                                    "customWidth": "80",
                                    "name": "ip-set-entries-table",
                                    "styleSettings": {
                                      "showBorder": true
                                    }
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "selectedTab",
                                "comparison": "isEqualTo",
                                "value": "IPSet Entries"
                              },
                              "name": "ip-set-entries-tab"
                            },
                            {
                              "type": 12,
                              "content": {
                                "version": "NotebookGroup/1.0",
                                "groupType": "editable",
                                "items": [
                                  {
                                    "type": 9,
                                    "content": {
                                      "version": "KqlParameterItem/1.0",
                                      "parameters": [
                                        {
                                          "id": "5bddf726-0d42-42c6-ae5d-d8001b719a71",
                                          "version": "KqlParameterItem/1.0",
                                          "name": "hostName",
                                          "label": "Nome do Host",
                                          "type": 2,
                                          "isRequired": true,
                                          "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| where Namespace == 'prometheus'\r\n| where Name contains 'npm_'\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| extend hostName = tostring(parse_json(Tags).hostName)\r\n| distinct hostName\r\n| where isnotempty(hostName)\r\n| order by hostName asc",
                                          "crossComponentResources": [
                                            "{resource}"
                                          ],
                                          "typeSettings": {
                                            "additionalResourceOptions": [
                                              "value::1"
                                            ],
                                            "showDefault": false
                                          },
                                          "timeContext": {
                                            "durationMs": 0
                                          },
                                          "timeContextFromParameter": "timeRange",
                                          "defaultValue": "value::1",
                                          "queryType": 0,
                                          "resourceType": "{resourceType}"
                                        },
                                        {
                                          "id": "64de23e6-96b5-4105-b65d-36e40f73f4ec",
                                          "version": "KqlParameterItem/1.0",
                                          "name": "quantiles",
                                          "label": "Quantis",
                                          "type": 2,
                                          "description": "Filtrar por quantil",
                                          "isRequired": true,
                                          "multiSelect": true,
                                          "quote": "'",
                                          "delimiter": ",",
                                          "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| where Name contains \"npm_\"\r\n| where Namespace == \"prometheus\"\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| extend quantile = todouble(parse_json(Tags).quantile)\r\n| distinct quantile\r\n| where isnotempty(quantile)\r\n| order by quantile desc",
                                          "crossComponentResources": [
                                            "{resource}"
                                          ],
                                          "typeSettings": {
                                            "additionalResourceOptions": [
                                              "value::all"
                                            ],
                                            "showDefault": false
                                          },
                                          "timeContext": {
                                            "durationMs": 0
                                          },
                                          "timeContextFromParameter": "timeRange",
                                          "defaultValue": "value::all",
                                          "queryType": 0,
                                          "resourceType": "{resourceType}"
                                        },
                                        {
                                          "id": "1f1fceae-b535-42b7-b376-66bb5f691078",
                                          "version": "KqlParameterItem/1.0",
                                          "name": "quantileWhereClause",
                                          "type": 1,
                                          "isHiddenWhenLocked": true,
                                          "criteriaData": [
                                            {
                                              "criteriaContext": {
                                                "leftOperand": "quantiles",
                                                "operator": "is Empty",
                                                "rightValType": "param",
                                                "resultValType": "expression",
                                                "resultVal": "| where 'a' == 'a'"
                                              }
                                            },
                                            {
                                              "criteriaContext": {
                                                "operator": "Default",
                                                "rightValType": "param",
                                                "resultValType": "static",
                                                "resultVal": "| where tags.quantile in ({quantiles})"
                                              }
                                            }
                                          ],
                                          "timeContext": {
                                            "durationMs": 14400000
                                          },
                                          "timeContextFromParameter": "timeRange"
                                        }
                                      ],
                                      "style": "above",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}"
                                    },
                                    "name": "pills-under-runtime-tab"
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| where Name == \"npm_add_policy_exec_time\"\r\n| where Namespace == \"prometheus\"\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| extend tags = parse_json(Tags)\r\n{quantileWhereClause}\r\n| extend hostName = tostring(tags.hostName)\r\n| where hostName == \"{hostName}\"\r\n| extend quantileVal = todouble(tags.quantile)\r\n| extend fullName = strcat(toint(quantileVal * 100), \"% quantile\")\r\n| summarize max(Val) by bin(TimeGenerated, {timeRange:grain}), fullName\r\n| project TimeGenerated, Time = max_Val, fullName",
                                      "size": 0,
                                      "aggregation": 2,
                                      "showAnalytics": true,
                                      "title": "Adicionar Runtime de Política",
                                      "noDataMessage": "Talvez não tenha ocorrido nenhuma observação nesse intervalo de tempo.",
                                      "timeContextFromParameter": "timeRange",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "timechart",
                                      "chartSettings": {
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 23,
                                            "options": {
                                              "style": "decimal",
                                              "maximumFractionDigits": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "customWidth": "50",
                                    "showPin": true,
                                    "name": "add-policy-runtime-chart",
                                    "styleSettings": {
                                      "maxWidth": "50%",
                                      "showBorder": true
                                    }
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| where Name == \"npm_add_iptables_rule_exec_time\"\r\n| where Namespace == \"prometheus\"\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| extend tags = parse_json(Tags)\r\n{quantileWhereClause}\r\n| extend hostName = tostring(tags.hostName)\r\n| where hostName == \"{hostName}\"\r\n| extend quantileVal = todouble(tags.quantile)\r\n| extend fullName = strcat(toint(quantileVal * 100), \"% quantile\")\r\n| summarize max(Val) by bin(TimeGenerated, {timeRange:grain}), fullName\r\n| project TimeGenerated, Time = max_Val, fullName",
                                      "size": 0,
                                      "aggregation": 2,
                                      "showAnalytics": true,
                                      "title": "Adicionar Runtime de Regra do IPTables",
                                      "noDataMessage": "Talvez não tenha ocorrido nenhuma observação nesse intervalo de tempo.",
                                      "timeContextFromParameter": "timeRange",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "timechart",
                                      "chartSettings": {
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 23,
                                            "options": {
                                              "style": "decimal",
                                              "maximumFractionDigits": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "customWidth": "50",
                                    "showPin": true,
                                    "name": "add-ip-tables-rule-runtime-chart",
                                    "styleSettings": {
                                      "showBorder": true
                                    }
                                  },
                                  {
                                    "type": 3,
                                    "content": {
                                      "version": "KqlItem/1.0",
                                      "query": "InsightsMetrics\r\n| where TimeGenerated < {timeRange:end} and TimeGenerated >= {timeRange:start}\r\n| where Name == \"npm_add_ipset_exec_time\"\r\n| where Namespace == \"prometheus\"\r\n| extend ClusterId = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n{clusterIdWhereClause}\r\n| extend tags = parse_json(Tags)\r\n{quantileWhereClause}\r\n| extend hostName = tostring(tags.hostName)\r\n| where hostName == \"{hostName}\"\r\n| extend quantileVal = todouble(tags.quantile)\r\n| extend fullName = strcat(toint(quantileVal * 100), \"% quantile\")\r\n| summarize max(Val) by bin(TimeGenerated, {timeRange:grain}), fullName\r\n| project TimeGenerated, Time = max_Val, fullName",
                                      "size": 0,
                                      "aggregation": 2,
                                      "showAnalytics": true,
                                      "title": "Adicionar Runtime do IPSets",
                                      "noDataMessage": "Talvez não tenha ocorrido nenhuma observação nesse intervalo de tempo.",
                                      "timeContextFromParameter": "timeRange",
                                      "queryType": 0,
                                      "resourceType": "{resourceType}",
                                      "crossComponentResources": [
                                        "{resource}"
                                      ],
                                      "visualization": "timechart",
                                      "chartSettings": {
                                        "ySettings": {
                                          "numberFormatSettings": {
                                            "unit": 23,
                                            "options": {
                                              "style": "decimal",
                                              "maximumFractionDigits": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "customWidth": "50",
                                    "showPin": true,
                                    "name": "add-ip-sets-runtime-chart",
                                    "styleSettings": {
                                      "showBorder": true
                                    }
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "selectedTab",
                                "comparison": "isEqualTo",
                                "value": "Runtime"
                              },
                              "name": "runtime-tab"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "nip"
                        },
                        "name": "group - 2"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Ncluster"
                  },
                  "name": "group - 0"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "parameters": [
                            {
                              "id": "d9ba2e0d-ed51-4222-b6fa-84275b6181f9",
                              "version": "KqlParameterItem/1.0",
                              "name": "timeRange",
                              "type": 4,
                              "isRequired": true,
                              "value": {
                                "durationMs": 21600000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  }
                                ],
                                "allowCustom": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "label": "Time Range"
                            },
                            {
                              "id": "094c734b-c498-43a8-a1e1-1c99facc76c1",
                              "version": "KqlParameterItem/1.0",
                              "name": "resource",
                              "type": 5,
                              "description": "Resource to run queries off of",
                              "isRequired": true,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::1"
                            },
                            {
                              "id": "f7a7d374-98be-4c71-8475-d217b99e869c",
                              "version": "KqlParameterItem/1.0",
                              "name": "resourceType",
                              "type": 7,
                              "description": "Resource type to run queries off of",
                              "isRequired": true,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::1",
                              "queryType": 8
                            },
                            {
                              "id": "7ca5d424-3756-4ae7-b65b-26829f014c33",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterId",
                              "type": 1,
                              "description": "Filter queries by cluster id",
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": "/subscriptions/b123d671-00f6-461f-9065-e80587bfbc35/resourcegroups/aks-rg/providers/Microsoft.ContainerService/managedClusters/cluster_monitoring_prod"
                            },
                            {
                              "id": "f1c34272-0c59-4f41-bd8a-f99734f355ac",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterIdWhereClause",
                              "type": 1,
                              "description": "Filter queries by cluster id",
                              "isRequired": true,
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "criteriaContext": {
                                    "leftOperand": "resourceType",
                                    "operator": "contains",
                                    "rightValType": "static",
                                    "rightVal": "Microsoft.operationalinsights/workspaces",
                                    "resultValType": "static",
                                    "resultVal": "| where ClusterId =~ \"{clusterId}\""
                                  }
                                },
                                {
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where \"a\" == \"a\""
                                  }
                                }
                              ],
                              "timeContext": {
                                "durationMs": 86400000
                              }
                            },
                            {
                              "id": "649427ba-20ed-47f0-80e7-860a1ee5521f",
                              "version": "KqlParameterItem/1.0",
                              "name": "namespace",
                              "type": 2,
                              "description": "Filter by namespace",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "InsightsMetrics\r\n| where Name contains \"kube_\"\r\n| extend Tags = parse_json(Tags)\r\n| extend ClusterId = Tags[\"container.azm.ms/clusterId\"]\r\n{clusterIdWhereClause}\r\n| extend k8sNamespace = tostring(Tags.k8sNamespace)\r\n| distinct k8sNamespace\r\n| project k8sNamespace",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}",
                              "label": "Namespace"
                            },
                            {
                              "id": "067ed1a2-d4ed-49a0-adf3-7efd7f7071ac",
                              "version": "KqlParameterItem/1.0",
                              "name": "deploymentName",
                              "type": 2,
                              "description": "Filter by deployment",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "InsightsMetrics\r\n| where Name == \"kube_deployment_status_replicas_ready\"\r\n| extend Tags = parse_json(Tags)\r\n| extend ClusterId = Tags[\"container.azm.ms/clusterId\"]\r\n{clusterIdWhereClause}\r\n| extend DeploymentName = tostring(Tags.deployment)\r\n| where Tags.k8sNamespace in ({namespace})\r\n| distinct DeploymentName\r\n| project DeploymentName",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}",
                              "label": "Deployment"
                            },
                            {
                              "id": "a01cf284-1c57-4788-a105-d4c69300156e",
                              "version": "KqlParameterItem/1.0",
                              "name": "hpa",
                              "type": 2,
                              "description": "Filter by HPA",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "InsightsMetrics\r\n| where Name contains \"hpa\"\r\n| extend Tags = parse_json(Tags)\r\n| extend ClusterId = Tags[\"container.azm.ms/clusterId\"]\r\n{clusterIdWhereClause}\r\n| extend Namespaces = tostring(Tags.k8sNamespace)\r\n| where Namespaces in ({namespace})\r\n| extend hpa = tostring(Tags.hpa)\r\n| project hpa, Namespaces\r\n| distinct *\r\n| project hpa",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}",
                              "label": "HPA"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "{resourceType}"
                        },
                        "name": "pills"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "539ff615-7d81-4859-93fe-d06d0f28080e",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Deployment",
                              "subTarget": "Deployment",
                              "style": "link"
                            },
                            {
                              "id": "36737f64-389e-47a2-8bfb-a43423a142e6",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "HPA",
                              "subTarget": "HPA",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "tabs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "InsightsMetrics\r\n| where Name == \"kube_deployment_status_replicas_ready\"\r\n| extend parsed = parse_json(Tags)\r\n| where parsed.deployment in ({deploymentName})\r\n| extend Deployment = tostring(parsed.deployment)\r\n| extend k8sNamespace = tostring(parsed.k8sNamespace)\r\n| extend Ready = Val/parsed.spec_replicas * 100, Updated = Val/parsed.status_replicas_updated * 100, Available = Val/parsed.status_replicas_available * 100\r\n| extend ReadyCase = case(Ready == 100, \"Healthy\", \"Warning\"),  UpdatedCase = case(Updated == 100, \"Healthy\", \"Warning\"),  AvailableCase = case(Available == 100, \"Healthy\", \"Warning\")\r\n| extend Overall = case(ReadyCase == \"Healthy\" and UpdatedCase == \"Healthy\" and AvailableCase == \"Healthy\", \"Healthy\", \"Warning\")\r\n| summarize arg_max(TimeGenerated, *) by k8sNamespace, Deployment\r\n| summarize OverallStatus = count() by Overall",
                                "size": 3,
                                "title": "Deployment Status",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "exportParameterName": "OverallFilter",
                                "exportDefaultValue": "*",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Overall",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "Warning",
                                          "representation": "redBright",
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "green",
                                          "text": "{0}{1}"
                                        }
                                      ]
                                    }
                                  },
                                  "leftContent": {
                                    "columnMatch": "OverallStatus",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "none"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false,
                                        "maximumFractionDigits": 2,
                                        "maximumSignificantDigits": 3
                                      }
                                    }
                                  },
                                  "showBorder": false,
                                  "sortCriteriaField": "Overall",
                                  "sortOrderField": 2
                                }
                              },
                              "showPin": true,
                              "name": "Deployment Status Tiles"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = materialize(\r\nInsightsMetrics\r\n| where Name == \"kube_deployment_status_replicas_ready\"\r\n| extend Tags = parse_json(Tags)\r\n| extend ClusterId = Tags[\"container.azm.ms/clusterId\"]\r\n{clusterIdWhereClause}\r\n| where Tags.deployment in ({deploymentName})\r\n| extend Deployment = tostring(Tags.deployment)\r\n| extend k8sNamespace = tostring(Tags.k8sNamespace)\r\n| extend Ready = Val/Tags.spec_replicas * 100, Updated = Val/Tags.status_replicas_updated * 100, Available = Val/Tags.status_replicas_available * 100\r\n| project k8sNamespace, Deployment, Ready, Updated, Available, TimeGenerated, Tags\r\n);\r\nlet data2 = data\r\n| extend Age = (now() - todatetime(Tags[\"creationTime\"]))/1m\r\n| summarize arg_max(TimeGenerated, *) by k8sNamespace, Deployment\r\n| project k8sNamespace, Deployment, Age, Ready, Updated, Available;\r\nlet ReadyData = data\r\n| make-series ReadyTrend = avg(Ready) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, Deployment;\r\nlet UpdatedData = data\r\n| make-series UpdatedTrend = avg(Updated) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, Deployment;\r\nlet AvailableData = data\r\n| make-series AvailableTrend = avg(Available) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, Deployment;\r\ndata2\r\n| join kind = inner(ReadyData) on k8sNamespace, Deployment \r\n| join kind = inner(UpdatedData) on k8sNamespace, Deployment \r\n| join kind = inner(AvailableData) on k8sNamespace, Deployment\r\n| extend ReadyCase = case(Ready == 100, \"Healthy\", \"Warning\"),  UpdatedCase = case(Updated == 100, \"Healthy\", \"Warning\"),  AvailableCase = case(Available == 100, \"Healthy\", \"Warning\")\r\n| extend Overall = case(ReadyCase == \"Healthy\" and UpdatedCase == \"Healthy\" and AvailableCase == \"Healthy\", \"Healthy\", \"Warning\")\r\n| extend OverallFilterStatus = case('{OverallFilter}' contains \"Healthy\", \"Healthy\", '{OverallFilter}' contains \"Warning\", \"Warning\", \"Healthy, Warning\")\r\n| where OverallFilterStatus has Overall\r\n| project Deployment, Namespace = k8sNamespace, Age, Ready, ReadyTrend, Updated, UpdatedTrend, Available,AvailableTrend\r\n| sort by Ready asc\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Age",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 25,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": false,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Ready",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "100",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "NaN",
                                            "representation": "more",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "2",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": false,
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "ReadyTrend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redGreen"
                                      }
                                    },
                                    {
                                      "columnMatch": "Updated",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "100",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "NaN",
                                            "representation": "more",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "warning",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "UpdatedTrend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redGreen"
                                      }
                                    },
                                    {
                                      "columnMatch": "Available",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "100",
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "==",
                                            "thresholdValue": "NaN",
                                            "representation": "more",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "warning",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      },
                                      "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 1
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "AvailableTrend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "redGreen"
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "Deployment",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Updated",
                                      "label": "Up-to-date"
                                    },
                                    {
                                      "columnId": "UpdatedTrend",
                                      "label": "Up-to-dateTrend"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Deployment",
                                    "sortOrder": 2
                                  }
                                ],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "Ready",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "colors",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "1",
                                          "representation": null,
                                          "text": "{0}{1}"
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": null,
                                          "text": "{0}{1}"
                                        }
                                      ]
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "showPin": true,
                              "name": "Deployment Status Grid"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "Deployment"
                        },
                        "name": "deployments-tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "_No HPA data is currently available._"
                              },
                              "conditionalVisibility": {
                                "parameterName": "hpa",
                                "comparison": "isEqualTo"
                              },
                              "name": "no-hpas-text"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let ParsedData = materialize(\r\nInsightsMetrics\r\n| where Name contains \"hpa\"\r\n| extend Tags = parse_json(Tags)\r\n| extend ClusterId = Tags[\"container.azm.ms/clusterId\"]\r\n{clusterIdWhereClause}\r\n| extend HPAs = tostring(Tags.hpa), Deployment = tostring(Tags.targetName), k8sNamespace = tostring(Tags.k8sNamespace)\r\n| where HPAs in ({hpa})\r\n| where k8sNamespace in ({namespace})\r\n| extend lastScaleTime = todatetime(Tags.lastScaleTime)\r\n);\r\nlet ValData = ParsedData\r\n| make-series ValTrend = avg(Val) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nlet MinData = ParsedData\r\n| make-series MinTrend = avg(toint(Tags.spec_min_replicas)) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nlet MaxData = ParsedData\r\n| make-series MaxTrend = avg(toint(Tags.spec_max_replicas)) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nlet DesiredData = ParsedData\r\n| make-series DesiredTrend = avg(toint(Tags.status_desired_replicas)) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nParsedData\r\n| summarize arg_max(TimeGenerated,*) by k8sNamespace, HPAs\r\n| join kind = inner(ValData) on k8sNamespace, HPAs\r\n| join kind = inner(MinData) on k8sNamespace, HPAs\r\n| join kind = inner(MaxData) on k8sNamespace, HPAs\r\n| join kind = inner(DesiredData) on k8sNamespace, HPAs\r\n| extend currentMin = tostring(Tags.spec_min_replicas), currentMax =  tostring(Tags.spec_max_replicas), currentDesired = tostring(Tags.status_desired_replicas)\r\n| extend HPAStatus = case(Val == currentDesired, \"Healthy\", \"Warning\")\r\n| extend percentofMax = toint(Val)/toint(currentMax)\r\n| sort by percentofMax desc\r\n| project HPAs, Deployment, Namespace = k8sNamespace, HPAStatus, lastScaleTime, Val, ValTrend, currentMin, MinTrend, currentMax, MaxTrend, currentDesired, DesiredTrend",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Select a row to view more details",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "exportFieldName": "HPAs",
                                "exportParameterName": "HPAFilter",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "HPAStatus",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "Warning",
                                            "representation": "2",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "ValTrend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "currentMin",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "lastScaleTime",
                                      "label": "Last Scale Time"
                                    },
                                    {
                                      "columnId": "Val",
                                      "label": "Current Replicas"
                                    },
                                    {
                                      "columnId": "ValTrend",
                                      "label": "Current Over Time"
                                    },
                                    {
                                      "columnId": "currentMin",
                                      "label": "Min Replicas"
                                    },
                                    {
                                      "columnId": "MinTrend",
                                      "label": "Min Over Time"
                                    },
                                    {
                                      "columnId": "currentMax",
                                      "label": "Max Replicas"
                                    },
                                    {
                                      "columnId": "MaxTrend",
                                      "label": "Max Over Time"
                                    },
                                    {
                                      "columnId": "currentDesired",
                                      "label": "Desired Replicas"
                                    },
                                    {
                                      "columnId": "DesiredTrend",
                                      "label": "Desired Over Time"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "currentMin",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "conditionalVisibility": {
                                "parameterName": "hpa",
                                "comparison": "isNotEqualTo"
                              },
                              "showPin": true,
                              "name": "HPA Grid"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let ParsedData = materialize(\r\nInsightsMetrics\r\n| where Name contains \"hpa\"\r\n| extend Tags = parse_json(Tags)\r\n| extend ClusterId = Tags[\"container.azm.ms/clusterId\"]\r\n{clusterIdWhereClause}\r\n| where tostring(Tags.hpa) in ({hpa})\r\n| extend HPAs = tostring(Tags.hpa), Deployment = tostring(Tags.targetName), k8sNamespace = tostring(Tags.k8sNamespace)\r\n| where HPAs == '{HPAFilter}'\r\n| where k8sNamespace in ({namespace})\r\n);\r\nlet ValData = ParsedData\r\n| make-series ValTrend = avg(Val) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nlet MinData = ParsedData\r\n| make-series MinTrend = avg(toint(Tags.spec_min_replicas)) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nlet MaxData = ParsedData\r\n| make-series MaxTrend = avg(toint(Tags.spec_max_replicas)) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nlet DesiredData = ParsedData\r\n| make-series DesiredTrend = avg(toint(Tags.status_desired_replicas)) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by k8sNamespace, HPAs;\r\nParsedData\r\n| join kind = inner(ValData) on k8sNamespace, HPAs\r\n| join kind = inner(MinData) on k8sNamespace, HPAs\r\n| join kind = inner(MaxData) on k8sNamespace, HPAs\r\n| join kind = inner(DesiredData) on k8sNamespace, HPAs\r\n| top 1 by TimeGenerated\r\n| project ValTrend, MinTrend, MaxTrend, DesiredTrend, TimeGenerated1",
                                "size": 0,
                                "aggregation": 5,
                                "title": "Full view for {HPAFilter}",
                                "timeContext": {
                                  "durationMs": 14400000
                                },
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "unstackedbar",
                                "chartSettings": {
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "ValTrend",
                                      "label": "Current Replicas"
                                    },
                                    {
                                      "seriesName": "MinTrend",
                                      "label": "Min Replicas"
                                    },
                                    {
                                      "seriesName": "MaxTrend",
                                      "label": "Max Replicas"
                                    },
                                    {
                                      "seriesName": "DesiredTrend",
                                      "label": "Desired Replicas"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                      }
                                    },
                                    "min": 0
                                  }
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "HPAFilter",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "HPA Detailed"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "HPA"
                        },
                        "name": "hpa-tab"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Deploy"
                  },
                  "name": "group - 8"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "parameters": [
                            {
                              "id": "6548df2b-011e-4652-8f50-a53d9a07cd02",
                              "version": "KqlParameterItem/1.0",
                              "name": "timeRange",
                              "label": "Time Range",
                              "type": 4,
                              "description": "Filter data by time range",
                              "isRequired": true,
                              "value": {
                                "durationMs": 21600000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContextFromParameter": "TimeRange"
                            },
                            {
                              "id": "f0b13110-7cd2-465c-af9f-b78035329eea",
                              "version": "KqlParameterItem/1.0",
                              "name": "resource",
                              "type": 5,
                              "isRequired": true,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::1"
                            },
                            {
                              "id": "7c51b213-be0f-459e-86a9-138f72629bbc",
                              "version": "KqlParameterItem/1.0",
                              "name": "resourceType",
                              "type": 7,
                              "isRequired": true,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourceType}\\\"\",\"transformers\":null}",
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::1",
                              "queryType": 8
                            },
                            {
                              "id": "ec037105-58cc-4386-81c8-e5c5f26a7358",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterId",
                              "type": 1,
                              "isHiddenWhenLocked": true,
                              "value": "/subscriptions/b123d671-00f6-461f-9065-e80587bfbc35/resourcegroups/aks-rg/providers/Microsoft.ContainerService/managedClusters/cluster_monitoring_prod"
                            },
                            {
                              "id": "c780f08f-ebb6-4fbb-ad6e-ba21cf9b288e",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterIdWhereClause",
                              "type": 1,
                              "isRequired": true,
                              "isHiddenWhenLocked": true,
                              "criteriaData": [
                                {
                                  "criteriaContext": {
                                    "leftOperand": "resourceType",
                                    "operator": "contains",
                                    "rightValType": "static",
                                    "rightVal": "microsoft.operationalinsights/workspaces",
                                    "resultValType": "static",
                                    "resultVal": "| where ClusterID =~ '{clusterId}'"
                                  }
                                },
                                {
                                  "criteriaContext": {
                                    "operator": "Default",
                                    "rightValType": "param",
                                    "resultValType": "static",
                                    "resultVal": "| where 'a' == 'a'"
                                  }
                                }
                              ]
                            },
                            {
                              "id": "634f054b-c813-467d-af61-2e00eeadf88d",
                              "version": "KqlParameterItem/1.0",
                              "name": "selectedNodes1",
                              "label": "Node",
                              "type": 2,
                              "description": "Filter by node",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| project HostName = tostring(Tags.hostName)\r\n| distinct HostName\r\n| sort by HostName asc\r\n\r\n",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 21600000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            },
                            {
                              "id": "3dd04449-6ef7-45a9-bfb6-8e994907efcb",
                              "version": "KqlParameterItem/1.0",
                              "name": "selectedOperationTypes1",
                              "label": "Operation Type",
                              "type": 2,
                              "description": "Filter by operation type",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend OperationType = tostring(Tags['operation_type'])\r\n| distinct OperationType\r\n| order by OperationType asc\r\n\r\n\r\n",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 21600000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "{resourceType}"
                        },
                        "name": "dropdowns"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "487f875d-328e-458c-9a3f-380664f3e022",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Overview",
                              "subTarget": "Overview",
                              "style": "link"
                            },
                            {
                              "id": "34403df0-8c0a-4043-b19d-fb9cff8ea722",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Operations",
                              "subTarget": "Operations",
                              "style": "link"
                            },
                            {
                              "id": "29b8616e-37d9-4f88-8d90-7f19bf80aa80",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Performance",
                              "subTarget": "Performance",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "Tabs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "_Select a tile below to switch between detailed views_"
                              },
                              "name": "tool tip"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Total = sum(Val);\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Trend = avg(Val) by TimeGenerated, Computer\r\n| summarize Summed = sum(Trend) by TimeGenerated\r\n| make-series Series = avg(Summed) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Summed\r\n| project Summed, Series;\r\ndata | union TrendData\r\n| serialize \r\n| extend Total1 = case(isnotnull(Total),Total,prev(Total))\r\n| extend Series1 = case(isnotnull(Series),Series, prev(Series))\r\n| where isnotnull(Total1) == true\r\n| where isnotnull(Series1) == true\r\n| project Total1,Series1, Title = \"kubelet_running_pod_count\", Tag = \"metrics\"",
                                "size": 3,
                                "showAnalytics": true,
                                "title": "Running Pods",
                                "timeContextFromParameter": "timeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "Title",
                                    "parameterName": "View",
                                    "parameterType": 1,
                                    "defaultValue": "kubelet_running_pod_count"
                                  },
                                  {
                                    "fieldName": "Tag",
                                    "parameterName": "Tag",
                                    "parameterType": 1,
                                    "defaultValue": "metrics"
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {},
                                  "leftContent": {
                                    "columnMatch": "Total1",
                                    "formatter": 12
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "Series1",
                                    "formatter": 9,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue"
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "customWidth": "33",
                              "showPin": true,
                              "name": "Running Pods Tile"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Total = sum(Val);\r\nlet Desireddata = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"desired_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Desired = sum(Val);\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Trend = avg(Val) by TimeGenerated, Computer\r\n| summarize Summed = sum(Trend) by TimeGenerated\r\n| make-series Series = avg(Summed) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Summed\r\n| project Summed, Series;\r\nlet jdata1 = data | union Desireddata\r\n| serialize\r\n| extend Total1= case(isnotnull(Total),Total, prev(Total)) \r\n| extend Desired1= case(isnotnull(Desired),Desired, prev(Desired))\r\n| extend Thresh = case(Desired1 == Total1, true, false)\r\n| where isnotnull(Desired1) and isnotnull(Total1)\r\n| project Total1, Desired1, Thresh;\r\njdata1 | union TrendData\r\n| serialize \r\n| extend Total = case(isnotnull(Total1), Total1, prev(Total1))\r\n| extend Desired = case(isnotnull(Desired1), Desired1, prev(Desired1))\r\n| extend Thresh1 = case(isnotnull(Thresh), Thresh, prev(Thresh))\r\n| extend Series1 = case(isnotnull(Series), Series, prev(Series))\r\n| where isnotnull(Total) and isnotnull(Desired) and isnotnull(Thresh1) and isnotnull(Series1)\r\n| project Total, Thresh1, Series1,Title = \"volume_manager_total_volumes\", Tag = \"actual_state__of_world\"",
                                "size": 3,
                                "showAnalytics": true,
                                "title": "Storage Volume (Actual)",
                                "timeContextFromParameter": "timeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "Title",
                                    "parameterName": "View",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "Tag",
                                    "parameterName": "Tag",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {},
                                  "leftContent": {
                                    "columnMatch": "Thresh1",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "icons",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "contains",
                                          "thresholdValue": "false",
                                          "representation": "2",
                                          "text": ""
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "success",
                                          "text": ""
                                        }
                                      ]
                                    }
                                  },
                                  "rightContent": {
                                    "columnMatch": "Total",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "none"
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "Series1",
                                    "formatter": 9,
                                    "formatOptions": {
                                      "palette": "blue"
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "customWidth": "33",
                              "showPin": true,
                              "name": "Storage Volume Tile"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| summarize Total = sum(Val);\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Trend = avg(Val) by TimeGenerated, Computer\r\n| summarize Summed = sum(Trend) by TimeGenerated\r\n| make-series Series = avg(Summed) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Summed\r\n| project Summed, Series;\r\ndata | union TrendData\r\n| serialize \r\n| extend Total1 = case(isnotnull(Total),Total,prev(Total))\r\n| extend Series1 = case(isnotnull(Series),Series, prev(Series))\r\n| where isnotnull(Total1) == true\r\n| where isnotnull(Series1) == true\r\n| project Total1,Series1, Title = \"kubelet_node_config_error\", Tag = \"metric\"",
                                "size": 3,
                                "showAnalytics": true,
                                "title": "Config Errors",
                                "timeContextFromParameter": "timeRange",
                                "exportedParameters": [
                                  {
                                    "fieldName": "Title",
                                    "parameterName": "View",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "Tag",
                                    "parameterName": "Tag",
                                    "parameterType": 1
                                  }
                                ],
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "tiles",
                                "tileSettings": {
                                  "titleContent": {
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Total1",
                                    "formatter": 18,
                                    "formatOptions": {
                                      "thresholdsOptions": "icons",
                                      "thresholdsGrid": [
                                        {
                                          "operator": "==",
                                          "thresholdValue": "0",
                                          "representation": "success",
                                          "text": ""
                                        },
                                        {
                                          "operator": "Default",
                                          "thresholdValue": null,
                                          "representation": "2",
                                          "text": ""
                                        }
                                      ]
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false,
                                        "maximumFractionDigits": 2,
                                        "maximumSignificantDigits": 3
                                      }
                                    }
                                  },
                                  "rightContent": {
                                    "columnMatch": "Total1",
                                    "formatter": 12
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "Series1",
                                    "formatter": 9,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "blue"
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "customWidth": "33",
                              "showPin": true,
                              "name": "Config Errors Tile"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer;\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_running_pod_count\" or Name == \"kubelet_running_pods\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\ndata | join kind = inner (TrendData) on Computer\r\n| project Computer, Val, Trend",
                                "size": 0,
                                "title": "Detailed View (Running Pods)",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "blue"
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "Val",
                                      "label": "Running Pods"
                                    },
                                    {
                                      "columnId": "Trend",
                                      "label": "Pods over Time"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "View",
                                "comparison": "isEqualTo",
                                "value": "kubelet_running_pod_count"
                              },
                              "name": "Running Pods Grid"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| project ['Actual'] = Val, Computer;\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\nlet DesiredData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer\r\n| project ['Desired'] = Val, Computer;\r\nlet DesiredTrendData = InsightsMetrics\r\n| where Name == \"volume_manager_total_volumes\"\r\n| where Tags contains \"actual_state_of_world\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series DesiredTrend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\ndata \r\n| join kind = inner (TrendData) on Computer\r\n| join kind = inner (DesiredData) on Computer\r\n| join kind = inner (DesiredTrendData) on Computer\r\n| extend Thresh = case(Actual == Desired, true, false) \r\n| project Computer, Thresh, Actual, Trend, Desired, DesiredTrend",
                                "size": 0,
                                "title": "Detailed View (Storage Volume)",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Thresh",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": "==",
                                            "thresholdValue": "true",
                                            "representation": "success",
                                            "text": ""
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "2",
                                            "text": ""
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "blue"
                                      }
                                    },
                                    {
                                      "columnMatch": "DesiredTrend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "blue"
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Thresh",
                                      "label": "Status"
                                    },
                                    {
                                      "columnId": "Trend",
                                      "label": "Actual Volume over Time"
                                    },
                                    {
                                      "columnId": "DesiredTrend",
                                      "label": "Desired Volume over Time"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "View",
                                "comparison": "isEqualTo",
                                "value": "volume_manager_total_volumes"
                              },
                              "name": "Storage Volume Grid"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| summarize Current = arg_max(TimeGenerated,Val) by Computer;\r\nlet TrendData = InsightsMetrics\r\n| where Name == \"kubelet_node_config_error\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer;\r\ndata | join kind = inner (TrendData) on Computer\r\n| project Computer, Val, Trend",
                                "size": 0,
                                "title": "Detailed View (Config Errors)",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Val",
                                      "formatter": 18,
                                      "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                          {
                                            "operator": ">",
                                            "thresholdValue": "0",
                                            "representation": "2",
                                            "text": "{0}{1}"
                                          },
                                          {
                                            "operator": "Default",
                                            "thresholdValue": null,
                                            "representation": "success",
                                            "text": "{0}{1}"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "blue"
                                      }
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "Val",
                                      "label": "Config Errors"
                                    },
                                    {
                                      "columnId": "Trend",
                                      "label": "Errors over Time"
                                    }
                                  ]
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "View",
                                "comparison": "isEqualTo",
                                "value": "kubelet_node_config_error"
                              },
                              "name": "Config Errors Grid"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "Overview"
                        },
                        "name": "Overview Tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>Overview By Node</h3>"
                              },
                              "customWidth": "50",
                              "name": "text - 7"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "<h3>Overview By Operation Type</h3>"
                              },
                              "customWidth": "50",
                              "name": "text - 7 - Copy"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| where Name in ('kubelet_runtime_operations_total', 'kubelet_runtime_operations_errors_total')\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend OperationType = tostring(Tags['operation_type']), HostName = tostring(Tags.hostName)\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedOperationTypes1}) or OperationType in ({selectedOperationTypes1})\r\n| extend partitionKey = strcat(HostName, '/' , Name, '/', OperationType)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, Name, HostName, Rate;\r\nlet operationData = data\r\n| where Name in ('kubelet_runtime_operations_total');\r\nlet totalOperationsByNode = operationData\r\n| summarize Rate = sum(Rate) by HostName\r\n| project HostName, TotalOperations = Rate;\r\nlet totalOperationsByNodeSeries = operationData\r\n| make-series TotalOperationsSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by HostName\r\n| project-away TimeGenerated;\r\nlet errorData = data\r\n| where Name in ('kubelet_runtime_operations_errors_total');\r\nlet totalErrorsByNode = errorData\r\n| summarize Rate = sum(Rate) by HostName\r\n| project HostName, TotalErrors = Rate;\r\nlet totalErrorsByNodeSeries = errorData\r\n| make-series TotalErrorsSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by HostName\r\n| project-away TimeGenerated;\r\ntotalOperationsByNode\r\n| join kind = leftouter (\r\n    totalErrorsByNode\r\n) on HostName\r\n| join kind = leftouter (\r\n    totalOperationsByNodeSeries\r\n) on HostName\r\n| join kind = leftouter (\r\n    totalErrorsByNodeSeries\r\n) on HostName\r\n| extend TotalErrors = iif(isempty(TotalErrors), 0.0, TotalErrors)\r\n| extend SeriesOfEqualLength = range(1, array_length(TotalOperationsSeries), 1)\r\n| extend SeriesOfZeroes = series_multiply(SeriesOfEqualLength, 0)\r\n| extend TotalErrorsSeries = iif(isempty(TotalErrorsSeries), SeriesOfZeroes, TotalErrorsSeries)\r\n| project-away HostName1, HostName2, HostName3\r\n| extend TotalSuccessfulOperationsSeries = series_subtract(TotalOperationsSeries, TotalErrorsSeries)\r\n| extend IsNegativeTotalSuccessfulOperationsSeries = series_less(TotalSuccessfulOperationsSeries, SeriesOfZeroes)\r\n| extend TotalSuccessfulOperationsSeries = array_iif(IsNegativeTotalSuccessfulOperationsSeries, SeriesOfZeroes, TotalSuccessfulOperationsSeries)\r\n| extend SuccessPercentage = round(iif(TotalOperations == 0, 1.0, iif(TotalErrors > TotalOperations, 0.0, 1 - (TotalErrors / TotalOperations))), 4), SuccessPercentageSeries = series_divide(TotalSuccessfulOperationsSeries, TotalOperationsSeries)\r\n| extend SeriesOfOneHundo = series_multiply(series_divide(SeriesOfEqualLength, SeriesOfEqualLength), 100)\r\n| extend SuccessfulOperationsEqualsTotalOperationsSeries = series_equals(TotalSuccessfulOperationsSeries, TotalOperationsSeries)\r\n| extend SuccessPercentageSeries = array_iff(SuccessfulOperationsEqualsTotalOperationsSeries, SeriesOfOneHundo, SuccessPercentageSeries)\r\n| project HostName, TotalOperations, TotalErrors, SuccessPercentage, SuccessPercentageSeries\r\n| order by SuccessPercentage asc, HostName asc\r\n| project-rename Node = HostName, ['Total Operations'] = TotalOperations, ['Total Errors'] = TotalErrors, ['Success %'] = SuccessPercentage, ['Success % Trend'] = SuccessPercentageSeries",
                                "size": 0,
                                "showAnalytics": true,
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Success %",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 1,
                                        "palette": "redGreen",
                                        "showIcon": true
                                      },
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "percent",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Success % Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 1,
                                        "palette": "redGreen",
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "filter": true
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "overview-by-node-grid"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/prometheus'\r\n| where Name in ('kubelet_runtime_operations_total', 'kubelet_runtime_operations_errors_total')\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend OperationType = tostring(Tags['operation_type']), HostName = tostring(Tags.hostName)\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedOperationTypes1}) or OperationType in ({selectedOperationTypes1})\r\n| extend partitionKey = strcat(HostName, '/' , Name, '/', OperationType)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, Name, OperationType, Rate;\r\nlet operationData = data\r\n| where Name in ('kubelet_runtime_operations_total');\r\nlet totalOperationsByType = operationData\r\n| summarize Rate = sum(Rate) by OperationType\r\n| project OperationType, TotalOperations = Rate;\r\nlet totalOperationsByTypeSeries = operationData\r\n| make-series TotalOperationsByTypeSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by OperationType\r\n| project-away TimeGenerated;\r\nlet errorsData = data\r\n| where Name in ('kubelet_runtime_operations_errors_total');\r\nlet totalErrorsByType = errorsData\r\n| summarize Rate = sum(Rate) by OperationType\r\n| project OperationType, TotalErrors = Rate;\r\nlet totalErrorsByTypeSeries = errorsData\r\n| make-series TotalErrorsByTypeSeries = sum(Rate) default = 0 on TimeGenerated from ago(21600s) to now() step 10m by OperationType\r\n| project-away TimeGenerated;\r\nlet seriesLength = toscalar(   totalOperationsByTypeSeries\r\n| extend ArrayLength = array_length(TotalOperationsByTypeSeries)\r\n| summarize Array_Length = max(ArrayLength)  );\r\ntotalOperationsByType\r\n| join kind = leftouter (\r\n    totalErrorsByType\r\n) on OperationType\r\n| project-away OperationType1\r\n| extend TotalErrors = iif(isempty(TotalErrors), 0.0, TotalErrors)\r\n| join kind = leftouter (\r\n    totalErrorsByTypeSeries\r\n) on OperationType\r\n| project-away OperationType1\r\n| extend SeriesOfEqualLength = range(1, seriesLength, 1)\r\n| extend SeriesOfZeroes = series_subtract(SeriesOfEqualLength, SeriesOfEqualLength)\r\n| extend SeriesOfOneHundo = series_multiply(series_divide(SeriesOfEqualLength, SeriesOfEqualLength), 100)\r\n| extend TotalErrorsByTypeSeries = iif(isempty(TotalErrorsByTypeSeries), SeriesOfZeroes, TotalErrorsByTypeSeries)\r\n| join kind=leftouter (\r\n    totalOperationsByTypeSeries\r\n) on OperationType\r\n| project-away OperationType1\r\n| extend TotalSuccessfulOperationsByTypeSeries = series_subtract(TotalOperationsByTypeSeries, TotalErrorsByTypeSeries)\r\n| extend IsNegativeTotalSuccessfulOperationsByTypeSeries = series_less(TotalSuccessfulOperationsByTypeSeries, SeriesOfZeroes)\r\n| extend TotalSuccessfulOperationsByTypeSeries = array_iif(IsNegativeTotalSuccessfulOperationsByTypeSeries, SeriesOfZeroes, TotalSuccessfulOperationsByTypeSeries) \r\n| extend SuccessPercentage = round(iif(TotalOperations == 0, 1.0, iif(TotalErrors > TotalOperations, 0.0, 1 - (TotalErrors / TotalOperations))), 4), SuccessPercentageSeries = series_divide(TotalSuccessfulOperationsByTypeSeries, TotalOperationsByTypeSeries)\r\n| extend SuccessfulOperationsEqualsTotalOperationsSeries = series_equals(TotalSuccessfulOperationsByTypeSeries, TotalOperationsByTypeSeries)\r\n| extend SuccessPercentageSeries = array_iff(SuccessfulOperationsEqualsTotalOperationsSeries, SeriesOfOneHundo, SuccessPercentageSeries)\r\n| project OperationType, TotalOperations, TotalErrors, SuccessPercentage, SuccessPercentageSeries\r\n| order by SuccessPercentage asc, OperationType asc\r\n| project-rename ['Operation Type'] = OperationType, ['Total Operations'] = TotalOperations, ['Total Errors'] = TotalErrors, ['Success %'] = SuccessPercentage, ['Success % Trend'] = SuccessPercentageSeries",
                                "size": 0,
                                "showAnalytics": true,
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Success %",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 1,
                                        "palette": "redGreen",
                                        "showIcon": true
                                      },
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                          "style": "percent",
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "Success % Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "min": 0,
                                        "max": 1,
                                        "palette": "redGreen",
                                        "showIcon": true
                                      }
                                    }
                                  ],
                                  "filter": true
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "overview-by-operation-type-grid"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "Operations"
                        },
                        "name": "Operations Tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "InsightsMetrics\r\n| where Name == \"process_cpu_seconds_total\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(null))\r\n| where isnull(Value) == false\r\n//| make-series Trend = avg(Val*0.001) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer\r\n| extend QueryRate = Value / (({timeRange:end} - {timeRange:start}) / 1s)\r\n| make-series avg(QueryRate) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer",
                                "size": 0,
                                "aggregation": 3,
                                "showAnalytics": true,
                                "title": "CPU (in seconds)",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "linechart",
                                "chartSettings": {
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 31,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": true,
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "CPU Chart"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "InsightsMetrics\r\n| where Name == \"process_resident_memory_bytes\"\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| where '*' in ({selectedNodes1}) or Computer in ({selectedNodes1})\r\n| make-series Trend = avg(Val*0.000001) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Computer",
                                "size": 0,
                                "aggregation": 3,
                                "showAnalytics": true,
                                "title": "Memory (in MB)",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "visualization": "linechart",
                                "chartSettings": {
                                  "ySettings": {
                                    "min": 0
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "Memory Chart"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "Performance"
                        },
                        "name": "Performance Tab"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Kubelet"
                  },
                  "name": "Kubelet - tab"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{resource}"
                          ],
                          "parameters": [
                            {
                              "id": "670aac26-0ffe-4f29-81c2-d48911bc64b6",
                              "version": "KqlParameterItem/1.0",
                              "name": "timeRange",
                              "label": "Time Range",
                              "type": 4,
                              "description": "Select time-range for data selection",
                              "isRequired": true,
                              "value": {
                                "durationMs": 21600000
                              },
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              }
                            },
                            {
                              "id": "bfc96857-81df-4f0d-b958-81f96d28ddeb",
                              "version": "KqlParameterItem/1.0",
                              "name": "resource",
                              "type": 5,
                              "isRequired": true,
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 21600000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1"
                            },
                            {
                              "id": "8d48ec94-fde6-487c-98bf-f1295f5d8b81",
                              "version": "KqlParameterItem/1.0",
                              "name": "resourceType",
                              "type": 7,
                              "description": "Resource type of resource",
                              "isRequired": true,
                              "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
                              "isHiddenWhenLocked": true,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::1"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 21600000
                              },
                              "timeContextFromParameter": "timeRange",
                              "defaultValue": "value::1",
                              "queryType": 8
                            },
                            {
                              "id": "1b826776-ab99-45ab-86db-cced05e8b36d",
                              "version": "KqlParameterItem/1.0",
                              "name": "clusterId",
                              "type": 1,
                              "description": "Used to identify the cluster name when the cluster type is AKS Engine",
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange",
                              "value": "/subscriptions/b123d671-00f6-461f-9065-e80587bfbc35/resourcegroups/aks-rg/providers/Microsoft.ContainerService/managedClusters/cluster_monitoring_prod"
                            },
                            {
                              "id": "67227c35-eab8-4518-9212-1c3c3d564b20",
                              "version": "KqlParameterItem/1.0",
                              "name": "masterNodeExists",
                              "type": 1,
                              "query": "let MissingTable = view () { print isMissing=1 };\r\nlet masterNodeExists = toscalar(\r\nunion isfuzzy=true MissingTable, (\r\nAzureDiagnostics \r\n| getschema \r\n| summarize c=count() \r\n| project isMissing=iff(c > 0, 0, 1)\r\n) \r\n| top 1 by isMissing asc\r\n);\r\nprint(iif(masterNodeExists == 0, 'yes', 'no'))\r\n",
                              "crossComponentResources": [
                                "{resource}"
                              ],
                              "isHiddenWhenLocked": true,
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "timeRange",
                              "queryType": 0,
                              "resourceType": "{resourceType}"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "{resourceType}"
                        },
                        "name": "pills"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "3b7d39f2-38c5-4586-a155-71e28e333020",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Overview",
                              "subTarget": "overview",
                              "style": "link"
                            },
                            {
                              "id": "7163b764-7ab2-48b3-b417-41af3eea7ef0",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "By Table",
                              "subTarget": "table",
                              "style": "link"
                            },
                            {
                              "id": "960bbeea-357f-4c07-bdd9-6f3f123d56fd",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "By Namespace",
                              "subTarget": "namespace",
                              "style": "link"
                            },
                            {
                              "id": "7fbcc5bd-62d6-4aeb-b55e-7b1fab65716a",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "By Log Source",
                              "subTarget": "logSource",
                              "style": "link"
                            },
                            {
                              "id": "3434a63b-f3d5-4c11-9620-1e731983041c",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "By Diagnostic Master Node ",
                              "subTarget": "diagnosticMasterNode",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "tabs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "title": "Container Insights Billing Usage",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "<br/>\r\nThis workbook provides you a summary and source for billable data collected by [Container Insights solution.](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview)\r\n\r\nThe best way to understand how Container Insights ingests data in Log Analytics workspace is from this [article.](https://medium.com/microsoftazure/azure-monitor-for-containers-optimizing-data-collection-settings-for-cost-ce6f848aca32)\r\n\r\nIn this workbook you can:\r\n\r\n* View billable data ingested by **solution**.\r\n* View billable data ingested by **Container logs (application logs)**\r\n* View billable container logs data ingested segregated by **Kubernetes namespace**\r\n* View billable container logs data ingested segregated by **Cluster name**\r\n* View billable container log data ingested by **logsource entry**\r\n* View billable diagnostic data ingested by **diagnostic master node logs**\r\n\r\nYou can fine tune and control logging by turning off logging on the above mentioned vectors. [Learn how to fine-tune logging](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-agent-config)\r\n\r\nYou can control your master node's logs by updating diagnostic settings. [Learn how to update diagnostic settings](https://docs.microsoft.com/en-us/azure/aks/view-master-logs)"
                              },
                              "name": "workbooks-explanation-text"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "`Master node logs` are not enabled. [Learn how to enable](https://docs.microsoft.com/en-us/azure/aks/view-master-logs)"
                              },
                              "conditionalVisibility": {
                                "parameterName": "masterNodeExists",
                                "comparison": "isEqualTo",
                                "value": "no"
                              },
                              "name": "master-node-logs-are-not-enabled-msg"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "overview"
                        },
                        "name": "workbook-explanation"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "union withsource = SourceTable AzureDiagnostics, AzureActivity, AzureMetrics, ContainerLog, Perf, KubePodInventory, ContainerInventory, InsightsMetrics, KubeEvents, KubeServices, KubeNodeInventory, ContainerNodeInventory, KubeMonAgentEvents, ContainerServiceLog, Heartbeat, KubeHealth, ContainerImageInventory\r\n| where _IsBillable == true\r\n| project _BilledSize, TimeGenerated, SourceTable\r\n| summarize BillableDataBytes = sum(_BilledSize) by bin(TimeGenerated, {timeRange:grain}), SourceTable\r\n| render piechart\r\n\r\n\r\n",
                                "size": 3,
                                "showAnnotations": true,
                                "showAnalytics": true,
                                "title": "Billable Data from Container Insights",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "chartSettings": {
                                  "xAxis": "TimeGenerated",
                                  "createOtherGroup": 100,
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "LogManagement",
                                      "label": "LogManagementSolution(GB)"
                                    },
                                    {
                                      "seriesName": "ContainerInsights",
                                      "label": "ContainerInsightsSolution(GB)"
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 2,
                                      "options": {
                                        "style": "decimal"
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "50",
                              "showPin": true,
                              "name": "billable-data-from-ci"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "table"
                        },
                        "name": "by-datatable-tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "KubePodInventory\r\n| distinct ContainerID, Namespace\r\n| join kind=innerunique (\r\nContainerLog\r\n| where _IsBillable == true\r\n| summarize BillableDataBytes = sum(_BilledSize) by ContainerID\r\n) on ContainerID\r\n| summarize Total=sum(BillableDataBytes) by Namespace\r\n| render piechart\r\n",
                                "size": 3,
                                "showAnalytics": true,
                                "title": "Billable Container Log Data Per Namespace",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "tileSettings": {
                                  "showBorder": false,
                                  "titleContent": {
                                    "columnMatch": "Namespace",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "Total",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "Namespace",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "Total",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "chartSettings": {
                                  "createOtherGroup": 100,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 2,
                                      "options": {
                                        "style": "decimal"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": "billable-data-per-namespace"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "namespace"
                        },
                        "name": "by-namespace-tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "parameters": [
                                  {
                                    "id": "d5701caa-0486-4e6f-adad-6fa5b8496a7d",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "namespace",
                                    "label": "Namespace",
                                    "type": 2,
                                    "description": "Filter data by namespace",
                                    "isRequired": true,
                                    "query": "KubePodInventory\r\n| distinct ContainerID, Namespace\r\n| join kind=innerunique (\r\nContainerLog\r\n| project ContainerID\r\n) on ContainerID\r\n| distinct Namespace\r\n| project value = Namespace, label = Namespace, selected = false\r\n| sort by label asc",
                                    "crossComponentResources": [
                                      "{resource}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::1"
                                      ],
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 0
                                    },
                                    "timeContextFromParameter": "timeRange",
                                    "defaultValue": "value::1",
                                    "queryType": 0,
                                    "resourceType": "{resourceType}"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "{resourceType}"
                              },
                              "name": "namespace-pill"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "KubePodInventory\r\n| where Namespace == '{namespace}'\r\n| distinct ContainerID, Namespace\r\n| join hint.strategy=shuffle (\r\nContainerLog\r\n| where _IsBillable == true\r\n| summarize BillableDataBytes = sum(_BilledSize) by LogEntrySource, ContainerID\r\n) on ContainerID\r\n| extend sourceNamespace = strcat(LogEntrySource, \"/\", Namespace)\r\n| summarize Total=sum(BillableDataBytes) by sourceNamespace\r\n| render piechart",
                                "size": 0,
                                "showAnnotations": true,
                                "showAnalytics": true,
                                "title": "Billable Data Per Log-Source Type for Namespace Selected",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "chartSettings": {
                                  "createOtherGroup": 100,
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 2,
                                      "options": {
                                        "style": "decimal"
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "35",
                              "showPin": true,
                              "name": "billable-data-per-log-source",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "KubePodInventory\r\n| where Namespace == '{namespace}'\r\n| distinct ContainerID, Namespace\r\n| project ContainerID\r\n| join hint.strategy=shuffle ( \r\nContainerLog\r\n| project _BilledSize, ContainerID, TimeGenerated, LogEntrySource\r\n) on ContainerID\r\n| summarize ContainerLogData = sum(_BilledSize) by bin(TimeGenerated, {timeRange:grain}), LogEntrySource\r\n| render linechart\r\n\r\n",
                                "size": 0,
                                "showAnnotations": true,
                                "showAnalytics": true,
                                "title": "Billable Container Log Data for Namespace Selected",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "chartSettings": {
                                  "xSettings": {},
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 2,
                                      "options": {
                                        "style": "decimal"
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "65",
                              "conditionalVisibility": {
                                "parameterName": "namespace:label",
                                "comparison": "isNotEqualTo",
                                "value": "<unset>"
                              },
                              "showPin": true,
                              "name": "billable-container-log-data-for-namespace-selected",
                              "styleSettings": {
                                "showBorder": true
                              }
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "logSource"
                        },
                        "name": "by-log-source-tab"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "`Master node logs` are not enabled. [Learn how to enable](https://docs.microsoft.com/en-us/azure/aks/view-master-logs)"
                              },
                              "conditionalVisibility": {
                                "parameterName": "masterNodeExists",
                                "comparison": "isEqualTo",
                                "value": "no"
                              },
                              "name": "master-node-logs-are-not-enabled-msg-under-masternode-tab"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AzureDiagnostics\r\n| summarize Total=sum(_BilledSize) by bin(TimeGenerated, {timeRange:grain}), Category\r\n| render barchart\r\n\r\n\r\n",
                                "size": 0,
                                "showAnnotations": true,
                                "showAnalytics": true,
                                "title": "Billable Diagnostic Master Node Log Data",
                                "timeContextFromParameter": "timeRange",
                                "queryType": 0,
                                "resourceType": "{resourceType}",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "chartSettings": {
                                  "ySettings": {
                                    "unit": 2,
                                    "min": null,
                                    "max": null
                                  }
                                }
                              },
                              "customWidth": "75",
                              "conditionalVisibility": {
                                "parameterName": "masterNodeExists",
                                "comparison": "isEqualTo",
                                "value": "yes"
                              },
                              "showPin": true,
                              "name": "billable-data-from-diagnostic-master-node-logs"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "diagnosticMasterNode"
                        },
                        "name": "by-diagnostic-master-node-tab"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Dusage"
                  },
                  "name": "Disk-Usage-Tab"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "---"
                  },
                  "name": "text - 13"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// {Resource} {Test}\r\nlet metric = dynamic({Counter}); \r\nlet maxResultCount = 100; let summaryPerComputer = totable(Perf      | where TimeGenerated {TimeRange}       | where ObjectName == metric.object and CounterName == metric.counter     | summarize hint.shufflekey = Computer Average = avg(CounterValue), Max = max(CounterValue), Min = min(CounterValue), percentiles(CounterValue, 5, 10, 50, 80, 90, 95) by Computer      | project Computer, Average, Max, Min, P5th = percentile_CounterValue_5, P10th = percentile_CounterValue_10, P50th = percentile_CounterValue_50, P80th = percentile_CounterValue_80, P90th = percentile_CounterValue_90, P95th = percentile_CounterValue_95      | order by {TableTrend:label} {tableTrendOrder}, Computer      | limit maxResultCount);  let computerList = summaryPerComputer      | project Computer;  let MachineSummary = VMComputer | extend ResourceId=strcat('machines/', Machine) | extend Bitness=columnifexists('Bitness', '')     | where TimeGenerated {TimeRange}     | where Computer in (computerList)     | summarize arg_max(TimeGenerated, *) by Computer     | project Computer, MachineSummary = pack('Fully Qualified Domain Name', Computer, 'OS Type', OperatingSystemFamily, 'Operating System', OperatingSystemFullName, 'Ipv4 Addresses', Ipv4Addresses,         'Ipv6 Addresses', Ipv6Addresses, 'Mac Addresses', MacAddresses, 'DNS Names', DnsNames, 'CPUs', strcat(Cpus, ' @ ', CpuSpeed, ' MHz'), 'Bitness', Bitness,         'Physcial Memory', strcat(PhysicalMemoryMB, ' MB'), 'Virtualization State', VirtualizationState, 'VM Type', VirtualMachineType, 'OMS Agent', split(Machine, 'm-')[1]); let EmptyNodeIdentityAndProps = datatable(Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) []; let OmsNodeIdentityAndProps = computerList     | extend NodeId = Computer     | extend Priority = 1     | extend NodeProps = pack('type', 'StandAloneNode', 'name', Computer); let ServiceMapNodeIdentityAndProps = VMComputer | extend ResourceId=strcat('machines/', Machine) | extend Bitness=columnifexists('Bitness', '')     | where TimeGenerated {TimeRange}     | where Computer in (computerList)     | summarize arg_max(TimeGenerated, *) by Computer     | extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId, '|',                     AzureCloudServiceDeployment), ''),          AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),              strcat(AzureVmScaleSetInstanceId, '|',                     AzureVmScaleSetDeployment), ''),          ComputerProps =              pack('type', 'StandAloneNode',                   'name', Computer,                   'mappingResourceId', ResourceId,                   'subscriptionId', AzureSubscriptionId,                   'resourceGroup', AzureResourceGroup,                   'azureResourceId', columnifexists('_ResourceId', '')),          AzureCloudServiceNodeProps =              pack('type', 'AzureCloudServiceNode',                   'cloudServiceInstanceId', AzureCloudServiceInstanceId,                   'cloudServiceRoleName', columnifexists('AzureCloudServiceRoleName', ''),                   'cloudServiceDeploymentId', AzureCloudServiceDeployment,                   'cloudServiceName', AzureCloudServiceName,                   'mappingResourceId', ResourceId),          AzureScaleSetNodeProps =               pack('type', 'AzureScaleSetNode',                   'scaleSetInstanceId', columnifexists('Computer', ''),                   'vmScaleSetDeploymentId', AzureVmScaleSetDeployment,                   'vmScaleSetName', AzureVmScaleSetName,                   'serviceFabricClusterName', AzureServiceFabricClusterName,                   'vmScaleSetResourceId', AzureVmScaleSetResourceId,                   'resourceGroupName', columnifexists('AzureResourceGroup', ''),                   'subscriptionId', columnifexists('AzureSubscriptionId', ''),                   'mappingResourceId', ResourceId)| project   Computer,            NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                       isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity, Computer),            NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,                          isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),            Priority = 2; let NodeIdentityAndProps = union kind=inner isfuzzy = true                                  EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                 | summarize arg_max(Priority, *) by Computer;  let NodeIdentityAndPropsMin = NodeIdentityAndProps     | extend Type = iff(NodeProps.type == 'StandAloneNode', iff(NodeProps.azureResourceId == '', 'Non-Azure Virtual Machine', 'Azure Virtual Machine'), NodeProps.type),      ResourceId = iff(NodeProps.type == 'AzureScaleSetNode', NodeProps.vmScaleSetResourceId,          iff(NodeProps.type == 'AzureCloudServiceNode', NodeProps.cloudServiceDeploymentId, Computer)),     ResourceName = iff(NodeProps.type == 'AzureScaleSetNode', strcat(NodeProps.vmScaleSetName, ' | ', NodeProps.scaleSetInstanceId),          iff(NodeProps.type == 'AzureCloudServiceNode', strcat(NodeProps.cloudServiceRoleName, ' | ', NodeProps.cloudServiceInstanceId), Computer))     | project Computer, Type, ResourceId, ResourceName; let trend = Perf          | where TimeGenerated {TimeRange}         | where Computer in (computerList)          | where ObjectName == metric.object and CounterName == metric.counter        | make-series {TableTrend} default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Computer     | project Computer, ['Trend ({TableTrend:label})'] = {TableTrend:label}; summaryPerComputer     | join kind=leftouter (trend) on Computer     | join kind=leftouter (NodeIdentityAndProps) on Computer     | join kind=leftouter (NodeIdentityAndPropsMin) on Computer     | join kind=leftouter (MachineSummary) on Computer     | project ResourceName, Type, {mergedAggregators}, ['Trend ({TableTrend:label})'], Properties = MachineSummary     | sort by {TableTrend:label} {tableTrendOrder} | limit maxResultCount",
                    "size": 0,
                    "noDataMessage": "There is no data for this counter, either enable the counter or onboard machines to this workspace",
                    "queryType": 0,
                    "resourceType": "microsoft.compute/virtualmachinescalesets",
                    "crossComponentResources": [
                      "{Resource}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Type",
                          "formatter": 1,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "P50th",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend (Average)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Properties",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkLabel": "ℹ️ Info"
                          }
                        },
                        {
                          "columnMatch": "P95th",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "P5th",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "P10th",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "P80th",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "P90th",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Min",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Max",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend (P95th)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Trend (P5th)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Trend (P90th)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Trend (P80th)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Trend (P50th)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Trend (P10th)",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "ShowTable",
                    "comparison": "isEqualTo",
                    "value": "True"
                  },
                  "name": "query - 8"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "50",
                  "name": "text - 27"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "Azure Kubernetes Service"
            },
            "name": "Azure Kubernetes Service"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Azure Red Hat OpenShift\r\n<BR>\r\nAzure Red Hat OpenShift extends Kubernetes. Running containers in production with Kubernetes requires additional tools and resources. This often includes needing to juggle image registries, storage management, networking solutions, and logging and monitoring tools - all of which must be versioned and tested together.\r\n<BR>\r\nMore details: [Azure Red Hat OpenShift](https://docs.microsoft.com/en-us/azure/openshift/intro-openshift)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "3cbc503e-3f1b-45df-82aa-719789a4dbfd",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Red Hat OpenShift",
                        "subTarget": "ARO",
                        "postText": "Azure Red Hat OpenShift Details",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "a60932ce-ec9f-46e0-a53b-6ad78ae98a4e",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Red Hat OpenShift Health",
                        "subTarget": "AROHealth",
                        "postText": "Azure Red Hat OpenShift Health",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<br>"
                        },
                        "name": "text - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.redhatopenshift/openshiftclusters\"\r\n| mv-expand WORK = properties.workerProfiles\r\n| extend MVNET = split(properties.masterProfile.subnetId,'/'),\r\n        WVNET = split(WORK.subnetId,'/')\r\n| summarize ['Total Worker Nodes']=sum(toint(WORK.[\"count\"])) by ['Resource Group']=resourceGroup,\r\n['Name']=id,\r\n['Location']=location,\r\n['ARO Version']=tostring(properties.clusterProfile.version),\r\n['ARO Domain']=tostring(properties.clusterProfile.domain),\r\n['Outbound Type']=tostring(properties.networkProfile.outboundType),\r\n['Ingress Profile Name']=tostring(properties.ingressProfiles.name),\r\n['Ingress Profile type']=tostring(properties.ingressProfiles.visibility),\r\n['Ingress Profile IP']=tostring(properties.ingressProfiles.ip),\r\n['API Server type']=tostring(properties.apiserverProfile.visibility),\r\n['API Server URL']=tostring(properties.apiserverProfile.url),\r\n['API Server IP']=tostring(properties.apiserverProfile.ip),\r\n['Docker Pod Cidr']=tostring(properties.networkProfile.podCidr),\r\n['Service Cidr']=tostring(properties.networkProfile.serviceCidr),\r\n['Console URL']=tostring(properties.consoleProfile.url),\r\n['Master SKU']=tostring(properties.masterProfile.vmSize),\r\n['Master vNET']=tostring(MVNET[8]),\r\n['Master Subnet']=tostring(MVNET[10]),\r\n['Worker SKU']=tostring(WORK.vmSize),\r\n['Worker DiskSize']=tostring(WORK.diskSizeGB),\r\n['Worker vNET']=tostring(WVNET[8]),\r\n['Worker Subnet']=tostring(WVNET[10])",
                          "size": 2,
                          "title": "OpenShift Clusters",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ]
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "ARO"
                  },
                  "name": "AROG"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 4"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "b65b4030-fdb3-4979-b6e0-bf485c04029e",
                              "version": "KqlParameterItem/1.0",
                              "name": "OpenShiftCluster",
                              "label": "OpenShift Clusters",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.redhatopenshift/openshiftclusters\"\r\n| project id",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ]
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "value": [
                                "/subscriptions/9e89ed1d-15d1-4667-912c-98a09e9e7d86/resourceGroups/aro-domain-rg/providers/Microsoft.RedHatOpenShift/OpenShiftClusters/arodomain"
                              ]
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "AROHealth"
                  },
                  "name": "AROHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "ARO"
            },
            "name": "AROg"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "9cb9fcc5-e245-4b8e-aa0b-39757cc7034e",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Azure Kubernetes Service",
                        "subTarget": "Azure Kubernetes Service",
                        "style": "primary"
                      },
                      {
                        "id": "afdcec4b-1fa2-4ffd-b7fc-225d6d082430",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Azure OpenShift Clusters",
                        "subTarget": "AROARC",
                        "style": "primary"
                      }
                    ]
                  },
                  "name": "links - 2"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": []
                        },
                        "name": "overviewarcaro"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "tabs",
                          "links": [
                            {
                              "id": "84aed0a6-77ff-4509-b1e6-0f035e9997eb",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Overview",
                              "subTarget": "overview",
                              "style": "link"
                            },
                            {
                              "id": "f6c9e4d3-5c9a-4d03-9dc0-917839ec66ad",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Cluster Health",
                              "subTarget": "Health",
                              "style": "link"
                            },
                            {
                              "id": "bb1f04cf-2874-4f78-8d89-beaee5a3ff49",
                              "cellValue": "selectedTab",
                              "linkTarget": "parameter",
                              "linkLabel": "Audit",
                              "subTarget": "Audit",
                              "style": "link"
                            }
                          ]
                        },
                        "name": "Tabs"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL\r\n| summarize count() by apiVersion_s\r\n| sort by count_ desc",
                                "size": 0,
                                "title": "API Versions",
                                "noDataMessage": "No data found",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "palette": "auto"
                                      }
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "tileSettings": {
                                  "showBorder": false,
                                  "titleContent": {
                                    "columnMatch": "apiVersion_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": {
                                      "id": 12,
                                      "options": {
                                        "palette": {
                                          "name": "auto"
                                        },
                                        "showIcon": true
                                      }
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "apiVersion_s",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "count_",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "mapSettings": {
                                  "locInfo": "LatLong",
                                  "sizeSettings": "None",
                                  "colorSettings": "None",
                                  "labelSettings": "None",
                                  "legendMetric": "None",
                                  "legendAggregation": "None",
                                  "itemColorSettings": {
                                    "type": "heatmap",
                                    "colorAggregation": "Sum",
                                    "nodeColorField": "None",
                                    "heatmapPalette": "greenRed"
                                  }
                                }
                              },
                              "customWidth": "30",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "ContainerLog\n| where LogEntry has \"CPU usage\"\n| project TimeGenerated, Name, CPUUsage = toint(replace(@'CPU usage (\\d+)m', '$1', LogEntry))\n| summarize AvgCPUUsage = avg(CPUUsage) by bin(TimeGenerated, 1m), Name\n| order by Name, TimeGenerated asc",
                                "size": 0,
                                "title": "CPU Usage",
                                "noDataMessage": "No data found",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Name",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "aggregation": "Average"
                                      }
                                    },
                                    {
                                      "columnMatch": "AvgCPUUsage",
                                      "formatter": 19,
                                      "formatOptions": {
                                        "palette": "greenRed",
                                        "compositeBarSettings": {
                                          "labelText": "",
                                          "columnSettings": [
                                            {
                                              "columnName": "AvgCPUUsage",
                                              "color": "blue"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "tileSettings": {
                                  "showBorder": false
                                },
                                "graphSettings": {
                                  "type": 0
                                }
                              },
                              "customWidth": "70",
                              "name": "query - 2"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "Health"
                        },
                        "name": "Cluster Health"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "# Logs\r\n\r\nBy default when an application logs to **STDOUT** or **STDERR** the message will be captured by Azure Container Insights and ingested into Log Analytics. \r\n\r\n"
                              },
                              "name": "vdiOverview"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "KubePodInventory \r\n|project ContainerID, Name, ServiceName, ControllerName\r\n| join kind=inner\r\n(ContainerLog\r\n| project LogEntry, TimeGenerated, _ResourceId, ContainerID) on ContainerID\r\n| extend ServiceName = iff(isempty(ServiceName), ControllerName, ServiceName)\r\n| project ServiceName, LogEntry, TimeGenerated\r\n| summarize count() by ServiceName\r\n| order by count_",
                                "size": 0,
                                "title": "Log Count by Pod",
                                "timeContextFromParameter": "timerange",
                                "exportFieldName": "ServiceName",
                                "exportParameterName": "ServiceName",
                                "exportDefaultValue": "empty",
                                "queryType": 0,
                                "resourceType": "{LogAnalyticsWorkspace}",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "palette": "greenRed",
                                        "compositeBarSettings": {
                                          "labelText": "",
                                          "columnSettings": []
                                        }
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "filter": true
                                }
                              },
                              "customWidth": "40",
                              "name": "query - 1 - Copy"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "KubePodInventory \r\n|project ContainerID, Name, ServiceName, ControllerName\r\n| join kind=inner\r\n(ContainerLog\r\n| project LogEntry, TimeGenerated, _ResourceId, ContainerID) on ContainerID\r\n| extend ServiceName = iff(isempty(ServiceName), ControllerName, ServiceName)\r\n| where ServiceName in (\"{ServiceName}\") or \"{ServiceName}\" == \"empty\"\r\n| project ServiceName, LogEntry, TimeGenerated, _ResourceId\r\n| summarize count() by ServiceName, bin(TimeGenerated, 1m)",
                                "size": 0,
                                "title": "Log Count by Pod",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "linechart",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "compositeBarSettings": {
                                          "labelText": "",
                                          "columnSettings": []
                                        }
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "customWidth": "60",
                              "name": "query - 1 - Copy"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "# Logs de Pod\n\nOs logs devem ser estruturados e quaisquer mensagens de log de várias linhas devem aparecer em uma única linha LogEntry.\n\n- <h3>ServiceName:</h3>O nome do controlador (por exemplo, deployment)\n- <h3>Investigar Erros:</h3> Para investigar problemas, use o botão 'abrir na busca' no canto superior direito do Painel de Saída de Logs.\n\n> <h2>Nota:</h2> Selecione um ServiceName no painel 'Contagem de Logs por Pod' acima para filtrar os logs apenas para esse serviço.",
                                "style": "info"
                              },
                              "customWidth": "20",
                              "name": "texto - 4"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "KubePodInventory \r\n|project ContainerID, Name, ServiceName, ControllerName\r\n| join kind=inner\r\n(ContainerLog\r\n| project LogEntry, TimeGenerated, _ResourceId, ContainerID) on ContainerID\r\n| extend ServiceName = iff(isempty(ServiceName), ControllerName, ServiceName)\r\n| where ServiceName in (\"{ServiceName}\") or \"{ServiceName}\" == \"empty\"\r\n| project ServiceName, LogEntry, TimeGenerated, _ResourceId\r\n| summarize count() by ServiceName, LogEntry, _ResourceId\r\n| order by count_",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Log Count by Pod Log Output",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "LogEntry",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "50%"
                                      }
                                    },
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    }
                                  ],
                                  "rowLimit": 5000,
                                  "filter": true
                                }
                              },
                              "customWidth": "80",
                              "name": "query - 1 - Copy"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "overview"
                        },
                        "name": "overview"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL\r\n| summarize count() by apiVersion_s\r\n",
                                "size": 1,
                                "showAnalytics": true,
                                "title": "Contagem de eventos por API Version",
                                "timeContextFromParameter": "timerange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "tiles",
                                "gridSettings": {
                                  "sortBy": {
                                    "columnMatch": "requestObject_namespace_s",
                                    "sortOrder": {
                                      "name": "Descending",
                                      "value": {
                                        "name": "Descending",
                                        "value": 2
                                      },
                                      "isDefault": true
                                    },
                                    "label": "requestObject_namespace_s",
                                    "labelSettings": {
                                      "label": "requestObject_namespace_s",
                                      "columnType": "string",
                                      "filterable": true
                                    }
                                  }
                                },
                                "sortBy": {
                                  "columnMatch": "requestObject_namespace_s",
                                  "sortOrder": {
                                    "name": "Descending",
                                    "value": {
                                      "name": "Descending",
                                      "value": 2
                                    },
                                    "isDefault": true
                                  },
                                  "label": "requestObject_namespace_s",
                                  "labelSettings": {
                                    "label": "requestObject_namespace_s",
                                    "columnType": "string",
                                    "filterable": true
                                  }
                                },
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "requestObject_namespace_s",
                                    "formatter": 1
                                  },
                                  "subtitleContent": {
                                    "columnMatch": "apiVersion_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "showBorder": false
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "apiVersion_s",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "count_",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "chartSettings": {
                                  "xAxis": "requestObject_namespace_s",
                                  "yAxis": [
                                    "count_"
                                  ],
                                  "group": "requestObject_namespace_s",
                                  "createOtherGroup": 0,
                                  "showLegend": true
                                },
                                "mapSettings": {
                                  "locInfo": "requestObject_namespace_s",
                                  "sizeSettings": "count_",
                                  "sizeAggregation": "Sum",
                                  "legendMetric": "count_",
                                  "legendAggregation": "Sum",
                                  "itemColorSettings": {
                                    "type": "heatmap",
                                    "colorAggregation": "Sum",
                                    "nodeColorField": "count_",
                                    "heatmapPalette": "greenRed"
                                  }
                                }
                              },
                              "customWidth": "30",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL\r\n| extend requestObject_action_s\r\n| summarize Eventos = count() by requestObject_action_s\r\n| sort by Eventos desc",
                                "size": 1,
                                "title": "Contagem de eventos por ação",
                                "noDataMessage": "Nenhum dado encontrado.",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "tiles",
                                "sortBy": [],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "requestObject_action_s",
                                    "formatter": 1
                                  },
                                  "subtitleContent": {
                                    "columnMatch": "requestObject_action_s",
                                    "formatter": 11
                                  },
                                  "leftContent": {
                                    "columnMatch": "Eventos",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "showBorder": false,
                                  "sortCriteriaField": "requestObject_action_s",
                                  "sortOrderField": 2,
                                  "size": "auto"
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "requestObject_action_s",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "count_",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "30",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL\r\n| summarize count() by user_username_s\r\n| sort by count_ desc",
                                "size": 1,
                                "showAnalytics": true,
                                "title": "Contagem de eventos por usuário",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "user_username_s",
                                      "formatter": 0,
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal"
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "palette": "greenRed",
                                        "linkColumn": "count_",
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true,
                                        "compositeBarSettings": {
                                          "labelText": "",
                                          "columnSettings": []
                                        }
                                      }
                                    }
                                  ],
                                  "filter": true,
                                  "labelSettings": [
                                    {
                                      "columnId": "user_username_s",
                                      "label": "Usuário"
                                    },
                                    {
                                      "columnId": "count_",
                                      "label": "Eventos"
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "user_username_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "showBorder": false
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "user_username_s",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "count_",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "mapSettings": {
                                  "locInfo": "LatLong",
                                  "sizeSettings": "count_",
                                  "sizeAggregation": "Sum",
                                  "legendMetric": "count_",
                                  "legendAggregation": "Sum",
                                  "itemColorSettings": {
                                    "type": "heatmap",
                                    "colorAggregation": "Sum",
                                    "nodeColorField": "count_",
                                    "heatmapPalette": "greenRed"
                                  }
                                }
                              },
                              "customWidth": "40",
                              "name": "Events by User"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by tostring(responseObject_status_error_s) \r\n| sort by count_ desc\r\n\r\n\r\n",
                                "size": 1,
                                "title": "Contagem de eventos por status do objeto de resposta",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "piechart",
                                "sortBy": [],
                                "tileSettings": {
                                  "showBorder": false,
                                  "titleContent": {
                                    "columnMatch": "tostring(responseObject_status_error_s)",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "green"
                                    }
                                  }
                                },
                                "graphSettings": {
                                  "type": 0,
                                  "topContent": {
                                    "columnMatch": "responseObject_status_error_s",
                                    "formatter": 1
                                  },
                                  "centerContent": {
                                    "columnMatch": "count_",
                                    "formatter": 1,
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                },
                                "chartSettings": {
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "Eventos \"Geral\"",
                                      "label": "Eventos \"Geral\""
                                    }
                                  ],
                                  "ySettings": {
                                    "numberFormatSettings": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "30",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL\r\n| where isnotempty(objectRef_resource_s)\r\n| summarize count() by objectRef_resource_s\r\n| sort by count_ desc\r\n",
                                "size": 1,
                                "title": "Contagem de eventos por tipo de objeto referenciado",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart",
                                "gridSettings": {
                                  "sortBy": [
                                    {
                                      "itemKey": "count_",
                                      "sortOrder": 2
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "count_",
                                    "sortOrder": 2
                                  }
                                ],
                                "tileSettings": {
                                  "showBorder": false,
                                  "titleContent": {
                                    "columnMatch": "objectRef_resource_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "70",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by objectRef_resource_s, stage_s\r\n\r\n",
                                "size": 1,
                                "title": "Contagem de eventos por tipo de objeto referenciado e status",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart"
                              },
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by kind_s \r\n| sort by count_ desc\r\n| project kind_s, count_\r\n",
                                "size": 1,
                                "title": "Contagem de eventos por tipo de objeto envolvido",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "tiles",
                                "gridSettings": {
                                  "sortBy": [
                                    {
                                      "itemKey": "count_",
                                      "sortOrder": 2
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "count_",
                                    "sortOrder": 2
                                  }
                                ],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "kind_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  }
                                }
                              },
                              "customWidth": "30",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| extend namespace=requestObject_propagationPolicy_s\r\n| summarize count() by namespace, verb_s \r\n| order by count_ desc\r\n\r\n",
                                "size": 1,
                                "title": "Contagem de eventos por tipo de objeto referenciado e ação",
                                "timeContextFromParameter": "timerange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "namespace",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "aggregation": "Count"
                                      }
                                    },
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      }
                                    }
                                  ]
                                },
                                "sortBy": [],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "namespace",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "count_",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "auto"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "maximumSignificantDigits": 3,
                                        "maximumFractionDigits": 2
                                      }
                                    }
                                  },
                                  "showBorder": false
                                },
                                "chartSettings": {
                                  "xAxis": "namespace",
                                  "yAxis": [
                                    "count_"
                                  ],
                                  "group": "verb_s"
                                },
                                "mapSettings": {
                                  "locInfo": "LatLong",
                                  "sizeSettings": "count_",
                                  "sizeAggregation": "Sum",
                                  "legendMetric": "count_",
                                  "legendAggregation": "Sum",
                                  "itemColorSettings": {
                                    "type": "heatmap",
                                    "colorAggregation": "Sum",
                                    "nodeColorField": "count_",
                                    "heatmapPalette": "greenRed"
                                  }
                                }
                              },
                              "customWidth": "30",
                              "name": "query - 19"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| where verb_s != \"CONNECT\" and verb_s != \"WATCH\" and user_username_s != \"\" \r\n| project user_username = user_username_s, service = requestURI_s, timestamp = _timestamp_d, action = verb_s \r\n| sort by user_username asc, timestamp asc\r\n\r\n",
                                "size": 1,
                                "title": "Visão de ações por usuário em serviços e horários específicos",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "timestamp",
                                      "formatter": 6
                                    },
                                    {
                                      "columnMatch": "action",
                                      "formatter": 4,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      }
                                    }
                                  ],
                                  "sortBy": [
                                    {
                                      "itemKey": "user_username",
                                      "sortOrder": 1
                                    },
                                    {
                                      "itemKey": "timestamp",
                                      "sortOrder": 1
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "user_username",
                                      "label": "Usuário"
                                    },
                                    {
                                      "columnId": "service",
                                      "label": "Serviço"
                                    },
                                    {
                                      "columnId": "timestamp",
                                      "label": "Horário"
                                    },
                                    {
                                      "columnId": "action",
                                      "label": "Ação"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "user_username",
                                    "sortOrder": 1
                                  },
                                  {
                                    "itemKey": "timestamp",
                                    "sortOrder": 1
                                  }
                                ],
                                "tileSettings": {
                                  "showBorder": false,
                                  "titleContent": {
                                    "columnMatch": "user_username",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "service",
                                    "formatter": 1,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  "secondaryContent": {
                                    "columnMatch": "timestamp",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "showIcon": true
                                    }
                                  },
                                  "showChart": false
                                },
                                "chartSettings": {
                                  "seriesLabelSettings": [
                                    {
                                      "seriesName": "user_username",
                                      "label": "Usuário"
                                    },
                                    {
                                      "seriesName": "service",
                                      "label": "Serviço"
                                    },
                                    {
                                      "seriesName": "timestamp",
                                      "label": "Horário"
                                    },
                                    {
                                      "seriesName": "action",
                                      "label": "Ação"
                                    }
                                  ],
                                  "iconSettings": {
                                    "iconSeriesName": "action",
                                    "iconMapping": [
                                      {
                                        "value": "GET",
                                        "icon": "OpenInNewWindow"
                                      },
                                      {
                                        "value": "POST",
                                        "icon": "OpenInNewWindow"
                                      },
                                      {
                                        "value": "PUT",
                                        "icon": "OpenInNewWindow"
                                      },
                                      {
                                        "value": "DELETE",
                                        "icon": "OpenInNewWindow"
                                      }
                                    ]
                                  }
                                }
                              },
                              "customWidth": "40",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| where stage_s != \"Metadata\"\r\n| summarize count() by userAgent_s, stage_s, bin(stageTimestamp_t, 1h)\r\n| render columnchart with (title=\"Número de chamadas por usuário e serviço a cada hora\")",
                                "size": 1,
                                "aggregation": 3,
                                "showAnalytics": true,
                                "title": "Número de chamadas por usuário e serviço",
                                "color": {
                                  "color": "#0072C6",
                                  "colorScale": "blue",
                                  "type": "heatmap"
                                },
                                "timeContextFromParameter": "timerange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart"
                              },
                              "customWidth": "50",
                              "showPin": false,
                              "name": "Número de chamadas por usuário e serviço"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by requestObject_metadata_labels_controller_kubernetes_io_hash_s, requestObject_metadata_labels_app_kubernetes_io_version_s, requestObject_metadata_labels_app_kubernetes_io_part_of_s, requestObject_metadata_labels_app_kubernetes_io_name_s, bin(stageTimestamp_t, 1h)\r\n| render columnchart with (title=\"Número de chamadas por controller hash, app version, app part e app name a cada hora\")",
                                "size": 1,
                                "showAnnotations": true,
                                "title": "Número de chamadas por controller hash, app version, app part e app name",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "timechart"
                              },
                              "customWidth": "50",
                              "name": "Número de chamadas por controller hash, app version, app part e app name"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by requestObject_metadata_labels_alertmanager_s, requestObject_metadata_labels_app_kubernetes_io_name_s, bin(stageTimestamp_t, 1h)\r\n| render columnchart with (title=\"Número de chamadas por alertmanager e app name a cada hora\")",
                                "size": 1,
                                "aggregation": 3,
                                "showAnalytics": true,
                                "title": "Número de chamadas por alertmanager e app name",
                                "color": {
                                  "color": "#0072C6",
                                  "themeColor": "default"
                                },
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart",
                                "sortBy": [],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "requestObject_metadata_labels_app_kubernetes_io_name_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "requestObject_metadata_labels_app_kubernetes_io_name_s",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "blue"
                                    }
                                  },
                                  "showBorder": false
                                }
                              },
                              "customWidth": "50",
                              "name": "Kubernetes Audit Logs"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by objectRef_resource_s, objectRef_namespace_s, objectRef_name_s, bin(stageTimestamp_t, 1h)\r\n| render columnchart with (title=\"Número de chamadas por recurso, namespace e nome a cada hora\")\r\n",
                                "size": 1,
                                "title": "Número de chamadas por alertmanager e app name",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "green"
                                      }
                                    }
                                  ]
                                }
                              },
                              "customWidth": "50",
                              "name": "query - 1"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by objectRef_resource_s, objectRef_namespace_s, objectRef_name_s, bin(stageTimestamp_t, 1h)\r\n| render columnchart ",
                                "size": 1,
                                "title": "Número de chamadas por recurso, namespace e nome",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart",
                                "sortBy": [],
                                "tileSettings": {
                                  "titleContent": {
                                    "columnMatch": "objectRef_resource_s",
                                    "formatter": 1
                                  },
                                  "leftContent": {
                                    "columnMatch": "objectRef_namespace_s",
                                    "formatter": 1
                                  },
                                  "rightContent": {
                                    "columnMatch": "objectRef_name_s",
                                    "formatter": 1
                                  }
                                }
                              },
                              "customWidth": "50",
                              "name": "query - 28"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AuditOpenshift_CL \r\n| summarize count() by impersonatedUser_username_s, bin(stageTimestamp_t, 1h)\r\n| render columnchart",
                                "size": 1,
                                "title": "Número de chamadas por usuário impessoal",
                                "timeContextFromParameter": "timerange",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "crossComponentResources": [
                                  "{LogAnalyticsWorkspace}"
                                ],
                                "visualization": "barchart",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "count_",
                                      "formatter": 8,
                                      "formatOptions": {
                                        "min": 0,
                                        "palette": "green"
                                      }
                                    }
                                  ]
                                }
                              },
                              "customWidth": "50",
                              "name": "query - 30"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "selectedTab",
                          "comparison": "isEqualTo",
                          "value": "Audit"
                        },
                        "name": "Audit Openshift"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "AROARC"
                  },
                  "name": "AROARC"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "AzureArc"
            },
            "name": "ARC"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TabMain",
        "comparison": "isEqualTo",
        "value": "Compute"
      },
      "name": "Compute"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Data\r\n<BR>\r\nFor more information regarding Types of Databases and Data Resources on Azure, please access: [Types of Databases on Azure](https://azure.microsoft.com/en-us/product-categories/databases/)\r\n<BR>",
              "style": "info"
            },
            "name": "text - 1"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ab9bc889-bed1-47bb-acfc-b55bcdf1c456",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "SQL",
                  "subTarget": "SQL",
                  "preText": "SQL",
                  "style": "link"
                },
                {
                  "id": "15723e0e-f941-4c96-9781-3c0b1992c603",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "MySQL",
                  "subTarget": "MySQL",
                  "style": "link"
                },
                {
                  "id": "6f189f7f-7f27-4c05-92bc-6238d6255da1",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "PostgreSQL",
                  "subTarget": "PostgreSQL",
                  "style": "link"
                },
                {
                  "id": "69560e8c-5831-416f-8c6a-09de4fd38f49",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "MariaDB",
                  "subTarget": "MariaDB",
                  "style": "link"
                },
                {
                  "id": "86de897a-fc48-4e6d-999a-c20603527e1f",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Cosmos DB",
                  "subTarget": "Cosmos",
                  "style": "link"
                },
                {
                  "id": "fb7c96e6-9368-4345-aee7-35201c9d704a",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Cache for Redis",
                  "subTarget": "Redis",
                  "style": "link"
                },
                {
                  "id": "ec5b61aa-3ec6-499c-a58a-7733f0903d66",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Databricks",
                  "subTarget": "Databricks",
                  "style": "link"
                },
                {
                  "id": "af8776f8-bfae-4f11-8c19-6e9e087e3479",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Stream Analytics Jobs",
                  "subTarget": "StreamAnalytics",
                  "style": "link"
                }
              ]
            },
            "name": "links - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "<BR>"
            },
            "name": "text - 8"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## SQL\r\n<BR>\r\nAzure SQL is a family of managed, secure, and intelligent products that use the SQL Server database engine in the Azure cloud.\r\n<BR>\r\nIn Azure, you can have your SQL Server workloads running as a hosted service (PaaS), or a hosted infrastructure (IaaS). \r\n<BR>\r\nFor more information: [What is Azure SQL?](https://docs.microsoft.com/en-us/azure/azure-sql/azure-sql-iaas-vs-paas-what-is-overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "143ddf6e-7cab-4d26-baff-d0c8538d38f6",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "SQL Details",
                        "subTarget": "SQL",
                        "postText": "SQL Server and Database Details",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "23552ee3-4306-4c03-951c-63430b33b3b0",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "SQL Health",
                        "subTarget": "SQLHealth",
                        "postText": "SQL Datase Health",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 6",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "<br>"
                        },
                        "name": "text - 7"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.sql/servers/databases\" and name != 'master'\r\n| extend srv = split(id,'/'),\r\n         prop = properties\r\n| extend str = strcat(srv[0],'/',srv[1],'/',srv[2],'/',srv[3],'/',srv[4],'/',srv[5],'/',srv[6],'/',srv[7],'/',srv[8])\r\n    | join (resources\r\n            | where type == \"microsoft.sql/servers\" ) on $left.str == $right.id\r\n| where properties1.publicNetworkAccess == 'Enabled' or prop.storageAccountType == 'LRS' or prop.zoneRedundant == 'false'\r\n| project [\"Resource Group\"]=resourceGroup,[\"SQL Server Name\"]=id1,[\"Version\"]=properties1.version,[\"Database\"]=id,[\"Location\"]=location1,[\"Internet Access\"]=properties1.publicNetworkAccess,[\"Status\"]=prop.status,[\"SKU Tier\"]=sku.tier,[\"SKU Family\"]=sku.family,[\"DTU Capacity\"]=sku.capacity,[\"Max Size (GB)\"]=(((prop.maxSizeBytes)/1024)/1024)/1024,[\"Storage Type\"]=prop.storageAccountType,[\"Collation\"]=prop.collation,[\"Zone Redundant\"]=prop.zoneRedundant",
                          "size": 2,
                          "title": "SQL Servers",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Internet Access",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "green",
                                      "text": "Disabled"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "Online",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Storage Type",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "LRS",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Zone Redundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 4"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<br>"
                        },
                        "name": "text - 2"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "SQL"
                  },
                  "name": "SQLG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "936bd17a-bacb-4122-b697-6e31c5de3581",
                              "version": "KqlParameterItem/1.0",
                              "name": "SQLDB",
                              "label": "SQL Database",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.sql/servers/databases\" and name != 'master'",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "value": [
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/synapseworkspace-managedrg-ae976582-7c5c-43c0-90d3-fb911a424718/providers/Microsoft.Sql/servers/synapse-cicd-prd/databases/sqlpool_synapse_prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-self-service-copy-data-prd/databases/sqldb-self-service-copy-data-prd",
                                "/subscriptions/e4128695-83c0-493e-89db-2095acf2d7c6/resourceGroups/datascience/providers/Microsoft.Sql/servers/srv-prd-db-ds/databases/db_prd_ds",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-bigdata-prd/providers/Microsoft.Sql/servers/sqlsv-metastore-adbws-bigdata-prd/databases/sqldb_metastore_databox_previsao_demanda",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-bigdata-prd/providers/Microsoft.Sql/servers/sqlsv-metastore-adbws-bigdata-prd/databases/sqldb_metastore_adbws_bigdata_prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-gestao-acesso-prd/databases/sqldb-gestao-acesso-prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-flash-vendas-prd/providers/Microsoft.Sql/servers/sqlsv-flash-vendas-prd/databases/sqldb-flash-vendas-prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-flash-vendas-prd/providers/Microsoft.Sql/servers/sqlsv-flash-vendas-prd/databases/sqldb-flash-vendas",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-storage-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-datalab-prd/databases/sqldb_metastore_adb_prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-dados-b2b-prd/providers/Microsoft.Sql/servers/sqlsv-dados-b2b-prd/databases/sqldb-dados-b2b-prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-crawler-ds-prd/databases/sqldb-crawler-ds-prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-bigdata-prd/databases/sqldb-monitoria-prd",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-bigdata-prd/databases/ReportServerTempDB",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-datalab-prd/providers/Microsoft.Sql/servers/sqlsv-bigdata-prd/databases/ReportServer",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-bi-prd/providers/Microsoft.Sql/servers/sqlsv-bi-prd/databases/asa-bi-prd",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-contabilidade-data-prd/providers/Microsoft.Sql/servers/sqlp-reconciliacao/databases/db_prd_reconciliacao_hist",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-contabilidade-data-prd/providers/Microsoft.Sql/servers/sqlp-reconciliacao/databases/db_prd_reconciliacao",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-portalpessoas-data-prd/providers/Microsoft.Sql/servers/sqlp-portalpessoas/databases/db_prd_metaslojas",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-portalpessoas-data-prd/providers/Microsoft.Sql/servers/sqlp-portalpessoas/databases/db_prd_ged",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-portalpessoas-data-prd/providers/Microsoft.Sql/servers/sqlp-portalpessoas/databases/db_prd_corerh",
                                "/subscriptions/5a228de8-f1ab-4c19-9d20-6ed918f6e81f/resourceGroups/rg-minhavia-data-prd/providers/Microsoft.Sql/servers/sqlp-minhavia/databases/db_prd_minhavia",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_split_pf",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_split_ex",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_split_cb",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_qrcode_pf",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_qrcode_ex",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_qrcode_cb",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_pedidos_hangfire",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_paguenaloja_pf",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_paguenaloja_hangfire",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_paguenaloja_ex",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_paguenaloja_cb",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_pagamentos_hangfire",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_mfabiometria",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_hubseguranca",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_hubintegracaoloja",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_biometriaeventos",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_antifraudehub",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_antifraudehangfire",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_3ds_pf",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_3ds_ex",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-meiospagamento-data-prd/providers/Microsoft.Sql/servers/sqlp-meiospagamento/databases/db_prd_3ds_cb",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-mdm-data-prd/providers/Microsoft.Sql/servers/sqlp-mdm/databases/db_prd_mdm",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-gestaoafiliados-data-prd/providers/Microsoft.Sql/servers/sqlp-gestaoafiliados/databases/db_prd_gestaoafiliados",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-feed-data-prd/providers/Microsoft.Sql/servers/sqlp-feed/databases/db_prd_feedadmin",
                                "/subscriptions/819a7d8f-1b0a-4121-b7dc-d001d9f109f1/resourceGroups/rg-dimp-data-prd/providers/Microsoft.Sql/servers/sqlp-dimp/databases/db_prd_dimp",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-descoberta-data-prd/providers/Microsoft.Sql/servers/sqlp-cms-1/databases/db_prd_cortex",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-descoberta-data-prd/providers/Microsoft.Sql/servers/sqlp-cms-1/databases/db_prd_conteudoespecial",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-descoberta-data-prd/providers/Microsoft.Sql/servers/sqlp-cms-1/databases/db_prd_cms_identity",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-descoberta-data-prd/providers/Microsoft.Sql/servers/sqlp-cms-1/databases/db_prd_cms",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-checkout-data-prd/providers/Microsoft.Sql/servers/sqlp-clubedepremios/databases/db_prd_clubedepremios",
                                "/subscriptions/9f66adb7-6721-4ca4-953e-e2b4b864803c/resourceGroups/rg-oferta-data-prd/providers/Microsoft.Sql/servers/sqlp-cargadireta/databases/db_prd_planejamentoentrega",
                                "/subscriptions/90e3f5d9-3731-4c45-a3f1-419fbc97f996/resourceGroups/rg-b2b-data-prd/providers/Microsoft.Sql/servers/sqlp-b2b/databases/DB_PRD_PRECO_B2B",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-prd-cc-ed-model-serve/providers/Microsoft.Sql/servers/dlprdsqldw/databases/dlprdsqldw",
                                "/subscriptions/cd7830ba-234d-4033-9d38-22306144b136/resourceGroups/rg-bigdata-dev/providers/Microsoft.Sql/servers/dlprdsqldw-hlg/databases/dlprdsqldw-hlg",
                                "/subscriptions/cd7830ba-234d-4033-9d38-22306144b136/resourceGroups/rg-bigdata-dev/providers/Microsoft.Sql/servers/dlprdsqldw-dev/databases/dlprdsqldw-dev",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-prd-cc-ed-model-serve/providers/Microsoft.Sql/servers/dl-prd-ed-sql/databases/hm-dashbord-looqbox",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-prd-cc-ed-model-serve/providers/Microsoft.Sql/servers/dl-prd-ed-sql/databases/dashboard-looqbox",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-prd-cc-ed-model-serve/providers/Microsoft.Sql/servers/dl-prd-ed-sql/databases/adm",
                                "/subscriptions/f4e6253c-c926-4223-99db-d6c0e6790a86/resourceGroups/rg-prd-cc-ed-model-serve/providers/Microsoft.Sql/servers/dl-prd-ed-sql-contingencia/databases/dashboard-looqbox"
                              ]
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook17e779ac-c10b-48ac-afc4-fad11d2b15a7",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.sql/servers/databases",
                          "metricScope": 0,
                          "resourceParameter": "SQLDB",
                          "resourceIds": [
                            "{SQLDB}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-Basic-cpu_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-Basic-storage_percent",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-Basic-dtu_consumption_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-Basic-connection_failed",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-Basic-physical_data_read_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_core_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.sql/servers/databases",
                              "metric": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_memory_percent",
                              "aggregation": 3
                            }
                          ],
                          "resourceLimit": 1000,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-cpu_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-cpu_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-storage_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-storage_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-dtu_consumption_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-dtu_consumption_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-connection_failed",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 15,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-connection_failed Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-physical_data_read_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-Basic-physical_data_read_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_core_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_core_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_memory_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_memory_percent Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_microsoft.sql/servers/databases-Basic-cpu_percent_2",
                                "sortOrder": 2
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-cpu_percent",
                                "label": "CPU percentage (Max)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-cpu_percent Timeline",
                                "label": "CPU percentage Timeline"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-storage_percent",
                                "label": "Data space used percent (Average)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-storage_percent Timeline",
                                "label": "Data space used percent Timeline"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-dtu_consumption_percent",
                                "label": "DTU percentage (Max)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-dtu_consumption_percent Timeline",
                                "label": "DTU percentage Timeline"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-connection_failed",
                                "label": "Failed Connections (Sum)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-connection_failed Timeline",
                                "label": "Failed Connections Timeline"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-physical_data_read_percent",
                                "label": "Data IO percentage (Max)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-Basic-physical_data_read_percent Timeline",
                                "label": "Data IO percentage Timeline"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_core_percent",
                                "label": "SQL Server process core percent (Max)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_core_percent Timeline",
                                "label": "SQL Server process core percent Timeline"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_memory_percent",
                                "label": "SQL Server process memory percent (Max)"
                              },
                              {
                                "columnId": "microsoft.sql/servers/databases-InstanceAndAppAdvanced-sqlserver_process_memory_percent Timeline",
                                "label": "SQL Server process memory percent Timeline"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_microsoft.sql/servers/databases-Basic-cpu_percent_2",
                              "sortOrder": 2
                            }
                          ],
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "SQLHealth"
                  },
                  "name": "SQLHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "SQL"
            },
            "name": "SQL"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## MySQL\r\n<BR>\r\nAzure Database for MySQL is a relational database service in the Microsoft cloud based on the MySQL Community Edition (available under the GPLv2 license) database engine, versions 5.6, 5.7, and 8.0.\r\n<BR>\r\nMore details: [What is Azure Database for MySQL?](https://docs.microsoft.com/en-us/azure/mysql/overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "f0b1f7b7-162c-428b-ac12-ddebfa04cfd7",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "MySQL",
                        "subTarget": "MySQL",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "f595e08c-0ac6-4346-bbb4-397d4c6d21d9",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "MySQL Health",
                        "subTarget": "MySQLHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.dbformysql/servers\"\r\n| project [\"Resource Group\"]=resourceGroup,[\"MySQL Name\"]=id,[\"Version\"]=properties.version,[\"Location\"]=location,[\"SKU Tier\"]=sku.tier,[\"SKU Family\"]=sku.family,[\"DTU Capacity\"]=sku.capacity,[\"Internet Access\"]=properties.publicNetworkAccess,[\"Storage (GB)\"]=(properties.storageProfile.storageMB/1024),[\"Autogrow\"]=properties.storageProfile.storageAutogrow,[\"GeoRedundant\"]=properties.storageProfile.geoRedundantBackup,[\"Backup Retention (Days)\"]=properties.storageProfile.backupRetentionDays,[\"Encryption\"]=properties.infrastructureEncryption,[\"SSL\"]=properties.sslEnforcement,[\"Fully Qualified Domain Name\"]=properties.fullyQualifiedDomainName,[\"Admin\"]=properties.administratorLogin",
                          "size": 2,
                          "title": "MySQL Databases",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Internet Access",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Autogrow",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Encryption",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SSL",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "MySQL"
                  },
                  "name": "MySQL"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "df2bb28e-9134-4de9-b31d-030ff1949e00",
                              "version": "KqlParameterItem/1.0",
                              "name": "MySQL",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.dbformysql/servers\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookfe83da04-3766-476b-9694-6659c9a86d3f",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.dbformysql/servers",
                          "metricScope": 0,
                          "resourceParameter": "MySQL",
                          "resourceIds": [
                            "{MySQL}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Saturation-cpu_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Saturation-io_consumption_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Saturation-memory_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Saturation-serverlog_storage_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Saturation-storage_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Traffic-active_connections",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.dbformysql/servers",
                              "metric": "microsoft.dbformysql/servers-Errors-connections_failed",
                              "aggregation": 1
                            }
                          ],
                          "title": "MySQL Databases",
                          "resourceLimit": 1000,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-cpu_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-cpu_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-io_consumption_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-io_consumption_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-memory_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-memory_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-serverlog_storage_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-serverlog_storage_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-storage_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Saturation-storage_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Traffic-active_connections",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Traffic-active_connections Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Errors-connections_failed",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 15,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbformysql/servers-Errors-connections_failed Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-cpu_percent",
                                "label": "CPU percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-cpu_percent Timeline",
                                "label": "CPU percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-io_consumption_percent",
                                "label": "IO percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-io_consumption_percent Timeline",
                                "label": "IO percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-memory_percent",
                                "label": "Memory percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-memory_percent Timeline",
                                "label": "Memory percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-serverlog_storage_percent",
                                "label": "Server Log storage percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-serverlog_storage_percent Timeline",
                                "label": "Server Log storage percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-storage_percent",
                                "label": "Storage percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Saturation-storage_percent Timeline",
                                "label": "Storage percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Traffic-active_connections",
                                "label": "Active Connections (Average)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Traffic-active_connections Timeline",
                                "label": "Active Connections Timeline"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Errors-connections_failed",
                                "label": "Failed Connections (Sum)"
                              },
                              {
                                "columnId": "microsoft.dbformysql/servers-Errors-connections_failed Timeline",
                                "label": "Failed Connections Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "MySQLHealth"
                  },
                  "name": "MySQLHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "MySQL"
            },
            "name": "MySQL"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## PostgreSQL\r\n<BR>\r\nAzure Database for PostgreSQL is a relational database service in the Microsoft cloud based on the PostgreSQL Community Edition (available under the GPLv2 license) database engine. \r\n<BR>\r\nMore details: [What is Azure Database for PostgreSQL?](https://docs.microsoft.com/en-us/azure/postgresql/overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "b5f8a596-99cb-4a30-9aea-51e6d83da83b",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "PostgreSQL",
                        "subTarget": "Postgre",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "643aee47-4e1a-4b80-91b6-eabd509702bd",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "PostgreSQL Health",
                        "subTarget": "PostgreHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.dbforpostgresql/servers\"\r\n| where properties.publicNetworkAccess == 'Enabled' or properties.storageProfile.storageAutogrow != 'Enabled' or properties.storageProfile.geoRedundantBackup == 'Disabled' or properties.infrastructureEncryption != 'Enabled' or properties.sslEnforcement != 'Enabled' or properties.minimalTlsVersion == 'TLSEnforcementDisabled'\r\n| project [\"Resource Group\"]=resourceGroup,[\"PostgreSQL Name\"]=id,[\"Version\"]=properties.version,[\"Location\"]=location,[\"SKU Tier\"]=sku.tier,[\"SKU Family\"]=sku.family,[\"DTU Capacity\"]=sku.capacity,[\"Internet Access\"]=properties.publicNetworkAccess,[\"Storage (GB)\"]=(properties.storageProfile.storageMB/1024),[\"Autogrow\"]=properties.storageProfile.storageAutogrow,[\"GeoRedundant\"]=properties.storageProfile.geoRedundantBackup,[\"Backup Retention (Days)\"]=properties.storageProfile.backupRetentionDays,[\"Encryption\"]=properties.infrastructureEncryption,[\"SSL\"]=properties.sslEnforcement,[\"TLS\"]=properties.minimalTlsVersion,[\"Fully Qualified Domain Name\"]=properties.fullyQualifiedDomainName,[\"Admin\"]=properties.administratorLogin",
                          "size": 2,
                          "title": "PostgreSQL",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "SKU Tier",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Basic",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Internet Access",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Autogrow",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "GeoRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Encryption",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SSL",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "TLS",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "TLS1_0",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "TLS1_1",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "TLS1_2",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "TLSEnforcementDisabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Postgre"
                  },
                  "name": "Postgre"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "cf4fc9a7-d963-44b8-8e04-b0dab7b9e393",
                              "version": "KqlParameterItem/1.0",
                              "name": "PostgreSQL",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.dbforpostgresql/servers\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookcb3976df-bd35-4b20-9bc9-faf78a1f2606",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.dbforpostgresql/servers",
                          "metricScope": 0,
                          "resourceParameter": "PostgreSQL",
                          "resourceIds": [
                            "{PostgreSQL}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Saturation-cpu_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Saturation-io_consumption_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Saturation-memory_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Saturation-serverlog_storage_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Saturation-storage_percent",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Traffic-active_connections",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.dbforpostgresql/servers",
                              "metric": "microsoft.dbforpostgresql/servers-Errors-connections_failed",
                              "aggregation": 1
                            }
                          ],
                          "title": "Postgre SQL",
                          "resourceLimit": 1000,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-cpu_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-cpu_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-io_consumption_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-io_consumption_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-memory_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-memory_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-serverlog_storage_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-serverlog_storage_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-storage_percent",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 90,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Saturation-storage_percent Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Traffic-active_connections",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Traffic-active_connections Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Errors-connections_failed",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 15,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.dbforpostgresql/servers-Errors-connections_failed Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-cpu_percent",
                                "label": "CPU percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-cpu_percent Timeline",
                                "label": "CPU percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-io_consumption_percent",
                                "label": "IO percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-io_consumption_percent Timeline",
                                "label": "IO percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-memory_percent",
                                "label": "Memory percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-memory_percent Timeline",
                                "label": "Memory percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-serverlog_storage_percent",
                                "label": "Server Log storage percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-serverlog_storage_percent Timeline",
                                "label": "Server Log storage percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-storage_percent",
                                "label": "Storage percent (Max)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Saturation-storage_percent Timeline",
                                "label": "Storage percent Timeline"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Traffic-active_connections",
                                "label": "Active Connections (Average)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Traffic-active_connections Timeline",
                                "label": "Active Connections Timeline"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Errors-connections_failed",
                                "label": "Failed Connections (Sum)"
                              },
                              {
                                "columnId": "microsoft.dbforpostgresql/servers-Errors-connections_failed Timeline",
                                "label": "Failed Connections Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "PostgreHealth"
                  },
                  "name": "PostgreHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "PostgreSQL"
            },
            "name": "PostgreSQL"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## MariaDB\r\n<BR>\r\nAzure Database for MariaDB is a relational database service in the Microsoft cloud. Azure Database for MariaDB is based on the MariaDB community edition (available under the GPLv2 license) database engine, version 10.2 and 10.3. \r\n<BR>\r\nMore details: [What is Azure Database for MariaDB?](https://docs.microsoft.com/en-us/azure/mariadb/overview)\r\n<BR>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "acb19fc0-733d-471b-bf1b-78356574baad",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "MariaDB",
                        "subTarget": "MariaDB",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "f951f03b-6c54-4d6c-8686-dafa1352c002",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "MariaDB Health",
                        "subTarget": "MariaDBHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.dbformariadb/servers\"\r\n| project [\"Resource Group\"]=resourceGroup,[\"SQL Server Name\"]=name,[\"Version\"]=properties.version,[\"Location\"]=location,[\"SKU Tier\"]=sku.tier,[\"SKU Family\"]=sku.family,[\"DTU Capacity\"]=sku.capacity,[\"Internet Access\"]=properties.publicNetworkAccess,[\"Storage (GB)\"]=(properties.storageProfile.storageMB/1024),[\"Autogrow\"]=properties.storageProfile.storageAutogrow,[\"GeoRedundant\"]=properties.storageProfile.geoRedundantBackup,[\"Backup Retention (Days)\"]=properties.storageProfile.backupRetentionDays,[\"Encryption\"]=properties.infrastructureEncryption,[\"SSL\"]=properties.sslEnforcement,[\"Fully Qualified Domain Name\"]=properties.fullyQualifiedDomainName,[\"Admin\"]=properties.administratorLogin",
                          "size": 2,
                          "title": "MariaDB",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ]
                        },
                        "name": "query - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "MariaDB"
                  },
                  "name": "MariaDB"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "b80440ee-5744-48e6-b6a3-80daa4805b7d",
                              "version": "KqlParameterItem/1.0",
                              "name": "MariaDB",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.dbformariadb/servers\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ]
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "MariaDBHealth"
                  },
                  "name": "MariaDBHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "MariaDB"
            },
            "name": "MariaDB"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Cache for Redis\r\n<BR>\r\nAzure Cache for Redis provides an in-memory data store based on the Redis software. Redis improves the performance and scalability of an application that uses backend data stores heavily.\r\n<BR>\r\nMore details: [About Azure Cache for Redis](https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-overview)\r\n<BR>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "c6c913ea-021e-43f7-955f-59f487ebc0ea",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Cache for Redis",
                        "subTarget": "Redis",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "cd252b37-bbe6-44b4-b5dd-b8d0339a3ead",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Cache for Redis Health",
                        "subTarget": "RedisHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == 'microsoft.cache/redis' or type == 'microsoft.cache/redisenterprise'\r\n| mv-expand ['PrivLink'] = properties.privateEndpointConnections\r\n| extend ['PrivEnd'] = iif(['PrivLink'].id has '/','True','False'),\r\n         ['SSL'] = iif(properties.enableNonSslPort == 'true','true','false'),\r\n         VNET = split(properties.subnetId,'/'),\r\n         PUP = iif(properties.publicNetworkAccess == 'Disabled','Disabled','Enabled'),\r\n         PUP2 = iif(properties.subnetId has '/','Disabled','Enabled')\r\n| extend PUB2 = iif(PUP == 'Disabled','Disabled',PUP2)\r\n| where PUB2 == 'Enabled' or ['SSL'] == 'true' or properties.minimumTlsVersion != '1.2' or ['PrivEnd'] == 'False'\r\n| project ['Resource Group']=resourceGroup,['Name']=id,['Location']=location,['Zone']=zones,['Version']=properties.redisVersion,['Public Access']=PUB2,['SKU']=properties.sku.name,['Capacity']=properties.sku.capacity,['Family']=properties.sku.family,['FQDN']=properties.hostName,['Port']=properties.port,['SSL Port']=properties.sslPort,['Enable Non Ssl Port']=['SSL'],['Minimum Tls Version']=properties.minimumTlsVersion,['VNET']=VNET[8],['SUBNET']=VNET[10],['Max Clients']=properties.redisConfiguration.maxclients,['Private Link']=['PrivEnd']",
                          "size": 2,
                          "title": "Redis Inventory",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Public Access",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Basic",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Enable Non Ssl Port",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Minimum Tls Version",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1.1",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1.0",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Default"
                                }
                              },
                              {
                                "columnMatch": "Private Link",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Redis"
                  },
                  "name": "RedisG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "2416816d-37fd-44c5-9773-daabd098f061",
                              "version": "KqlParameterItem/1.0",
                              "name": "Redis",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.cache/redis\" or type == \"microsoft.cache/redisenterprise\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "value": [
                                "value::all"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookb26bd67d-027b-40ee-8008-3edc28088f29",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.cache/redis",
                          "metricScope": 0,
                          "resourceParameter": "Redis",
                          "resourceIds": [
                            "{Redis}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--allpercentprocessortime",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--allusedmemorypercentage",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--allserverLoad",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--allconnectedclients",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--errors",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--allcachehits",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--allcachemisses",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.cache/redis",
                              "metric": "microsoft.cache/redis--alloperationsPerSecond",
                              "aggregation": 3
                            }
                          ],
                          "title": "Redis Health",
                          "resourceLimit": 500,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allpercentprocessortime",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allpercentprocessortime Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allusedmemorypercentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allusedmemorypercentage Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allserverLoad",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 1,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allserverLoad Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allconnectedclients",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allconnectedclients Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--errors",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 15,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--errors Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allcachehits",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allcachehits Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allcachemisses",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--allcachemisses Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--alloperationsPerSecond",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.cache/redis--alloperationsPerSecond Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "sortBy": [
                              {
                                "itemKey": "$gen_heatmap_microsoft.cache/redis--allpercentprocessortime_2",
                                "sortOrder": 2
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "microsoft.cache/redis--allpercentprocessortime",
                                "label": "CPU (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allpercentprocessortime Timeline",
                                "label": "CPU (Instance Based) Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allusedmemorypercentage",
                                "label": "Used Memory Percentage (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allusedmemorypercentage Timeline",
                                "label": "Used Memory Percentage (Instance Based) Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allserverLoad",
                                "label": "Server Load (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allserverLoad Timeline",
                                "label": "Server Load (Instance Based) Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allconnectedclients",
                                "label": "Connected Clients (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allconnectedclients Timeline",
                                "label": "Connected Clients (Instance Based) Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--errors",
                                "label": "Errors (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--errors Timeline",
                                "label": "Errors Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allcachehits",
                                "label": "Cache Hits (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allcachehits Timeline",
                                "label": "Cache Hits (Instance Based) Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allcachemisses",
                                "label": "Cache Misses (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--allcachemisses Timeline",
                                "label": "Cache Misses (Instance Based) Timeline"
                              },
                              {
                                "columnId": "microsoft.cache/redis--alloperationsPerSecond",
                                "label": "Operations Per Second (Instance Based) (Max)"
                              },
                              {
                                "columnId": "microsoft.cache/redis--alloperationsPerSecond Timeline",
                                "label": "Operations Per Second (Instance Based) Timeline"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_heatmap_microsoft.cache/redis--allpercentprocessortime_2",
                              "sortOrder": 2
                            }
                          ],
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "RedisHealth"
                  },
                  "name": "RedisHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "Redis"
            },
            "name": "Redis"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Cosmos DB\r\n<BR>\r\nAzure Cosmos DB is a fully managed NoSQL database for modern app development. Single-digit millisecond response times, and automatic and instant scalability, guarantee speed at any scale. Business continuity is assured with SLA-backed availability and enterprise-grade security.\r\n<BR>\r\nMore details: [Welcome to Azure Cosmos DB](https://docs.microsoft.com/en-us/azure/cosmos-db/introduction)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "e1033fd7-3002-4864-9cee-7a471cd877e9",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Cosmos DB",
                        "subTarget": "Cosmos",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "4fd121ec-8aea-41ac-b3af-6c766da0689c",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Cosmos DB Health",
                        "subTarget": "CosmosHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == 'microsoft.documentdb/databaseaccounts'\r\n| mv-expand ['PrivLink'] = properties.privateEndpointConnections\r\n    | extend ['PrivEnd'] = iif(['PrivLink'].id has '/','True','False'),\r\n             ['Free Tier Discount'] = iif(properties.enableFreeTier == 'true','Opted In','Opted Out')\r\n| where properties.publicNetworkAccess == 'Enabled' or ['PrivEnd'] == 'False'\r\n| summarize ['Replicate Data Globally']=count(properties.failoverPolicies.id) by ['Resource Group']=resourceGroup,['Name']=id,['Location']=location,['API Types']=tostring(properties.EnabledApiTypes),['Backup Policy']=tostring(properties.backupPolicy.type),['Private Link']=['PrivEnd'],['Free Tier Discount'],['Public Access']=tostring(properties.publicNetworkAccess),['Default Consistency']=tostring(properties.consistencyPolicy.defaultConsistencyLevel)\r\n",
                          "size": 2,
                          "title": "Cosmos DB",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Private Link",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Public Access",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Disabled",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "Cosmos"
                  },
                  "name": "CosmosG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "a818432f-a59f-4df9-be8d-28a12dbb7715",
                              "version": "KqlParameterItem/1.0",
                              "name": "CosmosDB",
                              "label": "Cosmos DB",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.documentdb/databaseaccounts\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookee7d9c96-0aa8-4f28-80e8-7f312d1ac458",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.documentdb/databaseaccounts",
                          "metricScope": 0,
                          "resourceParameter": "CosmosDB",
                          "resourceIds": [
                            "{CosmosDB}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.documentdb/databaseaccounts",
                              "metric": "microsoft.documentdb/databaseaccounts-Requests-DocumentCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.documentdb/databaseaccounts",
                              "metric": "microsoft.documentdb/databaseaccounts-Requests-DocumentQuota",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.documentdb/databaseaccounts",
                              "metric": "microsoft.documentdb/databaseaccounts-Requests-IndexUsage",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.documentdb/databaseaccounts",
                              "metric": "microsoft.documentdb/databaseaccounts-Requests-MetadataRequests",
                              "aggregation": 7
                            },
                            {
                              "namespace": "microsoft.documentdb/databaseaccounts",
                              "metric": "microsoft.documentdb/databaseaccounts-Requests-TotalRequests",
                              "aggregation": 7
                            }
                          ],
                          "resourceLimit": 1000,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-DedicatedGatewayMaximumCPUUsage Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-DedicatedGatewayMaximumCPUUsage",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-IndexUsage Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-IndexUsage",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-MaterializedViewsBuilderMaximumCPUUsage Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-MaterializedViewsBuilderMaximumCPUUsage",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-CassandraConnectorReplicationHealthStatus Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-CassandraConnectorReplicationHealthStatus",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-DocumentCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-DocumentCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-DocumentQuota Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-DocumentQuota",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-IntegratedCacheQueryExpirationCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-IntegratedCacheQueryExpirationCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": ".*\\/Metadata Requests$",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-MetadataRequests Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-MetadataRequests",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-TotalRequests Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.documentdb/databaseaccounts-Requests-TotalRequests",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-DocumentCount",
                                "label": "Document Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-DocumentCount Timeline",
                                "label": "Document Count Timeline"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-DocumentQuota",
                                "label": "Document Quota (Sum)"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-DocumentQuota Timeline",
                                "label": "Document Quota Timeline"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-IndexUsage",
                                "label": "Index Usage (Sum)"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-IndexUsage Timeline",
                                "label": "Index Usage Timeline"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-MetadataRequests",
                                "label": "Metadata Requests (Count)"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-MetadataRequests Timeline",
                                "label": "Metadata Requests Timeline"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-TotalRequests",
                                "label": "Total Requests (Count)"
                              },
                              {
                                "columnId": "microsoft.documentdb/databaseaccounts-Requests-TotalRequests Timeline",
                                "label": "Total Requests Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "CosmosHealth"
                  },
                  "name": "CosmosHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "Cosmos"
            },
            "name": "CosmosG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Databricks\r\n<br/>\r\nAzure Databricks is a data analytics platform optimized for the Microsoft Azure cloud services  platform. Azure Databricks offers three environments for developing data intensive applications: Databricks SQL, Databricks Data Science & Engineering, and Databricks Machine Learning.\r\n<br/>\r\n\r\n"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.databricks/workspaces\"\r\n| extend VNET = split(properties.parameters.customVirtualNetworkId.value,'/'),\r\n         ['Infrastructure Encryption'] = iff(properties.parameters.requireInfrastructureEncryption.value == 'true','true','false'),\r\n         ['Prepare Encryption'] = iif(properties.parameters.prepareEncryption.value == 'true','true','false')\r\n| where ['Infrastructure Encryption'] == 'false' or ['Prepare Encryption'] == 'false' or isnotnull(properties.parameters.publicIpName.value)\r\n| project [\"Resource Group\"]=resourceGroup,\r\n[\"Databrick Name\"]=id,\r\n['SKU']=sku.name,\r\n['Infrastructure Encryption'],\r\n['Storage Account Name']=properties.parameters.storageAccountName.value,\r\n['Storage Account SKU']=properties.parameters.storageAccountSkuName.value,\r\n['Relay Namespace']=properties.parameters.relayNamespaceName.value,\r\n['VNET Prefix']=properties.parameters.vnetAddressPrefix.value,\r\n['Prepare Encryption'],\r\n['NAT Gateway']=properties.parameters.natGatewayName.value,\r\n['Public IP']=properties.parameters.publicIpName.value,\r\n['VNET']=tostring(VNET[8]),\r\n['Private Subnet']=properties.parameters.customPrivateSubnetName.value,\r\n['Public Subnet']=properties.parameters.customPublicSubnetName.value",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Infrastructure Encryption",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Prepare Encryption",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Public IP",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "is Empty",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "Not Present"
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "Databricks"
            },
            "name": "DatabricksG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Stream Analytics Jobs\r\n\r\n\r\nAn Azure Stream Analytics job consists of an input, query, and an output. Stream Analytics ingests data from Azure Event Hubs (including Azure Event Hubs from Apache Kafka), Azure IoT Hub, or Azure Blob Storage. The query, which is based on SQL query language, can be used to easily filter, sort, aggregate, and join streaming data over a period of time. \r\n\r\n\r\nYou can also extend this SQL language with JavaScript and C# user-defined functions (UDFs)\r\n\r\n<br>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "089d237a-eca6-4c81-8604-73c677de8167",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Stream Analytics",
                        "subTarget": "StreamAnalytics",
                        "style": "link",
                        "icon": "Wrench"
                      },
                      {
                        "id": "ef6674c4-1815-4e0a-a8fb-25c26fd9ee5e",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Stream Analytics Health",
                        "subTarget": "StreamAnalyticsHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.streamanalytics/streamingjobs\"\r\n| project ['Resource Group']=resourceGroup,\r\n['Name']=id,\r\n['SKU']=properties.sku.name,\r\n['Job State']=properties.jobState,\r\n['Late Arrival Max Delay']=properties.eventsLateArrivalMaxDelayInSeconds,\r\n['Out of Order Max Delay']=properties.eventsOutOfOrderMaxDelayInSeconds,\r\n['Out of Order Policy']=properties.eventsOutOfOrderPolicy,\r\n['Storage Policy']=properties.contentStoragePolicy,\r\n['Compatibility Level']=properties.compatibilityLevel,\r\n['Output Error Policy']=properties.outputErrorPolicy,\r\n['Last Output Event']=properties.lastOutputEventTime,\r\n['Job Type']=properties.jobType",
                          "size": 2,
                          "title": "Stream Analytics Jobs",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Last Output Event",
                                "formatter": 6
                              }
                            ],
                            "rowLimit": 500
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "StreamAnalytics"
                  },
                  "name": "StreamAnalyticsGG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "d7c600db-d509-44c3-a5cc-89b8d9525d5a",
                              "version": "KqlParameterItem/1.0",
                              "name": "StreamAnalyticsJob",
                              "label": "Stream Analytics Job",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.streamanalytics/streamingjobs\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookdcaf6dab-1c16-4f63-9365-a70a348163c3",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.streamanalytics/streamingjobs",
                          "metricScope": 0,
                          "resourceParameter": "StreamAnalyticsJob",
                          "resourceIds": [
                            "{StreamAnalyticsJob}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.streamanalytics/streamingjobs",
                              "metric": "microsoft.streamanalytics/streamingjobs--ProcessCPUUsagePercentage",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.streamanalytics/streamingjobs",
                              "metric": "microsoft.streamanalytics/streamingjobs--ResourceUtilization",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.streamanalytics/streamingjobs",
                              "metric": "microsoft.streamanalytics/streamingjobs--InputEventsSourcesBacklogged",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.streamanalytics/streamingjobs",
                              "metric": "microsoft.streamanalytics/streamingjobs--OutputEvents",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.streamanalytics/streamingjobs",
                              "metric": "microsoft.streamanalytics/streamingjobs--DroppedOrAdjustedEvents",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.streamanalytics/streamingjobs",
                              "metric": "microsoft.streamanalytics/streamingjobs--Errors",
                              "aggregation": 1
                            }
                          ],
                          "title": "Stream Analytics Jobs",
                          "resourceLimit": 500,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--ProcessCPUUsagePercentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--ProcessCPUUsagePercentage Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--ResourceUtilization",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--ResourceUtilization Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--InputEventsSourcesBacklogged",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 2,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--InputEventsSourcesBacklogged Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--OutputEvents",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--OutputEvents Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--DroppedOrAdjustedEvents",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--DroppedOrAdjustedEvents Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--Errors",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.streamanalytics/streamingjobs--Errors Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--ProcessCPUUsagePercentage",
                                "label": "CPU % Utilization (Preview) (Max)"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--ProcessCPUUsagePercentage Timeline",
                                "label": "CPU % Utilization (Preview) Timeline"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--ResourceUtilization",
                                "label": "SU % Utilization (Max)"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--ResourceUtilization Timeline",
                                "label": "SU % Utilization Timeline"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--InputEventsSourcesBacklogged",
                                "label": "Backlogged Input Events (Max)"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--InputEventsSourcesBacklogged Timeline",
                                "label": "Backlogged Input Events Timeline"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--OutputEvents",
                                "label": "Output Events (Sum)"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--OutputEvents Timeline",
                                "label": "Output Events Timeline"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--DroppedOrAdjustedEvents",
                                "label": "Out of order Events (Sum)"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--DroppedOrAdjustedEvents Timeline",
                                "label": "Out of order Events Timeline"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--Errors",
                                "label": "Runtime Errors (Sum)"
                              },
                              {
                                "columnId": "microsoft.streamanalytics/streamingjobs--Errors Timeline",
                                "label": "Runtime Errors Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "StreamAnalyticsHealth"
                  },
                  "name": "StreamAnalyticsHealthGG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "StreamAnalytics"
            },
            "name": "StreamAnalyticsG"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TabMain",
        "comparison": "isEqualTo",
        "value": "Data"
      },
      "name": "Data"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Infrastructure\r\n<BR>\r\nInfrastructure as code (IaC) is the base management of infrastructure - such as networks, virtual machines, load balancers, and connection topology - in a descriptive model, using a versioning system that is similar to what is used for source code.\r\n<BR>\r\n",
              "style": "info"
            },
            "name": "text - 2"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "2acfee94-7437-467e-af46-d36cff87d86e",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Storage Accounts",
                  "subTarget": "StorageAccount",
                  "style": "link"
                },
                {
                  "id": "0bdce865-4ee7-4704-b61d-8d3dc3b2ea3b",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "API Management",
                  "subTarget": "APIM",
                  "style": "link"
                },
                {
                  "id": "8f2210f4-6cc3-4ce2-b01e-3448bc419426",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Event Hubs",
                  "subTarget": "EventHub",
                  "style": "link"
                },
                {
                  "id": "3f1fa3d5-238d-459d-b947-1e10858aa8bc",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Key Vaults",
                  "subTarget": "Vault",
                  "style": "link"
                }
              ]
            },
            "name": "links - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "<BR>"
            },
            "name": "text - 6"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Storage Accounts\r\n<BR>\r\nAn Azure storage account contains all of your Azure Storage data objects: blobs, file shares, queues, tables, and disks. The storage account provides a unique namespace for your Azure Storage data that's accessible from anywhere in the world over HTTP or HTTPS. Data in your storage account is durable and highly available, secure, and massively scalable.\r\n<BR>\r\nMore details: [Storage account overview](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview)\r\n<BR>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "fc318743-548f-4082-8e29-497ca7228f44",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Storage Accounts",
                        "subTarget": "StorageAcc",
                        "postText": "Proactive Settings",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "3a4c990e-12be-4497-9ed3-ea2d6dc9e7f5",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Storage Account Health",
                        "subTarget": "StorageAccHealth",
                        "postText": "Reactive Analysis",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 12",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| extend ['TLS Version'] = case(properties.minimumTlsVersion == 'TLS1_2','TLS 1.2',properties.minimumTlsVersion == 'TLS1_0','TLS 1.0',properties.minimumTlsVersion == 'TLS1_1','TLS 1.1',properties.minimumTlsVersion == '','Default',properties.minimumTlsVersion)\r\n| summarize count() by ['TLS Version']",
                          "size": 1,
                          "title": "Storage Accounts by TLS Version",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "showBorder": false
                          }
                        },
                        "customWidth": "25",
                        "name": "query - 2"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| summarize count() by ['Primary Location']=tostring(properties.primaryLocation)",
                          "size": 1,
                          "title": "Storage Accounts by Location",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Primary Location",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "Primary Location",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "count_",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 6"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| summarize count() by kind",
                          "size": 1,
                          "title": "Storage Accounts by Version",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "barchart",
                          "chartSettings": {
                            "xAxis": "kind",
                            "seriesLabelSettings": [
                              {
                                "seriesName": "StorageV2",
                                "color": "green"
                              },
                              {
                                "seriesName": "Storage",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "name": "query - 7"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.storage/storageaccounts\"\r\n| where kind == 'Storage' or properties.minimumTlsVersion == 'TLS1_0' or properties.allowBlobPublicAccess == 1 or properties.supportsHttpsTrafficOnly != 1\r\n| extend \r\n        ['Access Tier']=case(properties.accessTier == 'Hot','Hot',properties.accessTier == 'Cold','Cold',properties.accessTier),\r\n        ['Secure Transfer Required']=iif(properties.supportsHttpsTrafficOnly == 1,'True','False'),\r\n        ['Allow Public Access']=iif(properties.allowBlobPublicAccess == 1,'True','False'),\r\n        ['Version']=iif(kind == 'StorageV2','Version 2','Version 1'),\r\n        ['Data Lake']=iif(properties.isHnsEnabled == 'true','True','False')\r\n| project ['Resource Group']=resourceGroup,['Name']=id,['Version'],['Data Lake'],['SKU']=sku.name,['Access Tier'],['Primary Location']=properties.primaryLocation,['Status of Location']=properties.statusOfPrimary,['TLS Version']=properties.minimumTlsVersion,['Allow Public Access'],['Secure Transfer Required']",
                          "size": 2,
                          "title": "Storage Account Details",
                          "showRefreshButton": true,
                          "exportedParameters": [
                            {
                              "fieldName": "Name",
                              "parameterName": "StorageName",
                              "parameterType": 5
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Version",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Version 1",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "tooltipFormat": {
                                  "tooltip": "General-purpose v2 storage accounts support the latest Azure Storage features and incorporate all of the functionality of general-purpose v1 and Blob storage accounts. General-purpose v2 accounts are recommended for most storage scenarios. General-purpose v2 accounts deliver the lowest per-gigabyte capacity prices for Azure Storage, as well as industry-competitive transaction prices. General-purpose v2 accounts support default account access tiers of hot or cool and blob level tiering between hot, cool, or archive.  Upgrading to a general-purpose v2 storage account from your general-purpose v1 or Blob storage accounts is straightforward. You can upgrade using the Azure portal, PowerShell, or Azure CLI. There is no downtime or risk of data loss associated with upgrading to a general-purpose v2 storage account. The account upgrade happens via a simple Azure Resource Manager operation that changes the account type."
                                }
                              },
                              {
                                "columnMatch": "Data Lake",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "LRS",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "tooltipFormat": {
                                  "tooltip": "LRS provides at least 99.999999999% (11 nines) durability of objects over a given year. But LRS protects your data against server rack and drive failures. However, if a disaster such as fire or flooding occurs within the data center, all replicas of a storage account using LRS may be lost or unrecoverable. To mitigate this risk, Microsoft recommends using zone-redundant storage (ZRS), geo-redundant storage (GRS), or geo-zone-redundant storage (GZRS)."
                                }
                              },
                              {
                                "columnMatch": "Access Tier",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Hot",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Status of Location",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "available",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "TLS Version",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "TLS1_2",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Default"
                                },
                                "tooltipFormat": {
                                  "tooltip": "When you are confident that traffic from clients using older versions of TLS is minimal, or that it's acceptable to fail requests made with an older version of TLS, then you can begin enforcement of a minimum TLS version on your storage account. Requiring that clients use a minimum version of TLS to make requests against a storage account is part of a strategy to minimize security risks to your data."
                                }
                              },
                              {
                                "columnMatch": "Allow Public Access",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "True",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Default"
                                },
                                "tooltipFormat": {
                                  "tooltip": "When a container is configured for public access, any client can read data in that container. Public access presents a potential security risk, so if your scenario does not require it, Microsoft recommends that you disallow it for the storage account."
                                }
                              },
                              {
                                "columnMatch": "Secure Transfer Required",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "False",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "StorageAcc"
                  },
                  "name": "StorageAcc"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "3d411631-1862-475e-ad81-b9b7c8bdd993",
                              "version": "KqlParameterItem/1.0",
                              "name": "StorageNames",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "where type =~ 'microsoft.storage/storageaccounts'\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = id, selected = Rank <= 5",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources",
                              "value": [
                                "value::all"
                              ]
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 10"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookdb19a8d8-91af-44ea-951d-5ffa133b2ebe",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageNames",
                          "resourceIds": [
                            "{StorageNames}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Transactions",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ResponseType",
                              "splitBySortOrder": -1,
                              "splitByLimit": 4,
                              "columnName": "Errors"
                            }
                          ],
                          "title": "Storage Accounts",
                          "resourceLimit": 200,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "subTarget": "insights",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-Transactions$|Transactions$",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 20000,
                                  "palette": "greenRed",
                                  "aggregation": "Max"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-Transactions Timeline$|Transactions Timeline$",
                                "formatter": 9,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "greenRed"
                                }
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency$|microsoft.storage/storageaccounts-Transaction-SuccessServerLatency$|E2E Latency$|Server Latency$",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 2000,
                                  "palette": "greenRed",
                                  "linkTarget": "WorkbookTemplate",
                                  "workbookContext": {
                                    "componentIdSource": "column",
                                    "componentId": "Name",
                                    "resourceIdsSource": "column",
                                    "resourceIds": "Name",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Individual Storage/Performance",
                                    "typeSource": "static",
                                    "type": "workbook",
                                    "gallerySource": "static",
                                    "gallery": "microsoft.storage/storageaccounts",
                                    "locationSource": "default"
                                  }
                                },
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency Timeline$|E2E Latency Timeline$",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": ".*\\/Errors",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "greenRed",
                                  "linkTarget": "WorkbookTemplate",
                                  "workbookContext": {
                                    "componentIdSource": "column",
                                    "componentId": "Name",
                                    "resourceIdsSource": "column",
                                    "resourceIds": "Name",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/Individual Storage/Failures",
                                    "typeSource": "static",
                                    "type": "workbook",
                                    "gallerySource": "static",
                                    "gallery": "microsoft.storage/storageaccounts",
                                    "locationSource": "default"
                                  }
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "Success/Errors",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "success/Errors",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Server Latency Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Subscription"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Name"
                            },
                            "labelSettings": [
                              {
                                "columnId": "microsoft.storage/storageaccounts-Transaction-Transactions",
                                "label": "Transactions"
                              },
                              {
                                "columnId": "microsoft.storage/storageaccounts-Transaction-Transactions Timeline",
                                "label": "Transactions Timeline"
                              },
                              {
                                "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                                "label": "E2E Latency"
                              },
                              {
                                "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency Timeline",
                                "label": "E2E Latency Timeline"
                              },
                              {
                                "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency",
                                "label": "Server Latency"
                              },
                              {
                                "columnId": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency Timeline",
                                "label": "Server Latency Timeline"
                              }
                            ]
                          },
                          "sortBy": [],
                          "exportedParameters": [
                            {
                              "fieldName": "Name",
                              "parameterName": "StorageAccName",
                              "parameterType": 5
                            }
                          ],
                          "showExportToExcel": true
                        },
                        "showPin": false,
                        "name": "metric - 8"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook12573ba0-48b5-45cd-b025-9bde6ae546c1",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": null,
                              "columnName": "Total Transactions"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/blobservices",
                              "metric": "microsoft.storage/storageaccounts/blobservices-Transaction-Transactions",
                              "aggregation": 1,
                              "columnName": "Blob Transactions"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/fileservices",
                              "metric": "microsoft.storage/storageaccounts/fileservices-Transaction-Transactions",
                              "aggregation": 1,
                              "columnName": "File Transactions"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/queueservices",
                              "metric": "microsoft.storage/storageaccounts/queueservices-Transaction-Transactions",
                              "aggregation": 1,
                              "columnName": "Queue Transactions"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/tableservices",
                              "metric": "microsoft.storage/storageaccounts/tableservices-Transaction-Transactions",
                              "aggregation": 1,
                              "columnName": "Table Transactions"
                            }
                          ],
                          "title": "Storage Account Transactions",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "customWidth": "50",
                        "name": "metric - 3"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook40ed3fef-a217-446d-8c32-5743cf5797d0",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": -1,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Ingress",
                              "aggregation": 1,
                              "columnName": "Storage Ingress"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Egress",
                              "aggregation": 1,
                              "columnName": "Storage Egress"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Availability",
                              "aggregation": 2,
                              "columnName": "Storage Availability"
                            }
                          ],
                          "title": "Storage Account Cumulative Bandwidth",
                          "gridFormatType": 1,
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Metric",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Aggregation",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Segment Field",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Segment",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Value",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Used Capacity Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "Metric ID",
                                "label": "MetricID"
                              }
                            ]
                          }
                        },
                        "customWidth": "25",
                        "name": "metric - 4"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook1f72d2a0-9109-4a80-9746-5a20603b69e6",
                          "version": "MetricsItem/2.0",
                          "size": 1,
                          "chartType": 2,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "Storage Used"
                            }
                          ],
                          "title": "Storage Account Used Space",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "Storage Used Capacity Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Capacity-UsedCapacity",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000
                          }
                        },
                        "customWidth": "25",
                        "name": "metric - 5"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook49e9d154-0710-4e66-93ec-895df6e7cb4a",
                          "version": "MetricsItem/2.0",
                          "size": 0,
                          "chartType": 2,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency",
                              "aggregation": 4,
                              "splitBy": null,
                              "columnName": "Server Latency"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                              "aggregation": 4,
                              "columnName": "E2E Latency"
                            }
                          ],
                          "title": "Storage Account Latency",
                          "gridFormatType": 1,
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "Name",
                              "formatter": 13
                            },
                            "leftContent": {
                              "columnMatch": "Value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "Server Latency Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessServerLatency",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "E2E Latency Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 23,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Aggregation",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Value",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "Timeline",
                                "formatter": 9
                              }
                            ],
                            "rowLimit": 10000
                          }
                        },
                        "customWidth": "50",
                        "name": "metric - 8"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook11ac4aeb-1231-4147-9330-f77e9f5b3173",
                          "version": "MetricsItem/2.0",
                          "size": 0,
                          "chartType": 2,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Ingress",
                              "aggregation": 1,
                              "splitBy": null,
                              "columnName": "Ingress"
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts",
                              "metric": "microsoft.storage/storageaccounts-Transaction-Egress",
                              "aggregation": 1,
                              "columnName": "Egress"
                            }
                          ],
                          "title": "Storage Account Bandwidth",
                          "gridSettings": {
                            "rowLimit": 10000
                          }
                        },
                        "customWidth": "50",
                        "name": "metric - 9"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook53678d70-22d8-403b-96b1-1c24f90516ed",
                          "version": "MetricsItem/2.0",
                          "size": 0,
                          "chartType": 0,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts/blobservices",
                              "metric": "microsoft.storage/storageaccounts/blobservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ApiName",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/tableservices",
                              "metric": "microsoft.storage/storageaccounts/tableservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ApiName",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/fileservices",
                              "metric": "microsoft.storage/storageaccounts/fileservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ApiName",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/queueservices",
                              "metric": "microsoft.storage/storageaccounts/queueservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ApiName",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            }
                          ],
                          "title": "Failing transactions by API name",
                          "gridFormatType": 1,
                          "filters": [
                            {
                              "key": "ResponseType",
                              "operator": 1,
                              "values": [
                                "Success"
                              ]
                            }
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Namespace",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Aggregation",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Segment Field",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Segment",
                                "formatter": 5,
                                "formatOptions": {
                                  "palette": "blue",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Value",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "red",
                                  "showIcon": true,
                                  "aggregation": "Sum"
                                }
                              },
                              {
                                "columnMatch": "Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "red",
                                  "showIcon": true
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Namespace"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Segment"
                            }
                          }
                        },
                        "customWidth": "50",
                        "showPin": false,
                        "name": "Failing transactions by API name "
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook53678d70-22d8-403b-96b1-1c24f90516ed",
                          "version": "MetricsItem/2.0",
                          "size": 0,
                          "chartType": 0,
                          "resourceType": "microsoft.storage/storageaccounts",
                          "metricScope": 0,
                          "resourceParameter": "StorageAccName",
                          "resourceIds": [
                            "{StorageAccName}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 900000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.storage/storageaccounts/blobservices",
                              "metric": "microsoft.storage/storageaccounts/blobservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ResponseType",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/tableservices",
                              "metric": "microsoft.storage/storageaccounts/tableservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ResponseType",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/fileservices",
                              "metric": "microsoft.storage/storageaccounts/fileservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ResponseType",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            },
                            {
                              "namespace": "microsoft.storage/storageaccounts/queueservices",
                              "metric": "microsoft.storage/storageaccounts/queueservices-Transaction-Transactions",
                              "aggregation": 1,
                              "splitBy": "ResponseType",
                              "splitBySortOrder": -1,
                              "splitByLimit": 5
                            }
                          ],
                          "title": "Failing transactions by Response type",
                          "gridFormatType": 1,
                          "filters": [
                            {
                              "key": "ResponseType",
                              "operator": 1,
                              "values": [
                                "Success"
                              ]
                            }
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Namespace",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Metric",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Aggregation",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Segment Field",
                                "formatter": 5,
                                "formatOptions": {
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Segment",
                                "formatter": 5,
                                "formatOptions": {
                                  "palette": "blue",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Value",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "red",
                                  "showIcon": true,
                                  "aggregation": "Sum"
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "maximumFractionDigits": 1
                                  }
                                }
                              },
                              {
                                "columnMatch": "Timeline",
                                "formatter": 9,
                                "formatOptions": {
                                  "min": 0,
                                  "palette": "red",
                                  "showIcon": true
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Namespace"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Segment"
                            }
                          }
                        },
                        "customWidth": "50",
                        "showPin": false,
                        "name": "Failing transactions by Response Type"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "StorageAccHealth"
                  },
                  "name": "StorageAccHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "StorageAccount"
            },
            "name": "StorageAcc"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## API Management\r\n<BR>\r\nAPI Management helps organizations publish APIs to external, partner, and internal developers to unlock the potential of their data and services. Businesses everywhere are looking to extend their operations as a digital platform, creating new channels, finding new customers and driving deeper engagement with existing ones.\r\n<BR>\r\nMore details: [About API Management](https://docs.microsoft.com/en-us/azure/api-management/api-management-key-concepts)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "b870fdf0-462c-4f2f-a2a5-c1c473a3a6a3",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "API Management",
                        "subTarget": "APIM",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "f4a98bbf-b3c8-488e-a176-faeede065d22",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "APIM Health",
                        "subTarget": "APIMHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.apimanagement/service\"\r\n| extend VNET = split(properties.virtualNetworkConfiguration.subnetResourceId,'/')\r\n| project ['Resource Group']=resourceGroup,['Name']=id,['Location']=location,\r\n['SKU']=sku.name,['Gateway URL']=properties.gatewayUrl,['Virtual Network Type']=properties.virtualNetworkType,\r\n['Virtual Network']=VNET[8],\r\n['HTTP2']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2\"],\r\n['Backend SSL 3.0']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30\"],\r\n['Backend TLS 1.0']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10\"],\r\n['Backend TLS 1.1']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11\"],\r\n['Triple DES']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168\"],\r\n['Client TLS 1.0']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10\"],\r\n['Client TLS 1.1']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11\"],\r\n['Client SSL 3.0']=properties.customProperties.[\"Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30\"],\r\n['Public IP']=properties.publicIPAddresses",
                          "size": 2,
                          "title": "API Management",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Developer",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Basic",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Backend TLS 1.0",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "alse",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "rue",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Backend TLS 1.1",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "alse",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "rue",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Client TLS 1.0",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "alse",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "rue",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Client TLS 1.1",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "alse",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "endsWith",
                                      "thresholdValue": "rue",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "APIM"
                  },
                  "name": "APIMG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "dc5ca683-1b19-4212-95a3-34aef17b6821",
                              "version": "KqlParameterItem/1.0",
                              "name": "APIM",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.apimanagement/service\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook1d203745-a3b9-4673-9d99-bd37164e4268",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.apimanagement/service",
                          "metricScope": 0,
                          "resourceParameter": "APIM",
                          "resourceIds": [
                            "{APIM}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 14400000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.apimanagement/service",
                              "metric": "microsoft.apimanagement/service-Gateway Requests-SuccessfulRequests",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.apimanagement/service",
                              "metric": "microsoft.apimanagement/service-Gateway Requests-FailedRequests",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.apimanagement/service",
                              "metric": "microsoft.apimanagement/service-Gateway Requests-BackendDuration",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.apimanagement/service",
                              "metric": "microsoft.apimanagement/service-Gateway Requests-Duration",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.apimanagement/service",
                              "metric": "microsoft.apimanagement/service-Capacity-Capacity",
                              "aggregation": 3
                            }
                          ],
                          "title": "API Management",
                          "resourceLimit": 500,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-SuccessfulRequests",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-SuccessfulRequests Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-FailedRequests",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 15,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-FailedRequests Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-BackendDuration",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 1000,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-BackendDuration Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-Duration",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 1000,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 23,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-Duration Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Capacity-Capacity",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 1,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Capacity-Capacity Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-Requests Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Gateway Requests-Requests",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Network Status-NetworkConnectivity Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.apimanagement/service-Network Status-NetworkConnectivity",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-SuccessfulRequests",
                                "label": "Successful Gateway Requests (Deprecated) (Sum)"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-SuccessfulRequests Timeline",
                                "label": "Successful Gateway Requests (Deprecated) Timeline"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-FailedRequests",
                                "label": "Failed Gateway Requests (Deprecated) (Sum)"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-FailedRequests Timeline",
                                "label": "Failed Gateway Requests (Deprecated) Timeline"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-BackendDuration",
                                "label": "Duration of Backend Requests (Max)"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-BackendDuration Timeline",
                                "label": "Duration of Backend Requests Timeline"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-Duration",
                                "label": "Overall Duration of Gateway Requests (Average)"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Gateway Requests-Duration Timeline",
                                "label": "Overall Duration of Gateway Requests Timeline"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Capacity-Capacity",
                                "label": "Capacity (Max)"
                              },
                              {
                                "columnId": "microsoft.apimanagement/service-Capacity-Capacity Timeline",
                                "label": "Capacity Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "APIMHealth"
                  },
                  "name": "APIMHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "APIM"
            },
            "name": "APIMg"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Event Hubs\r\n<BR>\r\nAzure Event Hubs is a big data streaming platform and event ingestion service. It can receive and process millions of events per second. Data sent to an event hub can be transformed and stored by using any real-time analytics provider or batching/storage adapters.\r\n<BR>\r\nMore details: [Azure Event Hubs — A big data streaming platform and event ingestion service](https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-about)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "2147c6a0-8cfd-4279-9ae8-f47674ae4151",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Event Hubs",
                        "subTarget": "EventHub",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "2b799da7-1fdb-4e76-be46-40397ac4f56f",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Event Hubs Health",
                        "subTarget": "EventHubHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.eventhub/namespaces\"\r\n| where properties.zoneRedundant != 'true' or properties.isAutoInflateEnabled != 'true' or properties.maximumThroughputUnits <= 5\r\n| extend GeoRep = iif(properties.zoneRedundant == 'true','true','false'),\r\n         Inflate = iif(properties.isAutoInflateEnabled == 'true','true','false')\r\n| project ['Resource Group']=resourceGroup,['Name']=id,['Location']=location,\r\n['SKU']=sku.name,['Status']=properties.status,['Geo-Replication']=GeoRep,\r\n['Throughput Units']=sku.capacity,['Auto-Inflate']=Inflate,\r\n['Max Throughput Units']=properties.maximumThroughputUnits,['Kafka Enabled']=properties.kafkaEnabled,['Endpoint']=properties.serviceBusEndpoint",
                          "size": 2,
                          "title": "Event Hubs",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Basic",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "Active",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Geo-Replication",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "true",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Auto-Inflate",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "Max Throughput Units",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 10,
                                  "palette": "redGreen"
                                }
                              }
                            ]
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "EventHub"
                  },
                  "name": "EventHubG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "427644df-067e-4e24-9860-f883e0d3a970",
                              "version": "KqlParameterItem/1.0",
                              "name": "EventHubs",
                              "label": "Event Hubs",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.eventhub/namespaces\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbooka99f0547-acb1-4d87-9c23-6ab023e88930",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.eventhub/namespaces",
                          "metricScope": 0,
                          "resourceParameter": "EventHubs",
                          "resourceIds": [
                            "{EventHubs}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 14400000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.eventhub/namespaces",
                              "metric": "microsoft.eventhub/namespaces--ActiveConnections",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.eventhub/namespaces",
                              "metric": "microsoft.eventhub/namespaces--IncomingRequests",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.eventhub/namespaces",
                              "metric": "microsoft.eventhub/namespaces--ServerErrors",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.eventhub/namespaces",
                              "metric": "microsoft.eventhub/namespaces--QuotaExceededErrors",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.eventhub/namespaces",
                              "metric": "microsoft.eventhub/namespaces--ThrottledRequests",
                              "aggregation": 1
                            }
                          ],
                          "title": "Event Hubs",
                          "resourceLimit": 500,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--ActiveConnections",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--ActiveConnections Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--IncomingRequests",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--IncomingRequests Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--ServerErrors",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "1",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "30",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--ServerErrors Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--QuotaExceededErrors",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "1",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "15",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--QuotaExceededErrors Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--ThrottledRequests",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "1",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": ">=",
                                      "thresholdValue": "15",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.eventhub/namespaces--ThrottledRequests Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.eventhub/namespaces--ActiveConnections",
                                "label": "ActiveConnections (Max)"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--ActiveConnections Timeline",
                                "label": "ActiveConnections Timeline"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--IncomingRequests",
                                "label": "Incoming Requests (Max)"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--IncomingRequests Timeline",
                                "label": "Incoming Requests Timeline"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--ServerErrors",
                                "label": "Server Errors. (Sum)"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--ServerErrors Timeline",
                                "label": "Server Errors. Timeline"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--QuotaExceededErrors",
                                "label": "Quota Exceeded Errors. (Sum)"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--QuotaExceededErrors Timeline",
                                "label": "Quota Exceeded Errors. Timeline"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--ThrottledRequests",
                                "label": "Throttled Requests. (Sum)"
                              },
                              {
                                "columnId": "microsoft.eventhub/namespaces--ThrottledRequests Timeline",
                                "label": "Throttled Requests. Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "EventHubHealth"
                  },
                  "name": "EventHubHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "EventHub"
            },
            "name": "EventHubG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Azure Key Vault\r\n<BR>\r\nAzure Key Vault is a cloud service for securely storing and accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, certificates, or cryptographic keys. Key Vault service supports two types of containers: vaults and managed hardware security module(HSM) pools. Vaults support storing software and HSM-backed keys, secrets, and certificates.\r\n<BR>\r\nMore details: [Azure Key Vault basic concepts](https://docs.microsoft.com/en-us/azure/key-vault/general/basic-concepts)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.keyvault/vaults\"\r\n| extend Soft = iif(properties.enableSoftDelete == 'true','true','false')\r\n| project ['Resource Group']=resourceGroup,['Name']=id,['Location']=location,['SKU Family']=properties.sku.family,\r\n['SKU']=properties.sku.name,['Enable RBAC']=properties.enableRbacAuthorization,\r\n['Enable Soft Delete']=Soft,\r\n['Enable for Disk Encryption']=properties.enabledForDiskEncryption,\r\n['Enable for Template Deploy']=properties.enabledForTemplateDeployment,\r\n['Soft Delete Retention Days']=properties.softDeleteRetentionInDays,\r\n['Vault Uri']=properties.vaultUri",
                    "size": 2,
                    "title": "Key Vaults",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Enable Soft Delete",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "Vault"
            },
            "name": "VaultG"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TabMain",
        "comparison": "isEqualTo",
        "value": "Infrastructure"
      },
      "name": "InfrastructureG"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Azure Networking\r\n<BR>\r\nThis section describes services that provide connectivity between Azure resources, connectivity from an on-premises network to Azure resources, and branch to branch connectivity in Azure - Virtual Network (VNet), ExpressRoute, VPN Gateway, Virtual WAN, Virtual network NAT Gateway, Azure DNS and Azure Peering service.\r\n<BR>",
              "style": "info"
            },
            "name": "text - 0"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "40c0552a-f192-46fd-8f6c-0a6ec220b261",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual Network",
                  "subTarget": "VirtualNetwork",
                  "style": "link"
                },
                {
                  "id": "cdf40c1f-939a-4839-82a7-545792ca2d07",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Load Balancer",
                  "subTarget": "LoadBalancer",
                  "style": "link"
                },
                {
                  "id": "7c993f9d-f47c-41c4-904c-9f97cbe9ea59",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Traffic Manager",
                  "subTarget": "TrafficManager",
                  "style": "link"
                },
                {
                  "id": "4b596545-3f66-42bb-967c-6a15640e050f",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Firewall",
                  "subTarget": "Firewall",
                  "style": "link"
                },
                {
                  "id": "0fe85600-26ac-44bc-958c-62fee22348cd",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Front Doors",
                  "subTarget": "FrontDoor",
                  "style": "link"
                },
                {
                  "id": "0d356230-96a3-4337-8f4c-8a6f9a2a3653",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Application Gateway",
                  "subTarget": "AppGateway",
                  "style": "link"
                },
                {
                  "id": "4e686aa6-6535-4d2f-b018-226308c630d1",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Public IP",
                  "subTarget": "PublicIP",
                  "style": "link"
                }
              ]
            },
            "name": "links - 1"
          },
          {
            "type": 1,
            "content": {
              "json": "<BR>"
            },
            "name": "text - 8"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Virtual Network\r\n<BR>\r\nAzure Virtual Network (VNet) is the fundamental building block for your private network in Azure. VNet enables many types of Azure resources, such as Azure Virtual Machines (VM), to securely communicate with each other, the internet, and on-premises networks. VNet is similar to a traditional network that you'd operate in your own data center, but brings with it additional benefits of Azure's infrastructure such as scale, availability, and isolation.\r\n<BR>\r\nMore details: [What is Azure Virtual Network?](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.network/virtualnetworks\"\r\n| mv-expand sub=properties.subnets\r\n| extend peer = array_length(properties.virtualNetworkPeerings),\r\n         NSG = split(sub.properties.networkSecurityGroup.id,'/'),\r\n         UDR = split(sub.properties.routeTable.id,'/')\r\n| summarize ['Peerings']=sum(peer) by ['Virtual Network']=id,\r\n['DDOS Protection']=tostring(properties.enableDdosProtection),\r\n['VNET Address Space']=tostring(properties.addressSpace.addressPrefixes),\r\n['Subnet']=tostring(sub.name),\r\n['NSG']=tostring(NSG[8]),\r\n['UDR']=tostring(UDR[8]),\r\n['Subnet Address Space']=tostring(sub.properties.addressPrefix)",
                          "size": 2,
                          "title": "Virtual Networks",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "DDOS Protection",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "name": "VNET"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "VirtualNetwork"
            },
            "name": "VNETg"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Load Balancers\r\n<BR>\r\nAzure Load Balancer operates at layer 4 of the Open Systems Interconnection (OSI) model. It's the single point of contact for clients. Load balancer distributes inbound flows that arrive at the load balancer's front end to backend pool instances. These flows are according to configured load-balancing rules and health probes.\r\n<BR>\r\nMore details: [What is Azure Load Balancer?](https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "c34089ef-7a18-4b47-8b64-eb7c99877236",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Load Balancers",
                        "subTarget": "LB",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "fcff17ef-6509-4c17-8308-a958e3220f76",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Load Balancers Health",
                        "subTarget": "LBHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      },
                      {
                        "id": "c0f9b2f2-5b9f-4b9f-8b1f-8b1f8b1f8b1f",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Load Balancers Rules",
                        "subTarget": "LBRules",
                        "style": "link",
                        "icon": "Settings"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| extend Name = tostring(name)\r\n| extend  BE=array_length(properties.backendAddressPools),\r\n            FE=array_length(properties.frontendIPConfigurations),            \r\n            LB=array_length(properties.loadBalancingRules),\r\n            OR=array_length(properties.outboundRules),\r\n            INAT=array_length(properties.inboundNatPools),\r\n            INATR=array_length(properties.inboundNatRules),\r\n            PR=array_length(properties.probes)\r\n| extend BE=iif(isnotnull(BE),BE,0),\r\n        FE=iif(isnotnull(FE),FE,0),\r\n        LB=iif(isnotnull(LB),LB,0),\r\n        OR=iif(isnotnull(OR),OR,0),\r\n        INAT=iif(isnotnull(INAT),INAT,0),\r\n        INATR=iif(isnotnull(INATR),INATR,0),\r\n        PR=iif(isnotnull(PR),PR,0)\r\n| extend Location = tostring(location)\r\n| extend SKU = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend provisioningState = tostring(properties.provisioningState)\r\n| extend resourceGuid = tostring(properties.resourceGuid)\r\n| extend lbrules = tostring(properties.loadBalancingRules[0].name)\r\n| extend lbrulesId = tostring(properties.loadBalancingRules[0].id)\r\n| extend lbrulesprotocol = tostring(properties.loadBalancingRules[0].properties.protocol)\r\n| extend lbrulesfrontendPort = tostring(properties.loadBalancingRules[0].properties.frontendPort)\r\n| extend lbrulesbackendPort = tostring(properties.loadBalancingRules[0].properties.backendPort)\r\n| extend lbrulesenableFloatingIP = tostring(properties.loadBalancingRules[0].properties.enableFloatingIP)\r\n| extend lbrulesidleTimeoutInMinutes = tostring(properties.loadBalancingRules[0].properties.idleTimeoutInMinutes)\r\n| extend lbrulesenableTcpReset = tostring(properties.loadBalancingRules[0].properties.enableTcpReset)\r\n| extend lbrulesloadDistribution = tostring(properties.loadBalancingRules[0].properties.loadDistribution)\r\n| extend lbrulesfrontendIPConfiguration = tostring(properties.loadBalancingRules[0].properties.frontendIPConfiguration.id)\r\n| extend lbrulesbackendAddressPool = tostring(properties.loadBalancingRules[0].properties.backendAddressPool.id)\r\n| extend lbrulesprobe = tostring(properties.loadBalancingRules[0].properties.probe.id)\r\n| extend lbrulesprovisioningState = tostring(properties.loadBalancingRules[0].properties.provisioningState)\r\n| extend lbrulesetag = tostring(properties.loadBalancingRules[0].etag)\r\n| extend lbprobes = tostring(properties.probes[0].name)\r\n| extend lbprobesId = tostring(properties.probes[0].id)\r\n| extend lbprobesprotocol = tostring(properties.probes[0].properties.protocol)\r\n| extend lbprobesport = tostring(properties.probes[0].properties.port)\r\n| extend lbprobesallowBackendPortConflict = tostring(properties.loadBalancingRules[0].properties.allowBackendPortConflict)\r\n| extend lbprobesintervalInSeconds = tostring(properties.probes[0].properties.intervalInSeconds)\r\n| extend lbprobesnumberOfProbes = tostring(properties.probes[0].properties.numberOfProbes)\r\n| extend lbprobesrequestPath = tostring(properties.probes[0].properties.requestPath)\r\n| extend lbprobesprovisioningState = tostring(properties.probes[0].properties.provisioningState)\r\n| extend lbfrontendIPConfigurations = tostring(properties.frontendIPConfigurations[0].name)\r\n| extend lbfrontendIPConfigurationsId = tostring(properties.frontendIPConfigurations[0].id)\r\n| extend lbfrontendIPConfigurationsprivateIPAllocationMethod = tostring(properties.frontendIPConfigurations[0].properties.privateIPAllocationMethod)\r\n| extend lbfrontendIPConfigurationsprivateIPAddress = tostring(properties.frontendIPConfigurations[0].properties.privateIPAddress)\r\n| extend lbfrontendIPConfigurationspublicIPAddress = tostring(properties.frontendIPConfigurations[0].properties.publicIPAddress.id)\r\n| extend lbfrontendIPConfigurationssubnet = tostring(properties.frontendIPConfigurations[0].properties.subnet.id)\r\n| extend lbfrontendIPConfigurationsprovisioningState = tostring(properties.frontendIPConfigurations[0].properties.provisioningState)\r\n| extend lbbackendAddressPools = tostring(properties.backendAddressPools[0].name)\r\n| extend lbbackendAddressPoolsId = tostring(properties.backendAddressPools[0].id)\r\n| extend lbbackendAddressPoolsprovisioningState = tostring(properties.backendAddressPools[0].properties.provisioningState)\r\n| extend lboutboundRules = tostring(properties.outboundRules[0].name)\r\n| extend lboutboundRulesId = tostring(properties.outboundRules[0].id)\r\n| extend lboutboundRulesprotocol = tostring(properties.outboundRules[0].properties.protocol)\r\n| extend lboutboundRulesfrontendPort = tostring(properties.outboundRules[0].properties.frontendPort)\r\n| extend lboutboundRulesbackendPort = tostring(properties.outboundRules[0].properties.backendPort)\r\n| extend lboutboundRulesenableTcpReset = tostring(properties.outboundRules[0].properties.enableTcpReset)\r\n| extend lboutboundRulesidleTimeoutInMinutes = tostring(properties.outboundRules[0].properties.idleTimeoutInMinutes)\r\n| extend lboutboundRulesprovisioningState = tostring(properties.outboundRules[0].properties.provisioningState)\r\n| project ['Resource Group']=resourceGroup,['Load Balancer']=tostring(id),['SKU']=tostring(sku.name),['Backend Targets']=BE,['Frontend Targets']=FE,['Load Balancing Rules']=LB,\r\n['Outbound Rules']=OR,['Inbound NAT Rules']=INATR,['Inbound NAT Pools']=INAT,['Probes']=PR, ['Location']=Location, ['Tier']=Tier, ['Provisioning State']=provisioningState,\r\n['Resource GUID']=resourceGuid, ['Load Balancing Rule Name']=lbrules, ['Load Balancing Rule ID']=lbrulesId, ['Load Balancing Rule Protocol']=lbrulesprotocol,\r\n['Load Balancing Rule Frontend Port']=lbrulesfrontendPort, ['Load Balancing Rule Backend Port']=lbrulesbackendPort, ['Load Balancing Rule Enable Floating IP']=lbrulesenableFloatingIP,\r\n['Load Balancing Rule Idle Timeout In Minutes']=lbrulesidleTimeoutInMinutes, ['Load Balancing Rule Enable TCP Reset']=lbrulesenableTcpReset,\r\n['Load Balancing Rule Load Distribution']=lbrulesloadDistribution, ['Load Balancing Rule Frontend IP Configuration']=lbrulesfrontendIPConfiguration,\r\n['Load Balancing Rule Backend Address Pool']=lbrulesbackendAddressPool, ['Load Balancing Rule Probe']=lbrulesprobe, ['Load Balancing Rule Provisioning State']=lbrulesprovisioningState,\r\n['Load Balancing Rule ETag']=lbrulesetag, ['Load Balancing Probe Name']=lbprobes, ['Load Balancing Probe ID']=lbprobesId, ['Load Balancing Probe Protocol']=lbprobesprotocol,\r\n['Load Balancing Probe Port']=lbprobesport, ['Load Balancing Probe Allow Backend Port Conflict']=lbprobesallowBackendPortConflict,\r\n['Load Balancing Probe Interval In Seconds']=lbprobesintervalInSeconds, ['Load Balancing Probe Number Of Probes']=lbprobesnumberOfProbes,\r\n['Load Balancing Probe Request Path']=lbprobesrequestPath, ['Load Balancing Probe Provisioning State']=lbprobesprovisioningState,\r\n['Load Balancing Frontend IP Configuration Name']=lbfrontendIPConfigurations, ['Load Balancing Frontend IP Configuration ID']=lbfrontendIPConfigurationsId,\r\n['Load Balancing Frontend IP Configuration Private IP Allocation Method']=lbfrontendIPConfigurationsprivateIPAllocationMethod,\r\n['Load Balancing Frontend IP Configuration Private IP Address']=lbfrontendIPConfigurationsprivateIPAddress, ['Load Balancing Frontend IP Configuration Public IP Address']=lbfrontendIPConfigurationspublicIPAddress,\r\n['Load Balancing Frontend IP Configuration Subnet']=lbfrontendIPConfigurationssubnet, ['Load Balancing Frontend IP Configuration Provisioning State']=lbfrontendIPConfigurationsprovisioningState,\r\n['Load Balancing Backend Address Pool Name']=lbbackendAddressPools, ['Load Balancing Backend Address Pool ID']=lbbackendAddressPoolsId,\r\n['Load Balancing Backend Address Pool Provisioning State']=lbbackendAddressPoolsprovisioningState, ['Load Balancing Outbound Rule Name']=lboutboundRules,\r\n['Load Balancing Outbound Rule ID']=lboutboundRulesId, ['Load Balancing Outbound Rule Protocol']=lboutboundRulesprotocol, ['Load Balancing Outbound Rule Frontend Port']=lboutboundRulesfrontendPort,\r\n['Load Balancing Outbound Rule Backend Port']=lboutboundRulesbackendPort, ['Load Balancing Outbound Rule Enable TCP Reset']=lboutboundRulesenableTcpReset,\r\n['Load Balancing Outbound Rule Idle Timeout In Minutes']=lboutboundRulesidleTimeoutInMinutes, ['Load Balancing Outbound Rule Provisioning State']=lboutboundRulesprovisioningState ",
                          "size": 2,
                          "title": "Load Balancers",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "name",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.provisioningState",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Succeeded",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Failed",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Updating",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.provisioningState",
                                        "color": "green"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.backendAddressPools[*].backendIPConfigurations[*].properties.privateIPAddress",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.frontendIPConfigurations[*].properties.privateIPAddress",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.frontendIPConfigurations[*].properties.publicIPAddress.id",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.probe.id",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.probe.id",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.probe.id",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.backendAddressPool.id",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.id",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendPort",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.backendPort",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.idleTimeoutInMinutes",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.enableFloatingIP",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.provisioningState",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Succeeded",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Failed",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Updating",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.provisioningState",
                                        "color": "green"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.protocol",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Tcp",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Udp",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.protocol",
                                        "color": "green"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.loadDistribution",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Default",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "SourceIP",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "SourceIPProtocol",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.loadDistribution",
                                        "color": "green"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.probe.protocol",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Tcp",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Http",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Https",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.probe.protocol",
                                        "color": "green"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.probe.provisioningState",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Succeeded",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Failed",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Updating",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.probe.provisioningState",
                                        "color": "green"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.probe.protocol",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Tcp",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Http",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Https",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.probe.protocol",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.probe.provisioningState",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Succeeded",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Failed",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Updating",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.probe.provisioningState",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                }
                              },
                              {
                                "columnMatch": "SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Basic",
                                      "representation": "red",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Standard",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Premium",
                                      "representation": "blue",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "white",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "SKU",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "load Balancer",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "kubernetes",
                                      "representation": "blue",
                                      "text": "{0}{1}",
                                      "tooltip": "kubernetes",
                                      "showIcon": true,
                                      "iconAlignment": "center",
                                      "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "kubernetes-internal",
                                      "representation": "blue",
                                      "text": "{0}{1}",
                                      "tooltip": "kubernetes-internal",
                                      "showIcon": true,
                                      "iconAlignment": "center",
                                      "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}",
                                      "tooltip": "default",
                                      "showIcon": true,
                                      "iconAlignment": "center",
                                      "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "load Balancer",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.id",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "kubernetes",
                                      "representation": "blue",
                                      "text": "{0}{1}",
                                      "tooltip": "kubernetes",
                                      "showIcon": true,
                                      "iconAlignment": "center",
                                      "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "kubernetes-internal",
                                      "representation": "blue",
                                      "text": "{0}{1}",
                                      "tooltip": "kubernetes-internal",
                                      "showIcon": true,
                                      "iconAlignment": "center",
                                      "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "blue",
                                      "text": "{0}{1}",
                                      "tooltip": "default",
                                      "showIcon": true,
                                      "iconAlignment": "center",
                                      "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                    }
                                  ],
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.id",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.privateIPAddress",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.privateIPAddress",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.id",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.id",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPAddressVersion",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPAddressVersion",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPAllocationMethod",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPAllocationMethod",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.id",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.id",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPAddressVersion",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPAddressVersion",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPPrefix.id",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.publicIPPrefix.id",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              },
                              {
                                "columnMatch": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.ipConfiguration.id",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": {
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "kubernetes-internal",
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "kubernetes-internal",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "blue",
                                        "text": "{0}{1}",
                                        "tooltip": "default",
                                        "showIcon": true,
                                        "iconAlignment": "center",
                                        "iconImage": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/AzureKubernetesService/Workbooks/Images/Kubernetes.svg"
                                      }
                                    ]
                                  },
                                  "compositeBarSettings": {
                                    "labelText": "[[value]]",
                                    "columnSettings": [
                                      {
                                        "columnName": "properties.loadBalancingRules[*].properties.frontendIPConfiguration.publicIPAddress.ipConfiguration.id",
                                        "color": "green",
                                        "labelSettings": {
                                          "min": 0,
                                          "max": 100,
                                          "show": true,
                                          "position": "above"
                                        }
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "auto"
                                },
                                "filter": true
                              }
                            ]
                          },
                          "sortBy": []
                        },
                        "conditionalVisibility": {
                          "parameterName": "SubTab",
                          "comparison": "isEqualTo",
                          "value": "LB"
                        },
                        "name": "LBG"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "crossComponentResources": [
                                  "{Subscription}"
                                ],
                                "parameters": [
                                  {
                                    "id": "1b671b5a-78b3-4e5d-ad9d-346f3448e233",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "LoadBalancer",
                                    "label": "Load Balancer",
                                    "type": 5,
                                    "multiSelect": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"",
                                    "crossComponentResources": [
                                      "{Subscription}"
                                    ],
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 86400000
                                    },
                                    "defaultValue": "value::all",
                                    "queryType": 1,
                                    "resourceType": "microsoft.resourcegraph/resources"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                              },
                              "name": "parameters - 0"
                            },
                            {
                              "type": 10,
                              "content": {
                                "chartId": "workbook5604f72d-173c-4338-8d7b-883f31bddfe7",
                                "version": "MetricsItem/2.0",
                                "size": 2,
                                "chartType": 0,
                                "resourceType": "microsoft.network/loadbalancers",
                                "metricScope": 0,
                                "resourceParameter": "LoadBalancer",
                                "resourceIds": [
                                  "{LoadBalancer}"
                                ],
                                "timeContextFromParameter": "timerange",
                                "timeContext": {
                                  "durationMs": 7776000000
                                },
                                "metrics": [
                                  {
                                    "namespace": "microsoft.network/loadbalancers",
                                    "metric": "microsoft.network/loadbalancers--AllocatedSnatPorts",
                                    "aggregation": 3
                                  },
                                  {
                                    "namespace": "microsoft.network/loadbalancers",
                                    "metric": "microsoft.network/loadbalancers--SYNCount",
                                    "aggregation": 7
                                  },
                                  {
                                    "namespace": "microsoft.network/loadbalancers",
                                    "metric": "microsoft.network/loadbalancers--PacketCount",
                                    "aggregation": 7
                                  },
                                  {
                                    "namespace": "microsoft.network/loadbalancers",
                                    "metric": "microsoft.network/loadbalancers--DipAvailability",
                                    "aggregation": 4
                                  },
                                  {
                                    "namespace": "microsoft.network/loadbalancers",
                                    "metric": "microsoft.network/loadbalancers--ByteCount",
                                    "aggregation": 1
                                  },
                                  {
                                    "namespace": "microsoft.network/loadbalancers",
                                    "metric": "microsoft.network/loadbalancers--SnatConnectionCount",
                                    "aggregation": 1
                                  }
                                ],
                                "title": "Load Balancers",
                                "resourceLimit": 500,
                                "showRefreshButton": true,
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Subscription",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Name",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource"
                                      }
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--AllocatedSnatPorts Timeline",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--AllocatedSnatPorts",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": null
                                      }
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--SYNCount Timeline",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--SYNCount",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": null
                                      }
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--PacketCount Timeline",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--PacketCount",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": null
                                      }
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--DipAvailability Timeline",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--DipAvailability",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": null
                                      }
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--ByteCount Timeline",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--ByteCount",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 2,
                                        "options": null
                                      }
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--SnatConnectionCount Timeline",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "microsoft.network/loadbalancers--SnatConnectionCount",
                                      "formatter": 1,
                                      "numberFormat": {
                                        "unit": 0,
                                        "options": null
                                      }
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "labelSettings": [
                                    {
                                      "columnId": "microsoft.network/loadbalancers--AllocatedSnatPorts",
                                      "label": "Allocated SNAT Ports (Max)"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--AllocatedSnatPorts Timeline",
                                      "label": "Allocated SNAT Ports Timeline"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--SYNCount",
                                      "label": "SYN Count (Sum)"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--SYNCount Timeline",
                                      "label": "SYN Count Timeline"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--PacketCount",
                                      "label": "Packet Count (Max)"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--PacketCount Timeline",
                                      "label": "Packet Count Timeline"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--DipAvailability",
                                      "label": "Health Probe Status (Average)"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--DipAvailability Timeline",
                                      "label": "Health Probe Status Timeline"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--ByteCount",
                                      "label": "Byte Count (Sum)"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--ByteCount Timeline",
                                      "label": "Byte Count Timeline"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--SnatConnectionCount",
                                      "label": "SNAT Connection Count (Max)"
                                    },
                                    {
                                      "columnId": "microsoft.network/loadbalancers--SnatConnectionCount Timeline",
                                      "label": "SNAT Connection Count Timeline"
                                    }
                                  ]
                                },
                                "showExportToExcel": true
                              },
                              "name": "metric - 1"
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "SubTab",
                          "comparison": "isEqualTo",
                          "value": "LBHealth"
                        },
                        "name": "LBHealthG"
                      }
                    ]
                  },
                  "name": "grupo - 5"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "1b671b5a-78b3-4e5d-ad9d-346f3448e233",
                              "version": "KqlParameterItem/1.0",
                              "name": "LoadBalancer",
                              "label": "Load Balancer",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook5604f72d-173c-4338-8d7b-883f31bddfe7",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.network/loadbalancers",
                          "metricScope": 0,
                          "resourceParameter": "LoadBalancer",
                          "resourceIds": [
                            "{LoadBalancer}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.network/loadbalancers",
                              "metric": "microsoft.network/loadbalancers--AllocatedSnatPorts",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.network/loadbalancers",
                              "metric": "microsoft.network/loadbalancers--SYNCount",
                              "aggregation": 7
                            },
                            {
                              "namespace": "microsoft.network/loadbalancers",
                              "metric": "microsoft.network/loadbalancers--PacketCount",
                              "aggregation": 7
                            },
                            {
                              "namespace": "microsoft.network/loadbalancers",
                              "metric": "microsoft.network/loadbalancers--DipAvailability",
                              "aggregation": 4
                            },
                            {
                              "namespace": "microsoft.network/loadbalancers",
                              "metric": "microsoft.network/loadbalancers--ByteCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/loadbalancers",
                              "metric": "microsoft.network/loadbalancers--SnatConnectionCount",
                              "aggregation": 1
                            }
                          ],
                          "title": "Load Balancers",
                          "resourceLimit": 500,
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--AllocatedSnatPorts Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--AllocatedSnatPorts",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--SYNCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--SYNCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--PacketCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--PacketCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--DipAvailability Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--DipAvailability",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--ByteCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--ByteCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--SnatConnectionCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/loadbalancers--SnatConnectionCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.network/loadbalancers--AllocatedSnatPorts",
                                "label": "Allocated SNAT Ports (Max)"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--AllocatedSnatPorts Timeline",
                                "label": "Allocated SNAT Ports Timeline"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--SYNCount",
                                "label": "SYN Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--SYNCount Timeline",
                                "label": "SYN Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--PacketCount",
                                "label": "Packet Count (Max)"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--PacketCount Timeline",
                                "label": "Packet Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--DipAvailability",
                                "label": "Health Probe Status (Average)"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--DipAvailability Timeline",
                                "label": "Health Probe Status Timeline"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--ByteCount",
                                "label": "Byte Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--ByteCount Timeline",
                                "label": "Byte Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--SnatConnectionCount",
                                "label": "SNAT Connection Count (Max)"
                              },
                              {
                                "columnId": "microsoft.network/loadbalancers--SnatConnectionCount Timeline",
                                "label": "SNAT Connection Count Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "LBHealth"
                  },
                  "name": "LBHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "LoadBalancer"
            },
            "name": "LBg"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Traffic Manager\r\n<BR>\r\nAzure Traffic Manager is a DNS-based traffic load balancer. This service allows you to distribute traffic to your public facing applications across the global Azure regions. Traffic Manager also provides your public endpoints with high availability and quick responsiveness.\r\n<BR>\r\nMore details: [What is Traffic Manager?](https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/trafficmanagerprofiles\"\r\n| project ['Resource Group']=resourceGroup,['Traffic Manager']=id,['Status']=properties.profileStatus,['DNS Name']=properties.dnsConfig.fqdn,['Routing Method']=properties.trafficRoutingMethod,['Monitor Status']=properties.monitorConfig.profileMonitorStatus",
                    "size": 2,
                    "title": "Traffic Manager",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "Enabled",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Monitor Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Inactive",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "TrafficManager"
            },
            "name": "TrafficManagerG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Azure Firewall\r\n<BR>\r\nAzure Firewall is a managed, cloud-based network security service that protects your Azure Virtual Network resources. It's a fully stateful firewall as a service with built-in high availability and unrestricted cloud scalability.\r\n<BR>\r\nMore details: [What is Azure Firewall?](https://docs.microsoft.com/en-us/azure/firewall/overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/azurefirewalls\"\r\n| mv-expand IP=properties.ipConfigurations\r\n| extend ppp = split(IP.properties.subnet.id,'/'),\r\n        iii = split(IP.properties.publicIPAddress.id,'/')\r\n| project ['Resource Group']=resourceGroup,['Firewall']=id,['SKU']=properties.sku.name,['Zones']=zones,['Public IP']=iii[8],['Threat Intel Mode']=properties.threatIntelMode,\r\n['Virtual Network']=ppp[8],['Private IP']=IP.properties.privateIPAddress",
                    "size": 2,
                    "title": "Azure Firewall",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Threat Intel Mode",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Alert",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "Firewall"
            },
            "name": "Firewall"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Front Doors\r\n<BR>\r\nAzure Front Door is a global, scalable entry-point that uses the Microsoft global edge network to create fast, secure, and widely scalable web applications. With Front Door, you can transform your global consumer and enterprise applications into robust, high-performing personalized modern applications with contents that reach a global audience through Azure.\r\n<BR>\r\nMore details: [What is Azure Front Door?](https://docs.microsoft.com/en-us/azure/frontdoor/front-door-overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "a456bc9f-ed8b-4928-9b90-1e7fd647ae09",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Front Doors",
                        "subTarget": "FrontDoor",
                        "style": "link",
                        "icon": "Wrench"
                      },
                      {
                        "id": "9a195430-83ae-49a3-93ac-d6f9749cfc0b",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Front Door Health",
                        "subTarget": "FrontDoorHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br/>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.network/frontdoors\"\r\n| mv-expand FE = properties.frontendEndpoints,\r\n            BE = properties.backendPools,\r\n            HE = properties.healthProbeSettings,\r\n            LB = properties.loadBalancingSettings,\r\n            RR = properties.routingRules\r\n| extend WAF = split(FE.properties.webApplicationFirewallPolicyLink.id,'/')\r\n| project ['Resource Group']=resourceGroup,['Front Doors']=id,['Friendly Name']=properties.friendlyName,['cName']=properties.cName,['State']=properties.enabledState,['Frontend']=FE.name,['Backend']=BE.name,['Health Probe']=HE.name,['Load Balacing']=LB.name,['Routing Rules']=RR.name,['Web Application Firewall']=WAF[8]",
                          "size": 2,
                          "title": "Front Doors",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Web Application Firewall",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Disabled"
                                }
                              }
                            ]
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "FrontDoor"
                  },
                  "name": "FrontDoorG"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "3c62c57a-e438-48b7-b5f7-dc37fa7f6669",
                              "version": "KqlParameterItem/1.0",
                              "name": "FrontDoor",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.network/frontdoors\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbook632ebc2f-71a8-4756-99f0-6fe30efae9ce",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.network/frontdoors",
                          "metricScope": 0,
                          "resourceParameter": "FrontDoor",
                          "resourceIds": [
                            "{FrontDoor}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 7776000000
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.network/frontdoors",
                              "metric": "microsoft.network/frontdoors--RequestCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/frontdoors",
                              "metric": "microsoft.network/frontdoors--BillableResponseSize",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/frontdoors",
                              "metric": "microsoft.network/frontdoors--BackendRequestCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/frontdoors",
                              "metric": "microsoft.network/frontdoors--WebApplicationFirewallRequestCount",
                              "aggregation": 3
                            },
                            {
                              "namespace": "microsoft.network/frontdoors",
                              "metric": "microsoft.network/frontdoors--BackendHealthPercentage",
                              "aggregation": 3
                            }
                          ],
                          "title": "Front Doors",
                          "showRefreshButton": true,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Subscription",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--RequestCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--RequestCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--BillableResponseSize",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--BillableResponseSize Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--BackendRequestCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--BackendRequestCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--WebApplicationFirewallRequestCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--WebApplicationFirewallRequestCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--BackendHealthPercentage",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 100,
                                  "palette": "redGreen"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/frontdoors--BackendHealthPercentage Timeline",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.network/frontdoors--RequestCount",
                                "label": "Request Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--RequestCount Timeline",
                                "label": "Request Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--BillableResponseSize",
                                "label": "Billable Response Size (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--BillableResponseSize Timeline",
                                "label": "Billable Response Size Timeline"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--BackendRequestCount",
                                "label": "Backend Request Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--BackendRequestCount Timeline",
                                "label": "Backend Request Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--WebApplicationFirewallRequestCount",
                                "label": "Web Application Firewall Request Count (Max)"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--WebApplicationFirewallRequestCount Timeline",
                                "label": "Web Application Firewall Request Count (Max) Timeline"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--BackendHealthPercentage",
                                "label": "Backend Health Percentage (Max)"
                              },
                              {
                                "columnId": "microsoft.network/frontdoors--BackendHealthPercentage Timeline",
                                "label": "Backend Health Percentage Timeline"
                              }
                            ]
                          },
                          "showExportToExcel": true
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "FrontDoorHealth"
                  },
                  "name": "FrontDoorHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "FrontDoor"
            },
            "name": "FrontDoorG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Application Gateway\r\n<BR>\r\nAzure Application Gateway is a web traffic load balancer that enables you to manage traffic to your web applications. Traditional load balancers operate at the transport layer (OSI layer 4 - TCP and UDP) and route traffic based on source IP address and port, to a destination IP address and port.\r\n<BR>\r\nMore details: [What is Azure Application Gateway?](https://docs.microsoft.com/en-us/azure/application-gateway/overview)\r\n<BR>"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/applicationgateways\"\r\n| mv-expand BE = properties.backendAddressPools,\r\n            FE = properties.frontendIPConfigurations,\r\n            GT = properties.gatewayIPConfigurations,\r\n            HT = properties.httpListeners,\r\n            RR = properties.RequestRoutingRules\r\n| extend WAF = iif(properties.webApplicationFirewallConfiguration.enabled == 'true','true','false')\r\n| project ['Resource Group']=resourceGroup,['Name']=id,['Location']=location,\r\n['Zones']=zones,['SKU']=properties.sku.name,['State']=properties.operationalState,\r\n['WAF Enabled']=WAF,\r\n['Minimum SSL Protocol']=properties.sslPolicy.minProtocolVersion,\r\n['Backend']=BE.name,\r\n['Frontend']=FE.name,\r\n['Gateways']=GT.name,\r\n['HTTP Listeners']=HT.name,\r\n['Request Routing Rules']=RR.Name,\r\n['Current Instances']=properties.sku.capacity,\r\n['Autoscale Min Capacity']=properties.autoscaleConfiguration.minCapacity,\r\n['Autoscale Max Capacity']=properties.autoscaleConfiguration.maxCapacity",
                    "size": 2,
                    "title": "Application Gateway",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "Running",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WAF Enabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "false"
                          }
                        },
                        {
                          "columnMatch": "Minimum SSL Protocol",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "Default"
                          }
                        },
                        {
                          "columnMatch": "Autoscale Min Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "Autoscale Disabled"
                          }
                        },
                        {
                          "columnMatch": "Autoscale Max Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "Autoscale Disabled"
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "AppGateway"
            },
            "name": "AppGatewayG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Public IP addresses\r\n<br/>\r\nPublic IP addresses allow Internet resources to communicate inbound to Azure resources. Public IP addresses enable Azure resources to communicate to Internet and public-facing Azure services. The address is dedicated to the resource, until it's unassigned.\r\n\r\nEven when you set the allocation method to static, you cannot specify the actual IP address assigned to the public IP address resource. Azure assigns the IP address from a pool of available IP addresses in the Azure location the resource is created in.\r\n\r\n<br/>"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {
                        "id": "1c124d50-bdc5-40db-a520-0e78fac4085a",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Public IP",
                        "subTarget": "PIP",
                        "style": "link",
                        "icon": "Tools"
                      },
                      {
                        "id": "d454023f-0e78-4abf-9775-c390d3f75355",
                        "cellValue": "SubTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Public IP Health",
                        "subTarget": "PIPHealth",
                        "style": "link",
                        "icon": "Diagnostics"
                      }
                    ]
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br/>"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type == \"microsoft.network/publicipaddresses\" and isnull(properties.ipConfiguration.id)\r\n| extend Res = split(properties.ipConfiguration.id,'/')\r\n| project ['Resource Group']=resourceGroup,\r\n['Public IP']=id,\r\n['Location']=location,\r\n['SKU']=sku.name,\r\n['Zones']=zones,\r\n['Allocation Method']=properties.publicIPAllocationMethod,\r\n['IP Address']=properties.ipAddress,\r\n['Resource']=Res[8]",
                          "size": 2,
                          "title": "Public IP",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Resource",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "is Empty",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  },
                                  "emptyValCustomText": "Not Used"
                                }
                              },
                              {
                                "columnMatch": "SKU",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "!=",
                                      "thresholdValue": "Standard",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "PIP"
                  },
                  "name": "PIP"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "parameters": [
                            {
                              "id": "04e37ca4-4388-49d9-acd4-b4f53b05c908",
                              "version": "KqlParameterItem/1.0",
                              "name": "PublicIP",
                              "label": "Public IP",
                              "type": 5,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "resources\r\n| where type == \"microsoft.network/publicipaddresses\"",
                              "crossComponentResources": [
                                "{Subscription}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "defaultValue": "value::all",
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 10,
                        "content": {
                          "chartId": "workbookcb8afddb-6494-4dd5-9b61-0b50ca64d6b1",
                          "version": "MetricsItem/2.0",
                          "size": 2,
                          "chartType": 0,
                          "resourceType": "microsoft.network/publicipaddresses",
                          "metricScope": 0,
                          "resourceParameter": "PublicIP",
                          "resourceIds": [
                            "{PublicIP}"
                          ],
                          "timeContextFromParameter": "timerange",
                          "timeContext": {
                            "durationMs": 0
                          },
                          "metrics": [
                            {
                              "namespace": "microsoft.network/publicipaddresses",
                              "metric": "microsoft.network/publicipaddresses--ByteCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/publicipaddresses",
                              "metric": "microsoft.network/publicipaddresses--PacketCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/publicipaddresses",
                              "metric": "microsoft.network/publicipaddresses--SynCount",
                              "aggregation": 1
                            },
                            {
                              "namespace": "microsoft.network/publicipaddresses",
                              "metric": "microsoft.network/publicipaddresses--PacketsDroppedDDoS",
                              "aggregation": 1
                            }
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Name",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true,
                                  "customColumnWidthSetting": "25%"
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--ByteCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 2,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--ByteCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--PacketCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--PacketCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--SynCount",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--SynCount Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--PacketsDroppedDDoS",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 31,
                                  "options": null
                                }
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--PacketsDroppedDDoS Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--IfUnderDDoSAttack Timeline",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "microsoft.network/publicipaddresses--IfUnderDDoSAttack",
                                "formatter": 1,
                                "numberFormat": {
                                  "unit": 0,
                                  "options": null
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "labelSettings": [
                              {
                                "columnId": "microsoft.network/publicipaddresses--ByteCount",
                                "label": "Byte Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--ByteCount Timeline",
                                "label": "Byte Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--PacketCount",
                                "label": "Packet Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--PacketCount Timeline",
                                "label": "Packet Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--SynCount",
                                "label": "SYN Count (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--SynCount Timeline",
                                "label": "SYN Count Timeline"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--PacketsDroppedDDoS",
                                "label": "Inbound packets dropped DDoS (Sum)"
                              },
                              {
                                "columnId": "microsoft.network/publicipaddresses--PacketsDroppedDDoS Timeline",
                                "label": "Inbound packets dropped DDoS Timeline"
                              }
                            ]
                          }
                        },
                        "name": "metric - 1"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "SubTab",
                    "comparison": "isEqualTo",
                    "value": "PIPHealth"
                  },
                  "name": "PIPHealthG"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "PublicIP"
            },
            "name": "PublicIP"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "TabMain",
        "comparison": "isEqualTo",
        "value": "Networking"
      },
      "name": "NetworkingG"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Data Factory\r\n<br/>\r\nIn the world of big data, raw, unorganized data is often stored in relational, non-relational, and other storage systems. However, on its own, raw data doesn't have the proper context or meaning to provide meaningful insights to analysts, data scientists, or business decision makers.\r\n\r\nBig data requires a service that can orchestrate and operationalize processes to refine these enormous stores of raw data into actionable business insights. Azure Data Factory is a managed cloud service that's built for these complex hybrid extract-transform-load (ETL), extract-load-transform (ELT), and data integration projects.\r\n<br/>\r\n"
            },
            "name": "text - 0"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "toolbar",
              "links": [
                {
                  "id": "b4316c56-1779-4705-b5da-ca957f591541",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Data Factory",
                  "subTarget": "DataFactory",
                  "style": "link",
                  "icon": "Tools"
                },
                {
                  "id": "3cd8128d-1b69-4c7f-a1b8-5c2137b8ce23",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Data Factory Health",
                  "subTarget": "DataFactoryHealth",
                  "style": "link",
                  "icon": "Diagnostics"
                }
              ]
            },
            "name": "links - 8",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "<br/>"
            },
            "name": "text - 3"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.datafactory/factories\"\r\n| where properties.publicNetworkAccess == 'Enabled' or properties.encryption != 'true'\r\n| extend [\"Encryption\"]=iif(properties.encryption == 'true','true','false')\r\n| project [\"Resource Group\"]=resourceGroup,\r\n[\"Datafactory Name\"]=id,\r\n[\"Encryption\"],\r\n[\"Public Network Access\"]=properties.publicNetworkAccess,\r\n[\"Hostname\"]=properties.repoConfiguration.hostName,\r\n[\"Type\"]=properties.repoConfiguration.type,\r\n[\"Account Name\"]=properties.repoConfiguration.accountName,\r\n[\"Branch\"]=properties.repoConfiguration.collaborationBranch,\r\n[\"Root Folder\"]=properties.repoConfiguration.rootFolder,\r\n[\"Repository\"]=properties.repoConfiguration.repositoryName",
                    "size": 2,
                    "title": "Data Factory",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Encryption",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Public Network Access",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "is Empty",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            },
                            "emptyValCustomText": "Enabled"
                          }
                        }
                      ],
                      "rowLimit": 500
                    }
                  },
                  "name": "query - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "DataFactory"
            },
            "name": "DataFactoryG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "parameters": [
                      {
                        "id": "5277bf03-ae43-4e42-b85b-0010b1efa92f",
                        "version": "KqlParameterItem/1.0",
                        "name": "DataFactory",
                        "label": "Data Factory",
                        "type": 5,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.datafactory/factories\"",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookc345edee-50bc-449b-a986-ddadf8db2c5e",
                    "version": "MetricsItem/2.0",
                    "size": 2,
                    "chartType": 0,
                    "resourceType": "microsoft.datafactory/factories",
                    "metricScope": 0,
                    "resourceParameter": "DataFactory",
                    "resourceIds": [
                      "{DataFactory}"
                    ],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.datafactory/factories",
                        "metric": "microsoft.datafactory/factories--TriggerSucceededRuns",
                        "aggregation": 7
                      },
                      {
                        "namespace": "microsoft.datafactory/factories",
                        "metric": "microsoft.datafactory/factories--PipelineCancelledRuns",
                        "aggregation": 7
                      },
                      {
                        "namespace": "microsoft.datafactory/factories",
                        "metric": "microsoft.datafactory/factories--ActivityFailedRuns",
                        "aggregation": 1
                      },
                      {
                        "namespace": "microsoft.datafactory/factories",
                        "metric": "microsoft.datafactory/factories--IntegrationRuntimeCpuPercentage",
                        "aggregation": 3
                      },
                      {
                        "namespace": "microsoft.datafactory/factories",
                        "metric": "microsoft.datafactory/factories--IntegrationRuntimeAvailableMemory",
                        "aggregation": 4
                      }
                    ],
                    "title": "Data Factory",
                    "showRefreshButton": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--TriggerSucceededRuns",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--TriggerSucceededRuns Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--PipelineCancelledRuns",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--PipelineCancelledRuns Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--ActivityFailedRuns",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 15,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--ActivityFailedRuns Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--IntegrationRuntimeCpuPercentage",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 1,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--IntegrationRuntimeCpuPercentage Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--IntegrationRuntimeAvailableMemory",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 2,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.datafactory/factories--IntegrationRuntimeAvailableMemory Timeline",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "labelSettings": [
                        {
                          "columnId": "microsoft.datafactory/factories--TriggerSucceededRuns",
                          "label": "Succeeded trigger runs metrics (Count)"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--TriggerSucceededRuns Timeline",
                          "label": "Succeeded trigger runs metrics Timeline"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--PipelineCancelledRuns",
                          "label": "Cancelled pipeline runs metrics (Count)"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--PipelineCancelledRuns Timeline",
                          "label": "Cancelled pipeline runs metrics Timeline"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--ActivityFailedRuns",
                          "label": "Failed activity runs metrics (Sum)"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--ActivityFailedRuns Timeline",
                          "label": "Failed activity runs metrics Timeline"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--IntegrationRuntimeCpuPercentage",
                          "label": "Integration runtime CPU utilization (Max)"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--IntegrationRuntimeCpuPercentage Timeline",
                          "label": "Integration runtime CPU utilization Timeline"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--IntegrationRuntimeAvailableMemory",
                          "label": "Integration runtime available memory (Average)"
                        },
                        {
                          "columnId": "microsoft.datafactory/factories--IntegrationRuntimeAvailableMemory Timeline",
                          "label": "Integration runtime available memory Timeline"
                        }
                      ]
                    },
                    "showExportToExcel": true
                  },
                  "name": "metric - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "DataFactoryHealth"
            },
            "name": "DataFactoryHealthG"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "DataFactory"
      },
      "name": "DataFactoryG"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## App Services\r\n<BR>\r\nAzure App Service is an HTTP-based service for hosting web applications, REST APIs, and mobile back ends. You can develop in your favorite language, be it .NET, .NET Core, Java, Ruby, Node.js, PHP, or Python. Applications run and scale with ease on both Windows and Linux-based environments.\r\n<BR>\r\nMore details: [App Service overview](https://docs.microsoft.com/en-us/azure/app-service/overview)\r\n<BR>"
            },
            "name": "text - 2"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "toolbar",
              "links": [
                {
                  "id": "270264b6-6d4c-4429-986b-6eaea0be68af",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "App Services",
                  "subTarget": "AppService",
                  "postText": "Proactive Settings",
                  "style": "link",
                  "icon": "Tools"
                },
                {
                  "id": "216f8b89-cb6e-45d1-acf1-9ef1fb556ff2",
                  "cellValue": "SubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "App Services Health",
                  "subTarget": "AppServiceHealth",
                  "postText": "Reactive Analysis",
                  "style": "link",
                  "icon": "Diagnostics"
                }
              ]
            },
            "name": "links - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 6"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.web/sites\"\r\n| summarize count(id) by tostring(properties.sku)",
                    "size": 1,
                    "title": "App Services by SKU",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "50",
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.web/sites\"\r\n| summarize count(id) by location",
                    "size": 1,
                    "title": "App Services by Location",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "location",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_id",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.web/serverfarms\"\r\n| summarize count(id) by location",
                    "size": 1,
                    "title": "App Service Plan by Location",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "location",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_id",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.web/serverfarms\"\r\n| summarize count(id) by tostring(sku.tier)",
                    "size": 1,
                    "title": "App Service Plan by SKU ",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "barchart"
                  },
                  "customWidth": "50",
                  "name": "query - 6"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.web/sites\"\r\n| where properties.sku == 'Free' or properties.state != 'Running' or properties.httpsOnly != 'true'\r\n| extend ['App Enabled']= iif(properties.enabled == 'true','True','False'),\r\n        ['Client Cert Enabled']= iif(properties.clientCertEnabled == 'true','True','False'),\r\n        ['https Only']= iif(properties.httpsOnly == 'true','True','False'),\r\n        PID = toupper(properties.serverFarmId)\r\n    | join kind=leftouter ( \r\n            resources\r\n            | where type == \"microsoft.web/serverfarms\"\r\n            | extend ['Tier']=strcat(sku.tier,' (',sku.name,': ',properties.currentNumberOfWorkers,')'),\r\n                     SID = toupper(id) ) on $left.PID == $right.SID\r\n| where properties.sku == 'Free' or properties.sku == 'Basic' or properties.httpsOnly == 'false'\r\n| project ['Resource Group']=resourceGroup1,\r\n          ['App Service Plan']=id1,\r\n          ['App Service']=id,\r\n          //['Kind']=kind,\r\n          ['Location']=location,\r\n          ['Tier'],\r\n          ['App Enabled'],\r\n          ['App State']=properties.state,\r\n          ['SKU']=properties.sku,\r\n          ['https Only'],\r\n          ['Compute Mode']=properties1.computeMode,\r\n          ['Instances Size']=properties1.currentWorkerSize,\r\n          ['Current Instances']=properties1.currentNumberOfWorkers,\r\n          ['Max Instances']=properties1.maximumNumberOfWorkers,\r\n          ['App Types']=properties1.kind,\r\n          ['Apps']=properties1.numberOfSites,\r\n          ['Zone Redundant']=properties1.zoneRedundant,\r\n          ['Client Cert Enabled'],\r\n          ['Client Cert Mode']=properties.clientCertMode,\r\n          ['Content Availability State']=properties.contentAvailabilityState,\r\n          ['Runtime Availability State']=properties.runtimeAvailabilityState",
                    "size": 2,
                    "title": "App Services",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Free",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Basic",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "App Enabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "False",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "True",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "App State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Stopped",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AdminDisabled",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SKU",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Free",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Compute Mode",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Shared",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Zone Redundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Client Cert Enabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "False",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Client Cert Mode",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "!=",
                                "thresholdValue": "Required",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "https Only",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "False",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "name": "query - 3"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "AppService"
            },
            "name": "AppServiceG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<br>"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "parameters": [
                      {
                        "id": "a53c6a70-751a-4ce3-a41c-8c0110f84d83",
                        "version": "KqlParameterItem/1.0",
                        "name": "AppService",
                        "label": "App Service",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| where type == \"microsoft.web/sites\"\r\n| project id",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 1"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbooka283e0f1-ff16-47e7-ba4b-fe46c6bafc05",
                    "version": "MetricsItem/2.0",
                    "size": 2,
                    "chartType": 0,
                    "resourceType": "microsoft.web/sites",
                    "metricScope": 0,
                    "resourceParameter": "AppService",
                    "resourceIds": [
                      "{AppService}"
                    ],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {
                      "durationMs": 900000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--CpuTime",
                        "aggregation": 3
                      },
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--AverageMemoryWorkingSet",
                        "aggregation": 3
                      },
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--Threads",
                        "aggregation": 3
                      },
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--Handles",
                        "aggregation": 3
                      },
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--Http5xx",
                        "aggregation": 1
                      },
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--HttpResponseTime",
                        "aggregation": 3
                      },
                      {
                        "namespace": "microsoft.web/sites",
                        "metric": "microsoft.web/sites--Requests",
                        "aggregation": 3
                      }
                    ],
                    "title": "App Service Health",
                    "resourceLimit": 1000,
                    "showRefreshButton": true,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--CpuTime",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 2,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--CpuTime Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--AverageMemoryWorkingSet",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 1000000000,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--AverageMemoryWorkingSet Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Threads",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "350",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Threads Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Handles",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "500",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Handles Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Http5xx",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<=",
                                "thresholdValue": "50",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "51",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Http5xx Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--HttpResponseTime",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--HttpResponseTime Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Requests",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        },
                        {
                          "columnMatch": "microsoft.web/sites--Requests Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--HealthCheckStatus Timeline",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "microsoft.web/sites--HealthCheckStatus",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": null
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "microsoft.web/sites--CpuTime",
                          "label": "CPU Time (Sum)"
                        },
                        {
                          "columnId": "microsoft.web/sites--CpuTime Timeline",
                          "label": "CPU Time Timeline"
                        },
                        {
                          "columnId": "microsoft.web/sites--AverageMemoryWorkingSet",
                          "label": "Average memory working set (Average)"
                        },
                        {
                          "columnId": "microsoft.web/sites--AverageMemoryWorkingSet Timeline",
                          "label": "Average memory working set Timeline"
                        },
                        {
                          "columnId": "microsoft.web/sites--Threads",
                          "label": "Thread Count (Sum)"
                        },
                        {
                          "columnId": "microsoft.web/sites--Threads Timeline",
                          "label": "Thread Count Timeline"
                        },
                        {
                          "columnId": "microsoft.web/sites--Handles",
                          "label": "Handle Count (Sum)"
                        },
                        {
                          "columnId": "microsoft.web/sites--Handles Timeline",
                          "label": "Handle Count Timeline"
                        },
                        {
                          "columnId": "microsoft.web/sites--Http5xx",
                          "label": "Http Server Errors (Sum)"
                        },
                        {
                          "columnId": "microsoft.web/sites--Http5xx Timeline",
                          "label": "Http Server Errors Timeline"
                        },
                        {
                          "columnId": "microsoft.web/sites--HttpResponseTime",
                          "label": "Response Time (Max)"
                        },
                        {
                          "columnId": "microsoft.web/sites--HttpResponseTime Timeline",
                          "label": "Response Time Timeline"
                        },
                        {
                          "columnId": "microsoft.web/sites--Requests",
                          "label": "Requests (Max)"
                        },
                        {
                          "columnId": "microsoft.web/sites--Requests Timeline",
                          "label": "Requests Timeline"
                        }
                      ]
                    },
                    "showExportToExcel": true
                  },
                  "name": "metric - 1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SubTab",
              "comparison": "isEqualTo",
              "value": "AppServiceHealth"
            },
            "name": "AppServiceHealthG"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "AppService"
      },
      "name": "AppService"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "toolbar",
              "links": [
                {
                  "id": "d80ce600-b288-4267-93cb-a01223365415",
                  "cellValue": "TabMain",
                  "linkTarget": "parameter",
                  "linkLabel": "Microsoft Defender ",
                  "subTarget": "Defender",
                  "postText": "Microsoft Defender for cloud",
                  "style": "link",
                  "icon": "Defense Evasion"
                },
                {
                  "id": "f8592a17-308d-4e87-84ef-db28bf73278c",
                  "cellValue": "TabMain",
                  "linkTarget": "parameter",
                  "linkLabel": "Microsoft Sentinal",
                  "subTarget": "Sentinal",
                  "postText": "Microsoft Sentinal",
                  "style": "link",
                  "icon": "Pre attack"
                }
              ]
            },
            "name": "links - 3",
            "styleSettings": {
              "margin": "10px",
              "padding": "10px",
              "showBorder": true
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "69bf1231-0ff5-42ae-bf9a-2e62b0a210cb",
                  "cellValue": "TabMain",
                  "linkTarget": "parameter",
                  "linkLabel": " Defender - Eventos ",
                  "subTarget": "Eventos",
                  "postText": " Defender - Eventos ",
                  "style": "link",
                  "icon": "Persistence"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TabMain",
              "comparison": "isEqualTo",
              "value": "Defender"
            },
            "name": "submain-security",
            "styleSettings": {
              "margin": "10px",
              "padding": "10px",
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Active security recommendations per subscription and cloud environment\r\n\r\nThis workbook leverages *First Evaluation Date* and *Status Change Date* time indicators to show active security recommendations created by Defender for Cloud, including the active time in days. It allows to filter for subscriptions, recommendation severity, and cloud environment, to narrow down results to the scope relevant for your examination.\r\n\r\nTo learn more about time indicators in Defender for Cloud, read [this article](https://techcommunity.microsoft.com/t5/microsoft-defender-for-cloud/time-indicators-in-microsoft-defender-for-cloud-assessments/ba-p/2343612)."
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "9d81f11a-6c64-4748-b477-dfe5e417ec18",
                        "version": "KqlParameterItem/1.0",
                        "name": "severity",
                        "label": "Severity",
                        "type": 2,
                        "description": "Select the recommendation severity",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "jsonData": "[\n { \"value\": \"High\", \"label\": \"High\"},\n { \"value\": \"Medium\", \"label\": \"Medium\"},\n { \"value\": \"Low\", \"label\": \"Low\"}\n]",
                        "defaultValue": "value::all",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "a34fbec0-b40a-4cf2-9124-430bb6d6bd76",
                        "version": "KqlParameterItem/1.0",
                        "name": "environment",
                        "label": "Cloud environment",
                        "type": 2,
                        "description": "Select the cloud environment",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "securityresources\n| where type =~ \"microsoft.security/assessments\" and properties.status.code =~ \"Unhealthy\"\n| project environment = tostring(properties.resourceDetails.Source)\n| distinct environment",
                        "crossComponentResources": [
                          "{subscriptions}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "fb25118f-8331-4368-b6ab-a2393d748e08",
                        "version": "KqlParameterItem/1.0",
                        "name": "info",
                        "label": "Additional information",
                        "type": 10,
                        "description": "Show additional information for this workbook",
                        "isRequired": true,
                        "value": "On",
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\n { \"value\": \"On\", \"label\": \"On\"},\n { \"value\": \"Off\", \"label\": \"Off\"}\n]"
                      }
                    ],
                    "style": "above",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## How to use the parameters\r\n\r\n|Parameter|Description|\r\n|---|---|---|\r\n| Subscription(s) | Select one, several, or all subscriptions in your environment. The workbook will use this filter to display security recommendations according to the selected scope. |\r\n| Severity | Security recommendations are divided into low, medium, and high severity. Select any combination of severities you want to display in this workbook. |\r\n| Environment | Defender for Cloud offers Cloud Security Posture Management (CSPM) for Azure, AWS, and GCP. With this filter, you can select any combination of cloud platforms to show active (unhealthy) recommendations for. |\r\n| Additional information | Shows additional information about this workbook. |\r\n\r\n## Release notes\r\n\r\n|Version|Description|Date|\r\n|---|---|---|\r\n|v1.0|initial release|02/13/2023|\r\n|v1.1|updating the cloud environment filter to only offer existing environments for selection.|03/16/2023|"
                  },
                  "conditionalVisibility": {
                    "parameterName": "info",
                    "comparison": "isEqualTo",
                    "value": "On"
                  },
                  "name": "releaseNotes"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "securityresources\n| where type =~ \"microsoft.security/assessments\" and properties.status.code =~ \"Unhealthy\"\n| extend firstEvaluationDate = todatetime(properties.status.firstEvaluationDate), statusChangeDate = todatetime(properties.status.statusChangeDate), severityFilter = tostring(\"{severity}\"), severity = tostring(properties.metadata.severity), environmentFilter = tostring(\"{environment}\")\n| project subscriptionId, resourceGroup,\n    resourceId = properties.resourceDetails.Id,\n    source = tostring(properties.resourceDetails.Source),\n    displayName = properties.displayName, \n    statusCode = properties.status.code,\n    severity, severityFilter, environmentFilter,\n    statusChangeDate, firstEvaluationDate,\n    overduePeriod = datetime_diff(\"day\", now(), statusChangeDate)\n| where severityFilter has severity and environmentFilter has source",
                          "size": 1,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{subscriptions}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Group",
                                "formatter": 1
                              }
                            ],
                            "rowLimit": 10000
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "blank",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "activeRecommendations-query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "securityresources\n| where type =~ \"microsoft.security/assessments\"\n| extend severityFilter = tostring(\"{severity}\"), severity = tostring(properties.metadata.severity), environmentFilter = tostring(\"{environment}\")\n| project severity, severityFilter, id, statusCode = properties.status.code, environment = tostring(properties.resourceDetails.Source), environmentFilter\n| where severityFilter has severity and environmentFilter has environment\n| summarize recommendations = dcount(id) by tostring(statusCode)",
                          "size": 3,
                          "title": "Total amount of recommendations by status",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{subscriptions}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "NotApplicable",
                                "label": "Not applicable",
                                "color": "gray"
                              },
                              {
                                "seriesName": "Unhealthy",
                                "label": "",
                                "color": "redBright"
                              },
                              {
                                "seriesName": "Healthy",
                                "color": "green"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "total recommendations - query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "securityresources\n| where type =~ \"microsoft.security/assessments\" and properties.status.code =~ \"Unhealthy\"\n| extend severityFilter = tostring(\"{severity}\"), severity = tostring(properties.metadata.severity), environmentFilter = tostring(\"{environment}\")\n| project severity, severityFilter, id, environmentFilter, environment = tostring(properties.resourceDetails.Source)\n| where severityFilter has severity and environmentFilter has environment\n| summarize recommendations = dcount(id) by severity",
                          "size": 3,
                          "title": "Amount of unhealthy recommendations by severity",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{subscriptions}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Low",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "Medium",
                                "color": "orange"
                              },
                              {
                                "seriesName": "High",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "active recommendations - query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\",\"mergeType\":\"table\",\"leftTable\":\"activeRecommendations-query\"}],\"projectRename\":[{\"originalName\":\"[activeRecommendations-query].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].resourceId\",\"mergedName\":\"resourceId\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].source\",\"mergedName\":\"source\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].displayName\",\"mergedName\":\"displayName\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].statusCode\",\"mergedName\":\"statusCode\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].severity\",\"mergedName\":\"severity\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].firstEvaluationDate\",\"mergedName\":\"firstEvaluationDate\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].statusChangeDate\",\"mergedName\":\"statusChangeDate\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[activeRecommendations-query].overduePeriod\",\"mergedName\":\"overduePeriod\",\"fromId\":\"1f2d0d58-95c2-4794-beac-19fbc26e407f\"},{\"originalName\":\"[Added column]\",\"mergedName\":\"Total active recommendations\",\"fromId\":null,\"isNewItem\":true,\"newItemData\":[{\"criteriaContext\":{\"operator\":\"Default\",\"rightValType\":\"column\",\"resultValType\":\"static\",\"resultVal\":\"Total active recommendations\"}}]},{\"originalName\":\"[activeRecommendations-query].severityFilter\",\"mergedName\":\"severityFilter\",\"fromId\":\"unknown\"},{\"originalName\":\"[activeRecommendations-query].environmentFilter\",\"mergedName\":\"environmentFilter\",\"fromId\":\"unknown\"},{\"originalName\":\"[activeRecommendations-query].environment\",\"mergedName\":\"environment\",\"fromId\":\"unknown\"}]}",
                          "size": 0,
                          "title": "Active security recommendations",
                          "queryType": 7,
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true,
                                  "customColumnWidthSetting": "51ch"
                                }
                              },
                              {
                                "columnMatch": "Subscription",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true,
                                  "customColumnWidthSetting": "51ch"
                                }
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "resourceGroup",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "resourceId",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "source",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "displayName",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "statusCode",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "severity",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "High",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Medium",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Low",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "firstEvaluationDate",
                                "formatter": 6
                              },
                              {
                                "columnMatch": "statusChangeDate",
                                "formatter": 6
                              },
                              {
                                "columnMatch": "overduePeriod",
                                "formatter": 8,
                                "formatOptions": {
                                  "min": 0,
                                  "max": 30,
                                  "palette": "greenRed"
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 0
                                  }
                                }
                              },
                              {
                                "columnMatch": "Total active recommendations",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "severityFilter",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "environmentFilter",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "Total active recommendations",
                                "subscriptionId"
                              ],
                              "expandTopLevel": true
                            },
                            "labelSettings": [
                              {
                                "columnId": "resourceGroup",
                                "label": "Resource Group"
                              },
                              {
                                "columnId": "resourceId",
                                "label": "Affected Resource"
                              },
                              {
                                "columnId": "source",
                                "label": "Cloud Environment"
                              },
                              {
                                "columnId": "displayName",
                                "label": "Recommendation Name"
                              },
                              {
                                "columnId": "statusCode",
                                "label": "Status"
                              },
                              {
                                "columnId": "severity",
                                "label": "Severity"
                              },
                              {
                                "columnId": "firstEvaluationDate",
                                "label": "First Evaluation Date"
                              },
                              {
                                "columnId": "statusChangeDate",
                                "label": "Status Change Date"
                              },
                              {
                                "columnId": "overduePeriod",
                                "label": "Unhealthy for [days]"
                              },
                              {
                                "columnId": "Total active recommendations",
                                "label": "Subscription"
                              }
                            ]
                          }
                        },
                        "showPin": false,
                        "name": "activeRecommendations-merge"
                      }
                    ]
                  },
                  "name": "Active recommendations group"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "TabMain",
              "comparison": "isEqualTo",
              "value": "Eventos"
            },
            "name": "Security group"
          }
        ]
      },
      "name": "group - 11"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "fromTemplateId": "sentinel-Workbooks",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
